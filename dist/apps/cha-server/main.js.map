{"version":3,"file":"main.js","mappings":"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","sources":["webpack://cha-hockey/./apps/cha-server/src/app/app.controller.ts","webpack://cha-hockey/./apps/cha-server/src/app/app.module.ts","webpack://cha-hockey/./apps/cha-server/src/app/app.service.ts","webpack://cha-hockey/./libs/api/awards/src/index.ts","webpack://cha-hockey/./libs/api/awards/src/lib/api-awards.module.ts","webpack://cha-hockey/./libs/api/awards/src/lib/controllers/awards.controller.ts","webpack://cha-hockey/./libs/api/awards/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/awards/src/lib/middlewares/awards.middleware.ts","webpack://cha-hockey/./libs/api/awards/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/awards/src/lib/services/api-awards.service.ts","webpack://cha-hockey/./libs/api/awards/src/lib/services/api-user-awards.service.ts","webpack://cha-hockey/./libs/api/awards/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/core/src/index.ts","webpack://cha-hockey/./libs/api/core/src/lib/api-core.module.ts","webpack://cha-hockey/./libs/api/divisions/src/index.ts","webpack://cha-hockey/./libs/api/divisions/src/lib/api-divisions.module.ts","webpack://cha-hockey/./libs/api/divisions/src/lib/controllers/divisions.controller.ts","webpack://cha-hockey/./libs/api/divisions/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/divisions/src/lib/middlewares/divisions.middleware.ts","webpack://cha-hockey/./libs/api/divisions/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/divisions/src/lib/services/api-divisions.service.ts","webpack://cha-hockey/./libs/api/divisions/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/draft-table/src/index.ts","webpack://cha-hockey/./libs/api/draft-table/src/lib/api-draft-table.module.ts","webpack://cha-hockey/./libs/api/draft-table/src/lib/controllers/draft-table.controller.ts","webpack://cha-hockey/./libs/api/draft-table/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/draft-table/src/lib/middlewares/draft-table.middleware.ts","webpack://cha-hockey/./libs/api/draft-table/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/draft-table/src/lib/services/api-draft-table.service.ts","webpack://cha-hockey/./libs/api/draft-table/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/entities/src/index.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/award-type.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/award.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/conference.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/current_season.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/division.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/draft-order.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/draft.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/goalie-rating.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/goalie-stats.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/index.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/player-rating.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/player-stats.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/player.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/salary.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/schedule.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/team-stats.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/team.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/transactions.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/user.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/waivers.entity.ts","webpack://cha-hockey/./libs/api/entry-draft/src/index.ts","webpack://cha-hockey/./libs/api/entry-draft/src/lib/api-entry-draft.module.ts","webpack://cha-hockey/./libs/api/entry-draft/src/lib/controllers/entry-draft.controller.ts","webpack://cha-hockey/./libs/api/entry-draft/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/entry-draft/src/lib/middlewares/entry-draft.middleware.ts","webpack://cha-hockey/./libs/api/entry-draft/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/entry-draft/src/lib/services/api-entry-draft.service.ts","webpack://cha-hockey/./libs/api/entry-draft/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/goalie-ratings/src/index.ts","webpack://cha-hockey/./libs/api/goalie-ratings/src/lib/api-goalie-ratings.module.ts","webpack://cha-hockey/./libs/api/goalie-ratings/src/lib/controllers/goalie-ratings.controller.ts","webpack://cha-hockey/./libs/api/goalie-ratings/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/goalie-ratings/src/lib/middlewares/goalie-ratings.middleware.ts","webpack://cha-hockey/./libs/api/goalie-ratings/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/goalie-ratings/src/lib/services/api-goalie-ratings.service.ts","webpack://cha-hockey/./libs/api/goalie-ratings/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/goalie-stats/src/index.ts","webpack://cha-hockey/./libs/api/goalie-stats/src/lib/api-goalie-stats.module.ts","webpack://cha-hockey/./libs/api/goalie-stats/src/lib/controllers/goalie-stats.controller.ts","webpack://cha-hockey/./libs/api/goalie-stats/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/goalie-stats/src/lib/middlewares/goalie-stats.middleware.ts","webpack://cha-hockey/./libs/api/goalie-stats/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/goalie-stats/src/lib/services/api-goalie-all-time-stats.service.ts","webpack://cha-hockey/./libs/api/goalie-stats/src/lib/services/api-goalie-stats-leaders.service.ts","webpack://cha-hockey/./libs/api/goalie-stats/src/lib/services/api-goalie-stats.service.ts","webpack://cha-hockey/./libs/api/goalie-stats/src/lib/services/api-user-goalie-stats.service.ts","webpack://cha-hockey/./libs/api/goalie-stats/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/league/src/index.ts","webpack://cha-hockey/./libs/api/league/src/lib/api-league.module.ts","webpack://cha-hockey/./libs/api/league/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/league/src/lib/controllers/league.controller.ts","webpack://cha-hockey/./libs/api/league/src/lib/middlewares/league.middleware.ts","webpack://cha-hockey/./libs/api/league/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/league/src/lib/services/league.service.ts","webpack://cha-hockey/./libs/api/nhl/src/index.ts","webpack://cha-hockey/./libs/api/nhl/src/lib/api-nhl.module.ts","webpack://cha-hockey/./libs/api/nhl/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/nhl/src/lib/controllers/nhl.controller.ts","webpack://cha-hockey/./libs/api/nhl/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/nhl/src/lib/middlewares/nhl.middleware.ts","webpack://cha-hockey/./libs/api/nhl/src/lib/services/api-nhl.service.ts","webpack://cha-hockey/./libs/api/nhl/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/player-info/src/index.ts","webpack://cha-hockey/./libs/api/player-info/src/lib/api-player-info.module.ts","webpack://cha-hockey/./libs/api/player-info/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/player-info/src/lib/controllers/player-info.controller.ts","webpack://cha-hockey/./libs/api/player-info/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/player-info/src/lib/middlewares/player-info.middleware.ts","webpack://cha-hockey/./libs/api/player-info/src/lib/services/api-player-info.service.ts","webpack://cha-hockey/./libs/api/player-info/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/player-ratings/src/index.ts","webpack://cha-hockey/./libs/api/player-ratings/src/lib/api-player-ratings.module.ts","webpack://cha-hockey/./libs/api/player-ratings/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/player-ratings/src/lib/controllers/player-ratings.controller.ts","webpack://cha-hockey/./libs/api/player-ratings/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/player-ratings/src/lib/middlewares/player-ratings.middleware.ts","webpack://cha-hockey/./libs/api/player-ratings/src/lib/services/api-player-ratings.service.ts","webpack://cha-hockey/./libs/api/player-ratings/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/player-stats/src/index.ts","webpack://cha-hockey/./libs/api/player-stats/src/lib/api-player-stats.module.ts","webpack://cha-hockey/./libs/api/player-stats/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/player-stats/src/lib/controllers/player-stats.controller.ts","webpack://cha-hockey/./libs/api/player-stats/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/player-stats/src/lib/middlewares/player-stats.middleware.ts","webpack://cha-hockey/./libs/api/player-stats/src/lib/services/api-player-all-time-stats.service.ts","webpack://cha-hockey/./libs/api/player-stats/src/lib/services/api-player-leaders-stats.service.ts","webpack://cha-hockey/./libs/api/player-stats/src/lib/services/api-player-stats.service.ts","webpack://cha-hockey/./libs/api/player-stats/src/lib/services/api-user-player-stats.service.ts","webpack://cha-hockey/./libs/api/player-stats/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/salaries/src/index.ts","webpack://cha-hockey/./libs/api/salaries/src/lib/api-salaries.module.ts","webpack://cha-hockey/./libs/api/salaries/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/salaries/src/lib/controllers/salaries.controller.ts","webpack://cha-hockey/./libs/api/salaries/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/salaries/src/lib/middlewares/salaries.middleware.ts","webpack://cha-hockey/./libs/api/salaries/src/lib/services/api-salaries.service.ts","webpack://cha-hockey/./libs/api/salaries/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/schedule/src/index.ts","webpack://cha-hockey/./libs/api/schedule/src/lib/api-schedule.module.ts","webpack://cha-hockey/./libs/api/schedule/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/schedule/src/lib/controllers/schedule.controller.ts","webpack://cha-hockey/./libs/api/schedule/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/schedule/src/lib/middlewares/schedule.middleware.ts","webpack://cha-hockey/./libs/api/schedule/src/lib/services/api-schedule.service.ts","webpack://cha-hockey/./libs/api/schedule/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/team-stats/src/index.ts","webpack://cha-hockey/./libs/api/team-stats/src/lib/api-team-stats.module.ts","webpack://cha-hockey/./libs/api/team-stats/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/team-stats/src/lib/controllers/team-stats.controller.ts","webpack://cha-hockey/./libs/api/team-stats/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/team-stats/src/lib/middlewares/team-stats.middleware.ts","webpack://cha-hockey/./libs/api/team-stats/src/lib/services/api-all-time-team-stats.service.ts","webpack://cha-hockey/./libs/api/team-stats/src/lib/services/api-team-stats.service.ts","webpack://cha-hockey/./libs/api/team-stats/src/lib/services/api-user-team-stats.service.ts","webpack://cha-hockey/./libs/api/team-stats/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/teams/src/index.ts","webpack://cha-hockey/./libs/api/teams/src/lib/api-teams.module.ts","webpack://cha-hockey/./libs/api/teams/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/teams/src/lib/controllers/teams.controller.ts","webpack://cha-hockey/./libs/api/teams/src/lib/middlewares/teams.middleware.ts","webpack://cha-hockey/./libs/api/teams/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/teams/src/lib/services/teams.service.ts","webpack://cha-hockey/./libs/api/transactions/src/index.ts","webpack://cha-hockey/./libs/api/transactions/src/lib/api-transactions.module.ts","webpack://cha-hockey/./libs/api/transactions/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/transactions/src/lib/controllers/transactions.controller.ts","webpack://cha-hockey/./libs/api/transactions/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/transactions/src/lib/middlewares/transactions.middleware.ts","webpack://cha-hockey/./libs/api/transactions/src/lib/services/api-transactions-trades.service.ts","webpack://cha-hockey/./libs/api/transactions/src/lib/services/api-transactions.service.ts","webpack://cha-hockey/./libs/api/transactions/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/users/src/index.ts","webpack://cha-hockey/./libs/api/users/src/lib/api-users.module.ts","webpack://cha-hockey/./libs/api/users/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/users/src/lib/controllers/users.controller.ts","webpack://cha-hockey/./libs/api/users/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/users/src/lib/middlewares/user.middleware.ts","webpack://cha-hockey/./libs/api/users/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/users/src/lib/services/users.service.ts","webpack://cha-hockey/./libs/api/waivers/src/index.ts","webpack://cha-hockey/./libs/api/waivers/src/lib/api-waivers.module.ts","webpack://cha-hockey/./libs/api/waivers/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/waivers/src/lib/controllers/waivers.controller.ts","webpack://cha-hockey/./libs/api/waivers/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/waivers/src/lib/middlewares/waivers.middleware.ts","webpack://cha-hockey/./libs/api/waivers/src/lib/services/api-waivers.service.ts","webpack://cha-hockey/./libs/api/waivers/src/lib/services/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/awards/award-award-type.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/awards/award-stats.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/awards/award.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/awards/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/awards/user-award.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/drafts/draft-pick.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/drafts/draft-table-stat.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/drafts/draft-table.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/drafts/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/league/conference.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/league/division.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/league/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/league/leagueData.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/nhl/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/nhl/nhl-goalie-stat.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/nhl/nhl-leaders.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/nhl/nhl-player-stat.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/nhl/nhl-player.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/player/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/player/player.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/salaries/goalie-rating.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/salaries/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/salaries/player-rating.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/salaries/salaries-and-ratings.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/salaries/salary.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/schedule/games.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/schedule/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/schedule/schedule-all.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/stats/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/stats/stat-goalie-all.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/stats/stat-goalie-leader.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/stats/stat-goalie-leaders.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/stats/stat-goalies-history.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/stats/stat-player-all.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/stats/stat-player-leader.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/stats/stat-player-leaders.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/stats/stat-players-history.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/stats/stat-team-all.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/stats/stat-team-playoffs.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/stats/stat-team.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/stats/stat-teams-history.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/stats/stat-user-goalies-history.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/stats/stat-user-players-history.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/stats/stat-user-team-record.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/stats/stat-user-teams-history.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/teams/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/teams/team.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/transactions/get-team-transaction.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/transactions/get-transaction.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/transactions/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/user/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/user/user.create.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/user/user.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/waivers/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/waivers/waivers.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/enums/award/awardType.enum.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/enums/award/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/enums/button/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/enums/button/primeButtonClass.enum.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/enums/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/enums/league/conferences.enum.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/enums/league/divisions.enum.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/enums/league/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/enums/logo/cha-logo.enum.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/enums/logo/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/enums/teams/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/enums/teams/team.enum.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/models/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/models/playoffs/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/models/playoffs/playoff-standings.model.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/models/salaries/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/models/salaries/player-salary.model.ts","webpack://cha-hockey/external commonjs \"@nestjs/axios\"","webpack://cha-hockey/external commonjs \"@nestjs/common\"","webpack://cha-hockey/external commonjs \"@nestjs/config\"","webpack://cha-hockey/external commonjs \"@nestjs/core\"","webpack://cha-hockey/external commonjs \"@nestjs/typeorm\"","webpack://cha-hockey/external commonjs \"rxjs\"","webpack://cha-hockey/external commonjs \"tslib\"","webpack://cha-hockey/external commonjs \"typeorm\"","webpack://cha-hockey/external node-commonjs \"path\"","webpack://cha-hockey/webpack/bootstrap","webpack://cha-hockey/./apps/cha-server/src/main.ts"],"sourcesContent":["import { Controller, Get, Render } from '@nestjs/common';\n\n@Controller()\nexport class AppController {\n  @Get()\n  @Render('index')\n  root() {\n    return { message: 'Hello world!' };\n  }\n}\n","import { ApiCoreModule } from '@api/core';\nimport {\n  Users_V2,\n  Teams_V2,\n  Award_Type_V2,\n  Awards_V2,\n  Draft_Order_V2,\n  Drafts_V2,\n  Conferences_V2,\n  Current_Season_V2,\n  Divisions_V2,\n  Players_V2,\n  Goalie_Ratings_V2,\n  Player_Ratings_V2,\n  Salaries_V2,\n  Schedule_V2,\n  Goalies_Stats_V2,\n  Players_Stats_V2,\n  Team_Stats_V2,\n  Transactions_V2,\n  Waivers_V2,\n} from '@api/entities';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: `.env.${process.env.NODE_ENV}`,\n    }),\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      url: process.env.DATABASE_URL,\n      // database: 'defaultdb',\n      // host: process.env.DATABASE_HOST,\n      // username: process.env.DATABASE_USER,\n      // password: process.env.DATABASE_PASSWORD,\n      // port: parseInt(process.env.DATABASE_PORT),\n      synchronize: false,\n      entities: [\n        Users_V2,\n        Teams_V2,\n        Award_Type_V2,\n        Awards_V2,\n        Draft_Order_V2,\n        Drafts_V2,\n        Conferences_V2,\n        Current_Season_V2,\n        Divisions_V2,\n        Players_V2,\n        Goalie_Ratings_V2,\n        Player_Ratings_V2,\n        Salaries_V2,\n        Schedule_V2,\n        Goalies_Stats_V2,\n        Players_Stats_V2,\n        Team_Stats_V2,\n        Transactions_V2,\n        Waivers_V2,\n      ],\n      ssl: {\n        rejectUnauthorized: false,\n      },\n    }),\n    ApiCoreModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Welcome to cha-server!' };\n  }\n\n  getViewName() {\n    return 'index.hbs';\n  }\n}\n","export * from './lib/api-awards.module';","import {\n  Awards_V2,\n  Players_Stats_V2,\n  Goalies_Stats_V2,\n  Team_Stats_V2,\n} from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AwardsController } from './controllers';\nimport { AwardsMiddleware } from './middlewares';\nimport { ApiAwardsService, ApiUserAwardsService } from './services';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      Awards_V2,\n      Players_Stats_V2,\n      Goalies_Stats_V2,\n      Team_Stats_V2,\n    ]),\n  ],\n  controllers: [AwardsController],\n  providers: [ApiAwardsService, ApiUserAwardsService],\n})\nexport class ApiAwardsModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(AwardsMiddleware).forRoutes('*');\n  }\n}\n","import { Awards_V2 } from '@api/entities';\nimport { UserAwardDto } from '@cha/shared/entities';\nimport { Controller, Get, NotFoundException, Param } from '@nestjs/common';\nimport { ApiUserAwardsService } from '../services';\nimport { ApiAwardsService } from '../services/api-awards.service';\n\n@Controller('awards')\nexport class AwardsController {\n  constructor(\n    private awardsService: ApiAwardsService,\n    private userAwardsService: ApiUserAwardsService\n  ) {}\n\n  @Get('/champions')\n  async getChampions(): Promise<Awards_V2[]> {\n    const champions = await this.awardsService.getChampions();\n\n    if (!champions || champions.length < 1) {\n      throw new NotFoundException('Champions Awards not found');\n    }\n    return champions;\n  }\n\n  @Get('/scorers')\n  async getScorerAwards() {\n    const scorers = await this.awardsService.getScorerAwards();\n\n    if (!scorers || scorers.length < 1) {\n      throw new NotFoundException('Scorers Awards not found');\n    }\n    return scorers;\n  }\n\n  @Get('/defense')\n  async getDefenseAwards(): Promise<Awards_V2[]> {\n    const defense = await this.awardsService.getDefenseAwards();\n\n    if (!defense || defense.length < 1) {\n      throw new NotFoundException('Defense Awards not found');\n    }\n    return defense;\n  }\n\n  @Get('/rookies')\n  async getRookieAwards(): Promise<Awards_V2[]> {\n    const rookies = await this.awardsService.getRookieAwards();\n\n    if (!rookies || rookies.length < 1) {\n      throw new NotFoundException('Rookie Awards not found');\n    }\n    return rookies;\n  }\n\n  @Get('/goalies')\n  async getGoalieAwards(): Promise<Awards_V2[]> {\n    const goalies = await this.awardsService.getGoalieAwards();\n\n    if (!goalies || goalies.length < 1) {\n      throw new NotFoundException('Goalie Awards not found');\n    }\n    return goalies;\n  }\n\n  @Get('/gm')\n  async getGmAwards(): Promise<Awards_V2[]> {\n    const gms = await this.awardsService.getGmAwards();\n\n    if (!gms || gms.length < 1) {\n      throw new NotFoundException('GM Awards not found');\n    }\n    return gms;\n  }\n\n  @Get('/season')\n  async getSeasonAwards(): Promise<Awards_V2[]> {\n    const season = await this.awardsService.getSeasonAwards();\n\n    if (!season || season.length < 1) {\n      throw new NotFoundException('Season Awards not found');\n    }\n    return season;\n  }\n\n  @Get('/user/:userId')\n  async getTeamAwardsByUserId(@Param() param): Promise<UserAwardDto[]> {\n    const awardsByUser = await this.userAwardsService.getAwardsByUserId(\n      param.userId\n    );\n\n    if (!awardsByUser || awardsByUser.length < 1) {\n      throw new NotFoundException('Player Stats not found');\n    }\n    return awardsByUser;\n  }\n\n  // @Get('/player/:id')\n  // getPlayerAwardsByPlayerId() {}\n\n  // @Get('/goalie/:id')\n  // getGoalieAwardsByPlayerId() {}\n\n  // @Get('/award-types')\n  // getAwardTypes() {}\n\n  // @Post('/add')\n  // addAwardWinner() {}\n\n  // @Put('/winners/:id')\n  // editAwardWinnerById() {}\n\n  // @Delete('/winners/:id')\n  // deleteAwardWinnerById() {}\n}\n","export * from './awards.controller';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class AwardsMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Awards...');\r\n    next();\r\n  }\r\n}\r\n","export * from './awards.middleware';\r\n","import {\r\n  Awards_V2,\r\n  Players_Stats_V2,\r\n  Goalies_Stats_V2,\r\n  Team_Stats_V2,\r\n} from '@api/entities';\r\nimport { AwardTypeEnum } from '@cha/shared/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiAwardsService {\r\n  constructor(\r\n    @InjectRepository(Awards_V2) private repo: Repository<Awards_V2>,\r\n    @InjectRepository(Players_Stats_V2)\r\n    private playerStatsRepo: Repository<Players_Stats_V2>,\r\n    @InjectRepository(Goalies_Stats_V2)\r\n    private goalieStatsRepo: Repository<Goalies_Stats_V2>,\r\n    @InjectRepository(Team_Stats_V2)\r\n    private teamStatsRepo: Repository<Team_Stats_V2>\r\n  ) {}\r\n\r\n  selectUserOptions = {\r\n    id: true,\r\n    display_season: true,\r\n    cha_season: true,\r\n    award_type: {\r\n      display_name: true,\r\n      id: true,\r\n    },\r\n    team_id: {\r\n      id: true,\r\n      city: true,\r\n      nickname: true,\r\n      teamlogo: true,\r\n      teamcolor: true,\r\n    },\r\n    users_id: {\r\n      firstname: true,\r\n      lastname: true,\r\n    },\r\n  };\r\n\r\n  selectPlayerOptions = {\r\n    id: true,\r\n    display_season: true,\r\n    cha_season: true,\r\n    award_type: {\r\n      display_name: true,\r\n      id: true,\r\n    },\r\n    team_id: {\r\n      city: true,\r\n      nickname: true,\r\n      teamlogo: true,\r\n      teamcolor: true,\r\n    },\r\n    player_id: {\r\n      id: true,\r\n      nhl_id: true,\r\n      firstname: true,\r\n      lastname: true,\r\n    },\r\n    users_id: {\r\n      firstname: true,\r\n      lastname: true,\r\n    },\r\n  };\r\n\r\n  async getChampions(): Promise<Awards_V2[]> {\r\n    return await this.repo.find({\r\n      select: this.selectUserOptions,\r\n      relations: ['users_id', 'team_id', 'award_type'],\r\n      where: {\r\n        award_type: {\r\n          id: AwardTypeEnum.CHAMPION,\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  async getScorerAwards() {\r\n    const scorers = await this.repo.find({\r\n      select: this.selectPlayerOptions,\r\n      relations: ['users_id', 'team_id', 'player_id', 'award_type'],\r\n      where: {\r\n        award_type: {\r\n          id: AwardTypeEnum.SCORER,\r\n        },\r\n      },\r\n    });\r\n\r\n    const scrorersWithStats = await this.setPlayerStats(scorers);\r\n\r\n    return scrorersWithStats;\r\n  }\r\n\r\n  async getDefenseAwards(): Promise<Awards_V2[]> {\r\n    const defense = await this.repo.find({\r\n      select: this.selectPlayerOptions,\r\n      relations: ['users_id', 'team_id', 'player_id', 'award_type'],\r\n      where: {\r\n        award_type: {\r\n          id: AwardTypeEnum.DEFENSE,\r\n        },\r\n      },\r\n    });\r\n\r\n    const defenseWithStats = await this.setPlayerStats(defense);\r\n\r\n    return defenseWithStats;\r\n  }\r\n\r\n  async getRookieAwards(): Promise<Awards_V2[]> {\r\n    const rookies = await this.repo.find({\r\n      select: this.selectPlayerOptions,\r\n      relations: ['users_id', 'team_id', 'player_id', 'award_type'],\r\n      where: {\r\n        award_type: {\r\n          id: AwardTypeEnum.ROOKIE,\r\n        },\r\n      },\r\n    });\r\n\r\n    const rookiesWithStats = await this.setPlayerStats(rookies);\r\n\r\n    return rookiesWithStats;\r\n  }\r\n\r\n  async getGoalieAwards(): Promise<Awards_V2[]> {\r\n    const goalies = await this.repo.find({\r\n      select: this.selectPlayerOptions,\r\n      relations: ['users_id', 'team_id', 'player_id', 'award_type'],\r\n      where: {\r\n        award_type: {\r\n          id: AwardTypeEnum.GOALIE,\r\n        },\r\n      },\r\n    });\r\n\r\n    const goaliesWithStats = await this.setGoalieStats(goalies);\r\n\r\n    return goaliesWithStats;\r\n  }\r\n\r\n  async getGmAwards(): Promise<Awards_V2[]> {\r\n    return await this.repo.find({\r\n      select: this.selectUserOptions,\r\n      relations: ['users_id', 'team_id', 'award_type'],\r\n      where: {\r\n        award_type: {\r\n          id: AwardTypeEnum.GM,\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  async getSeasonAwards(): Promise<Awards_V2[]> {\r\n    const seasonAwards = await this.repo.find({\r\n      select: this.selectUserOptions,\r\n      relations: ['users_id', 'team_id', 'award_type'],\r\n      where: {\r\n        award_type: {\r\n          id: AwardTypeEnum.SEASON,\r\n        },\r\n      },\r\n    });\r\n\r\n    const seasonAwardsWithStats = await this.setSeasonStats(seasonAwards);\r\n\r\n    return seasonAwardsWithStats;\r\n  }\r\n\r\n  private async setPlayerStats(array: Awards_V2[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        stats: await this.getPlayerStats(item.player_id.id, item.cha_season),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getPlayerStats(playerId: number, chaSeason: string) {\r\n    return await this.playerStatsRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        playing_year: true,\r\n        games_played: true,\r\n        goals: true,\r\n        assists: true,\r\n        points: true,\r\n      },\r\n      where: {\r\n        player_id: { id: playerId },\r\n        playing_year: chaSeason,\r\n        season_type: 'Regular',\r\n      },\r\n    });\r\n  }\r\n\r\n  private async setGoalieStats(array: Awards_V2[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        stats: await this.getGoalieStats(item.player_id.id, item.cha_season),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getGoalieStats(playerId: number, chaSeason: string) {\r\n    return await this.goalieStatsRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        player_id: {\r\n          id: true,\r\n          nhl_id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          isgoalie: true,\r\n          is_protected: true,\r\n          isactive: true,\r\n          isdefense: true,\r\n          isforward: true,\r\n        },\r\n        playing_year: true,\r\n        games_played: true,\r\n        wins: true,\r\n        goals_against_avg: true,\r\n        save_pct: true,\r\n      },\r\n      where: {\r\n        player_id: {\r\n          id: playerId,\r\n        },\r\n        playing_year: chaSeason,\r\n        season_type: 'Regular',\r\n      },\r\n    });\r\n  }\r\n\r\n  private async setSeasonStats(array: Awards_V2[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        stats: await this.getSeasonStats(item.team_id.id, item.cha_season),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getSeasonStats(teamId: number, chaSeason: string) {\r\n    return await this.teamStatsRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        playing_year: true,\r\n        games_played: true,\r\n        wins: true,\r\n        goals_for: true,\r\n        goals_against: true,\r\n        points: true,\r\n      },\r\n      where: {\r\n        team_id: { id: teamId },\r\n        playing_year: chaSeason,\r\n        season_type: 'Regular',\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Awards_V2 } from '@api/entities';\r\nimport { UserAwardDto } from '@cha/shared/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiUserAwardsService {\r\n  constructor(\r\n    @InjectRepository(Awards_V2) private repo: Repository<Awards_V2>\r\n  ) {}\r\n\r\n  async getAwardsByUserId(userId: number): Promise<UserAwardDto[]> {\r\n    return await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        display_season: true,\r\n        award_type: {\r\n          id: true,\r\n          display_name: true,\r\n        },\r\n        users_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n        },\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n        },\r\n        team_id: {\r\n          id: true,\r\n          teamlogo: true,\r\n          teamcolor: true,\r\n          teamtextcolor: true,\r\n        },\r\n      },\r\n      relations: ['users_id', 'player_id', 'award_type', 'team_id'],\r\n      where: {\r\n        users_id: {\r\n          id: userId,\r\n        },\r\n      },\r\n      order: {\r\n        display_season: 'DESC',\r\n      },\r\n    });\r\n  }\r\n}\r\n","export * from './api-awards.service';\r\nexport * from './api-user-awards.service';","export * from './lib/api-core.module';\n","import { Module } from '@nestjs/common';\n\nimport { ApiAwardsModule } from '@api/awards';\nimport { ApiUsersModule } from '@api/users';\nimport { ApiDraftTableModule } from '@api/draft-table';\nimport { ApiEntryDraftModule } from '@api/entry-draft';\nimport { ApiGoalieStatsModule } from '@api/goalie-stats';\nimport { ApiLeagueModule } from '@api/league';\nimport { ApiNhlModule } from '@api/nhl';\nimport { ApiPlayerInfoModule } from '@api/player-info';\nimport { ApiPlayerRatingsModule } from '@api/player-ratings';\nimport { ApiPlayerStatsModule } from '@api/player-stats';\nimport { ApiSalariesModule } from '@api/salaries';\nimport { ApiScheduleModule } from '@api/schedule';\nimport { ApiTeamStatsModule } from '@api/team-stats';\nimport { ApiTeamsModule } from '@api/teams';\nimport { ApiTransactionsModule } from '@api/transactions';\nimport { ApiWaiversModule } from '@api/waivers';\nimport { ApiDivisionsModule } from '@api/divisions';\nimport { ApiGoalieRatingsModule } from '@api/goalie-ratings';\n\n@Module({\n  imports: [\n    ApiUsersModule,\n    ApiAwardsModule,\n    ApiDraftTableModule,\n    ApiEntryDraftModule,\n    ApiGoalieStatsModule,\n    ApiLeagueModule,\n    ApiNhlModule,\n    ApiPlayerInfoModule,\n    ApiPlayerRatingsModule,\n    ApiPlayerStatsModule,\n    ApiSalariesModule,\n    ApiScheduleModule,\n    ApiTeamStatsModule,\n    ApiTeamsModule,\n    ApiTransactionsModule,\n    ApiWaiversModule,\n    ApiDivisionsModule,\n    ApiGoalieRatingsModule,\n  ],\n  controllers: [],\n  providers: [],\n  exports: [],\n})\nexport class ApiCoreModule {}\n","export * from './lib/api-divisions.module';\n","import { Divisions_V2 } from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { DivisionsController } from './controllers';\nimport { DivisionsMiddleware } from './middlewares';\nimport { ApiDivisionsService } from './services';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Divisions_V2])],\n  controllers: [DivisionsController],\n  providers: [ApiDivisionsService],\n})\nexport class ApiDivisionsModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(DivisionsMiddleware).forRoutes('*');\n  }\n}\n","import { Divisions_V2 } from '@api/entities';\nimport { Controller, Get, NotFoundException } from '@nestjs/common';\nimport { ApiDivisionsService } from '../services';\n\n@Controller('divisions')\nexport class DivisionsController {\n  constructor(private divisionsService: ApiDivisionsService) {}\n\n  @Get()\n  async getAll(): Promise<Divisions_V2[]> {\n    const divisions = await this.divisionsService.getAll();\n\n    if (!divisions || divisions.length < 1) {\n      throw new NotFoundException('Divisions not found');\n    }\n    return divisions;\n  }\n}\n","export * from './divisions.controller';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class DivisionsMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Divisions...');\r\n    next();\r\n  }\r\n}\r\n","export * from './divisions.middleware';\r\n","import { Divisions_V2 } from '@api/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiDivisionsService {\r\n  constructor(\r\n    @InjectRepository(Divisions_V2) private repo: Repository<Divisions_V2>\r\n  ) {}\r\n\r\n  async getAll(): Promise<Divisions_V2[]> {\r\n    return await this.repo.findBy({ isactive: true });\r\n  }\r\n}\r\n","export * from './api-divisions.service';\r\n","export * from './lib/api-draft-table.module';\n","import { Draft_Order_V2, Team_Stats_V2 } from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { DraftTableController } from './controllers';\nimport { DraftTableMiddleware } from './middlewares';\nimport { ApiDraftTableService } from './services';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Draft_Order_V2, Team_Stats_V2])],\n  controllers: [DraftTableController],\n  providers: [ApiDraftTableService],\n})\nexport class ApiDraftTableModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(DraftTableMiddleware).forRoutes('*');\n  }\n}\n","import { Draft_Order_V2 } from '@api/entities';\nimport { Controller, Get, NotFoundException, Param } from '@nestjs/common';\nimport { ApiDraftTableService } from '../services';\n\n@Controller('draft-table')\nexport class DraftTableController {\n  constructor(private draftTableService: ApiDraftTableService) {}\n\n  @Get('/:draft_year/:playing_year')\n  async getDraftTableByYearByStandings(\n    @Param() param: any\n  ): Promise<Draft_Order_V2[]> {\n    const draftTable =\n      await this.draftTableService.getDraftTableByYearByStandings(\n        param.draft_year,\n        param.playing_year\n      );\n\n    if (!draftTable || draftTable.length < 1) {\n      throw new NotFoundException('Draft Table not found');\n    }\n    return draftTable;\n  }\n}\n","export * from './draft-table.controller';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class DraftTableMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Draft Table...');\r\n    next();\r\n  }\r\n}\r\n","export * from './draft-table.middleware';\r\n","import { Draft_Order_V2, Team_Stats_V2 } from '@api/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiDraftTableService {\r\n  constructor(\r\n    @InjectRepository(Draft_Order_V2) private repo: Repository<Draft_Order_V2>,\r\n    @InjectRepository(Team_Stats_V2)\r\n    private teamStatsRepo: Repository<Team_Stats_V2>\r\n  ) {}\r\n\r\n  async getDraftTableByYearByStandings(\r\n    draftYear: string,\r\n    playingYear: string\r\n  ): Promise<Draft_Order_V2[]> {\r\n    const draftTable = await this.repo.find({\r\n      relations: ['team_id'],\r\n      where: {\r\n        draft_year: draftYear,\r\n      },\r\n      select: {\r\n        team_id: {\r\n          id: true,\r\n          shortname: true,\r\n          city: true,\r\n          nickname: true,\r\n          teamlogo: true,\r\n        },\r\n      },\r\n    });\r\n\r\n    const draftTableWithStandings = await this.setTableStandings(\r\n      draftTable,\r\n      playingYear\r\n    );\r\n\r\n    const draftTableByStandings = this.getDraftByStandings(\r\n      draftTableWithStandings\r\n    );\r\n\r\n    return draftTableByStandings;\r\n  }\r\n\r\n  private async setTableStandings(\r\n    array: Draft_Order_V2[],\r\n    playingYear: string\r\n  ) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        stats: await this.getTeamStats(item.team_id.id, playingYear),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getTeamStats(teamId: number, playingYear: string) {\r\n    return await this.teamStatsRepo.findOne({\r\n      relations: ['team_id'],\r\n      select: {\r\n        id: true,\r\n        wins: true,\r\n        goals_for: true,\r\n        goals_against: true,\r\n        points: true,\r\n      },\r\n      where: {\r\n        team_id: { id: teamId },\r\n        playing_year: playingYear,\r\n        season_type: 'Regular',\r\n      },\r\n    });\r\n  }\r\n\r\n  private getDraftByStandings = (data) => {\r\n    return data\r\n      .sort((a: any, b: any) => {\r\n        if (b.stats.points === a.stats.points) {\r\n          if (b.stats.wins === a.stats.wins) {\r\n            if (\r\n              b.stats.goals_for - b.stats.goals_against ===\r\n              a.stats.goals_for - a.stats.goals_against\r\n            ) {\r\n              return b.stats.goals_for - a.stats.goals_for;\r\n            } else {\r\n              return (\r\n                b.stats.goals_for -\r\n                b.stats.goals_against -\r\n                (a.stats.goals_for - a.stats.goals_against)\r\n              );\r\n            }\r\n          } else {\r\n            return b.stats.wins - a.stats.wins;\r\n          }\r\n        } else {\r\n          return b.stats.points - a.stats.points;\r\n        }\r\n      })\r\n      .reverse();\r\n  };\r\n}\r\n","export * from './api-draft-table.service';\r\n","export * from './lib/entities';\n","import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\r\n\r\n@Entity()\r\nexport class Award_Type_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  award_type!: string;\r\n\r\n  @Column()\r\n  display_name!: string;\r\n}\r\n","import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  Column,\r\n  ManyToOne,\r\n  JoinColumn,\r\n  OneToOne,\r\n} from 'typeorm';\r\nimport { Award_Type_V2 } from './award-type.entity';\r\nimport { Players_Stats_V2 } from './player-stats.entity';\r\nimport { Players_V2 } from './player.entity';\r\nimport { Teams_V2 } from './team.entity';\r\nimport { Users_V2 } from './user.entity';\r\n\r\n@Entity({\r\n  orderBy: {\r\n    display_season: 'DESC',\r\n  },\r\n})\r\nexport class Awards_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  display_season!: string;\r\n\r\n  @OneToOne(() => Players_Stats_V2, (playerStats) => playerStats.playing_year)\r\n  @Column()\r\n  cha_season!: string;\r\n\r\n  @OneToOne(() => Award_Type_V2, (award) => award.id)\r\n  @JoinColumn({ name: 'award_type' })\r\n  award_type!: Award_Type_V2;\r\n\r\n  @ManyToOne(() => Users_V2, (user) => user.id)\r\n  @JoinColumn({ name: 'users_id' })\r\n  users_id!: Users_V2;\r\n\r\n  @ManyToOne(() => Teams_V2, (team) => team.id)\r\n  @JoinColumn({ name: 'team_id' })\r\n  team_id!: Teams_V2;\r\n\r\n  @ManyToOne(() => Players_V2, (player) => player.id)\r\n  @JoinColumn({ name: 'player_id' })\r\n  player_id!: Players_V2;\r\n}\r\n","import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\r\n\r\n@Entity()\r\nexport class Conferences_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  conferencename!: string;\r\n\r\n  @Column()\r\n  isactive!: boolean;\r\n}\r\n","import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\r\n\r\n@Entity()\r\nexport class Current_Season_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  current_year!: string;\r\n\r\n  @Column()\r\n  next_year!: string;\r\n\r\n  @Column()\r\n  prev_year!: string;\r\n\r\n  @Column()\r\n  nhl_year!: string;\r\n\r\n  @Column()\r\n  current_season_type!: string;\r\n\r\n  @Column()\r\n  current_day!: number;\r\n\r\n  @Column()\r\n  current_draft_year!: number;\r\n\r\n  @Column()\r\n  next_draft_year!: number;\r\n\r\n  @Column()\r\n  current_cap!: number;\r\n\r\n  @Column()\r\n  next_cap!: number;\r\n\r\n  @Column()\r\n  min_games!: number;\r\n\r\n  @Column()\r\n  offseason!: boolean;\r\n}\r\n","import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\r\n\r\n@Entity()\r\nexport class Divisions_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  divisionname!: string;\r\n\r\n  @Column()\r\n  conference_id!: number;\r\n\r\n  @Column()\r\n  isactive!: boolean;\r\n}\r\n","import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  Column,\r\n  ManyToOne,\r\n  JoinColumn,\r\n} from 'typeorm';\r\nimport { Teams_V2 } from './team.entity';\r\n\r\n@Entity()\r\nexport class Draft_Order_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @ManyToOne(() => Teams_V2, (team) => team.id)\r\n  @JoinColumn({ name: 'team_id' })\r\n  team_id!: Teams_V2;\r\n\r\n  @Column()\r\n  round_one!: number;\r\n\r\n  @Column()\r\n  round_two!: number;\r\n\r\n  @Column()\r\n  round_three!: number;\r\n\r\n  @Column()\r\n  round_four!: number;\r\n\r\n  @Column()\r\n  round_five!: number;\r\n\r\n  @Column()\r\n  draft_year!: string;\r\n}\r\n","import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  Column,\r\n  ManyToOne,\r\n  JoinColumn,\r\n  Relation,\r\n} from 'typeorm';\r\nimport { Players_V2 } from './player.entity';\r\nimport { Teams_V2 } from './team.entity';\r\n\r\n@Entity()\r\nexport class Drafts_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @ManyToOne(() => Players_V2, (player) => player.id)\r\n  @JoinColumn({ name: 'player_id' })\r\n  player_id!: Relation<Players_V2>;\r\n\r\n  @Column()\r\n  draft_year!: string;\r\n\r\n  @Column()\r\n  draft_round!: number;\r\n\r\n  @Column()\r\n  draft_overall!: number;\r\n\r\n  @ManyToOne(() => Teams_V2, (team) => team.id)\r\n  @JoinColumn({ name: 'team_id' })\r\n  team_id!: Teams_V2;\r\n}\r\n","import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\r\n\r\n@Entity()\r\nexport class Goalie_Ratings_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  player_id!: number;\r\n\r\n  @Column()\r\n  games_played!: number;\r\n\r\n  @Column()\r\n  minutes_played!: number;\r\n\r\n  @Column()\r\n  goals_against_avg!: string;\r\n\r\n  @Column()\r\n  wins!: number;\r\n\r\n  @Column()\r\n  loss!: number;\r\n\r\n  @Column()\r\n  ties!: number;\r\n\r\n  @Column()\r\n  en_goals!: number;\r\n\r\n  @Column()\r\n  shutouts!: number;\r\n\r\n  @Column()\r\n  goals_against!: number;\r\n\r\n  @Column()\r\n  saves!: number;\r\n\r\n  @Column()\r\n  shots_for!: number;\r\n\r\n  @Column()\r\n  save_pct!: string;\r\n\r\n  @Column()\r\n  goals!: number;\r\n\r\n  @Column()\r\n  assists!: number;\r\n\r\n  @Column()\r\n  points!: number;\r\n\r\n  @Column()\r\n  penalty_minutes!: number;\r\n\r\n  @Column()\r\n  skating!: string;\r\n\r\n  @Column()\r\n  speed!: string;\r\n\r\n  @Column()\r\n  passing!: string;\r\n\r\n  @Column()\r\n  playing_year!: string;\r\n}\r\n","import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  Column,\r\n  OneToOne,\r\n  JoinColumn,\r\n  ManyToOne,\r\n} from 'typeorm';\r\nimport { Players_V2 } from './player.entity';\r\nimport { Teams_V2 } from './team.entity';\r\n\r\n@Entity()\r\nexport class Goalies_Stats_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @ManyToOne(() => Players_V2, (player) => player.id, { eager: true })\r\n  @JoinColumn({ name: 'player_id' })\r\n  player_id!: Players_V2;\r\n\r\n  @Column()\r\n  team_name!: string;\r\n\r\n  @Column()\r\n  games_played!: number;\r\n\r\n  @Column()\r\n  minutes_played!: number;\r\n\r\n  @Column()\r\n  goals_against_avg!: string;\r\n\r\n  @Column()\r\n  wins!: number;\r\n\r\n  @Column()\r\n  loss!: number;\r\n\r\n  @Column()\r\n  ties!: number;\r\n\r\n  @Column()\r\n  en_goals!: number;\r\n\r\n  @Column()\r\n  shutouts!: number;\r\n\r\n  @Column()\r\n  goals_against!: number;\r\n\r\n  @Column()\r\n  saves!: number;\r\n\r\n  @Column()\r\n  shots_for!: number;\r\n\r\n  @Column()\r\n  save_pct!: string;\r\n\r\n  @Column()\r\n  goals!: number;\r\n\r\n  @Column()\r\n  assists!: number;\r\n\r\n  @Column()\r\n  points!: number;\r\n\r\n  @Column()\r\n  penalty_minutes!: number;\r\n\r\n  @Column()\r\n  pass_complete!: number;\r\n\r\n  @Column()\r\n  pass_incomplete!: number;\r\n\r\n  @Column()\r\n  pass_attempts!: number;\r\n\r\n  @Column()\r\n  pass_pct!: string;\r\n\r\n  @Column()\r\n  penalty_minor!: number;\r\n\r\n  @Column()\r\n  penalty_minor_coincidental!: number;\r\n\r\n  @Column()\r\n  penalty_major!: number;\r\n\r\n  @Column()\r\n  penalty_fighting_major!: number;\r\n\r\n  @Column()\r\n  penalty_match!: number;\r\n\r\n  @Column()\r\n  penalty_misconduct!: number;\r\n\r\n  @Column()\r\n  penalty_game_misconduct!: number;\r\n\r\n  @Column()\r\n  penalty_gross_misconduct!: number;\r\n\r\n  @Column()\r\n  playing_year!: string;\r\n\r\n  @Column()\r\n  season_type!: 'Regular' | 'Playoffs';\r\n\r\n  @Column()\r\n  player_status!: 'Veteran' | 'Rookie';\r\n\r\n  @OneToOne(() => Teams_V2, (team) => team.shortname)\r\n  team!: Teams_V2;\r\n}\r\n","export * from './award-type.entity';\r\nexport * from './award.entity';\r\nexport * from './conference.entity';\r\nexport * from './current_season.entity';\r\nexport * from './division.entity';\r\nexport * from './draft-order.entity';\r\nexport * from './draft.entity';\r\nexport * from './goalie-rating.entity';\r\nexport * from './goalie-stats.entity';\r\nexport * from './player-rating.entity';\r\nexport * from './player-stats.entity';\r\nexport * from './player.entity';\r\nexport * from './salary.entity';\r\nexport * from './schedule.entity';\r\nexport * from './team-stats.entity';\r\nexport * from './team.entity';\r\nexport * from './transactions.entity';\r\nexport * from './user.entity';\r\nexport * from './waivers.entity';\r\n","import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\r\n\r\n@Entity()\r\nexport class Player_Ratings_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  player_id!: number;\r\n\r\n  @Column()\r\n  games_played!: number;\r\n\r\n  @Column()\r\n  goals!: number;\r\n\r\n  @Column()\r\n  assists!: number;\r\n\r\n  @Column()\r\n  points!: number;\r\n\r\n  @Column()\r\n  plus_minus!: number;\r\n\r\n  @Column()\r\n  penalty_minutes!: number;\r\n\r\n  @Column()\r\n  pp_goals!: number;\r\n\r\n  @Column()\r\n  sh_goals!: number;\r\n\r\n  @Column()\r\n  gw_goals!: number;\r\n\r\n  @Column()\r\n  gt_goals!: number;\r\n\r\n  @Column()\r\n  shots!: number;\r\n\r\n  @Column()\r\n  shooting_pct!: string;\r\n\r\n  @Column()\r\n  game_fatigue!: string;\r\n\r\n  @Column()\r\n  shift_fatigue!: string;\r\n\r\n  @Column()\r\n  c_rate!: string;\r\n\r\n  @Column()\r\n  l_rate!: string;\r\n\r\n  @Column()\r\n  r_rate!: string;\r\n\r\n  @Column()\r\n  ld_rate!: string;\r\n\r\n  @Column()\r\n  rd_rate!: string;\r\n\r\n  @Column()\r\n  shooting!: string;\r\n\r\n  @Column()\r\n  skating!: string;\r\n\r\n  @Column()\r\n  speed!: string;\r\n\r\n  @Column()\r\n  passing!: string;\r\n\r\n  @Column()\r\n  forecheck!: string;\r\n\r\n  @Column()\r\n  physical!: string;\r\n\r\n  @Column()\r\n  intimidation!: string;\r\n\r\n  @Column()\r\n  clear_crease!: string;\r\n\r\n  @Column()\r\n  rock!: string;\r\n\r\n  @Column()\r\n  pk!: string;\r\n\r\n  @Column()\r\n  shot_block!: string;\r\n\r\n  @Column()\r\n  face_off!: string;\r\n\r\n  @Column()\r\n  assist_rating!: string;\r\n\r\n  @Column()\r\n  playing_year!: string;\r\n}\r\n","import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  Column,\r\n  OneToOne,\r\n  ManyToOne,\r\n  JoinColumn,\r\n} from 'typeorm';\r\nimport { Awards_V2 } from './award.entity';\r\nimport { Players_V2 } from './player.entity';\r\n\r\n@Entity()\r\nexport class Players_Stats_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @ManyToOne(() => Players_V2, (player) => player.id, { eager: true })\r\n  @JoinColumn({ name: 'player_id' })\r\n  player_id!: Players_V2;\r\n\r\n  @Column()\r\n  team_name!: string;\r\n\r\n  @Column()\r\n  position!: string;\r\n\r\n  @Column()\r\n  games_played!: number;\r\n\r\n  @Column()\r\n  goals!: number;\r\n\r\n  @Column()\r\n  assists!: number;\r\n\r\n  @Column()\r\n  points!: number;\r\n\r\n  @Column()\r\n  plus_minus!: number;\r\n\r\n  @Column()\r\n  penalty_minutes!: number;\r\n\r\n  @Column()\r\n  pp_goals!: number;\r\n\r\n  @Column()\r\n  sh_goals!: number;\r\n\r\n  @Column()\r\n  gw_goals!: number;\r\n\r\n  @Column()\r\n  gt_goals!: number;\r\n\r\n  @Column()\r\n  shots!: number;\r\n\r\n  @Column()\r\n  shooting_pct!: string;\r\n\r\n  @Column()\r\n  minutes_played!: number;\r\n\r\n  @Column()\r\n  minutes_per_game!: string;\r\n\r\n  @Column()\r\n  fo_won!: number;\r\n\r\n  @Column()\r\n  fo_lost!: number;\r\n\r\n  @Column()\r\n  fo_tied!: number;\r\n\r\n  @Column()\r\n  fo_pct!: string;\r\n\r\n  @Column()\r\n  pass_complete!: number;\r\n\r\n  @Column()\r\n  pass_incomplete!: number;\r\n\r\n  @Column()\r\n  pass_attempts!: number;\r\n\r\n  @Column()\r\n  pass_pct!: string;\r\n\r\n  @Column()\r\n  corner_won!: number;\r\n\r\n  @Column()\r\n  corner_lost!: number;\r\n\r\n  @Column()\r\n  corner_total!: number;\r\n\r\n  @Column()\r\n  corner_pct!: string;\r\n\r\n  @Column()\r\n  fights_won!: number;\r\n\r\n  @Column()\r\n  fights_lost!: number;\r\n\r\n  @Column()\r\n  fights_tied!: number;\r\n\r\n  @Column()\r\n  fights_pct!: string;\r\n\r\n  @Column()\r\n  hits!: number;\r\n\r\n  @Column()\r\n  hit_per_game!: string;\r\n\r\n  @Column()\r\n  blocked_shots!: number;\r\n\r\n  @Column()\r\n  blocked_shot_per_game!: string;\r\n\r\n  @Column()\r\n  current_points_streak!: number;\r\n\r\n  @Column()\r\n  longest_points_streak!: number;\r\n\r\n  @Column()\r\n  penalty_minor!: number;\r\n\r\n  @Column()\r\n  penalty_minor_coincidental!: number;\r\n\r\n  @Column()\r\n  penalty_major!: number;\r\n\r\n  @Column()\r\n  penalty_fighting_major!: number;\r\n\r\n  @Column()\r\n  penalty_match!: number;\r\n\r\n  @Column()\r\n  penalty_misconduct!: number;\r\n\r\n  @Column()\r\n  penalty_game_misconduct!: number;\r\n\r\n  @Column()\r\n  penalty_gross_misconduct!: number;\r\n\r\n  @OneToOne(() => Awards_V2, (award) => award.cha_season)\r\n  @Column()\r\n  playing_year!: string;\r\n\r\n  @Column()\r\n  season_type!: 'Regular' | 'Playoffs';\r\n\r\n  @Column()\r\n  player_status!: 'Veteran' | 'Rookie';\r\n\r\n  // @OneToOne(() => Teams_V2, (team) => team.shortname)\r\n  // team!: Teams_V2;\r\n}\r\n","import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  Column,\r\n  OneToMany,\r\n  AfterInsert,\r\n  AfterUpdate,\r\n  AfterRemove,\r\n  OneToOne,\r\n} from 'typeorm';\r\nimport { Drafts_V2 } from './draft.entity';\r\nimport { Goalie_Ratings_V2 } from './goalie-rating.entity';\r\nimport { Goalies_Stats_V2 } from './goalie-stats.entity';\r\nimport { Player_Ratings_V2 } from './player-rating.entity';\r\nimport { Players_Stats_V2 } from './player-stats.entity';\r\nimport { Salaries_V2 } from './salary.entity';\r\n\r\n@Entity()\r\nexport class Players_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  firstname!: string;\r\n\r\n  @Column()\r\n  lastname!: string;\r\n\r\n  @Column()\r\n  nhl_id!: string;\r\n\r\n  @Column()\r\n  isactive!: boolean;\r\n\r\n  @Column()\r\n  isgoalie!: boolean;\r\n\r\n  @Column()\r\n  isdefense!: boolean;\r\n\r\n  @Column()\r\n  isforward!: boolean;\r\n\r\n  @Column()\r\n  is_protected!: boolean;\r\n\r\n  @Column()\r\n  primary_position!: string;\r\n\r\n  @Column()\r\n  alt_position!: string;\r\n\r\n  @OneToMany(() => Players_Stats_V2, (playerStats) => playerStats.player_id)\r\n  playerStats!: Players_Stats_V2;\r\n\r\n  @OneToMany(() => Goalies_Stats_V2, (goalieStats) => goalieStats.player_id)\r\n  goalieStats!: Goalies_Stats_V2;\r\n\r\n  @OneToOne(() => Salaries_V2, (salary) => salary.player_id)\r\n  salary!: Salaries_V2;\r\n\r\n  @OneToMany(() => Drafts_V2, (draft) => draft.player_id)\r\n  draft!: Drafts_V2;\r\n\r\n  @OneToMany(() => Goalie_Ratings_V2, (goalieRating) => goalieRating.player_id)\r\n  goalieRating!: Goalie_Ratings_V2;\r\n\r\n  @OneToMany(() => Player_Ratings_V2, (playerRating) => playerRating.player_id)\r\n  playerRating!: Player_Ratings_V2;\r\n\r\n  @AfterInsert()\r\n  logInsert() {\r\n    console.log('Inserted Player with id', this.id);\r\n  }\r\n\r\n  @AfterUpdate()\r\n  logUpdate() {\r\n    console.log('Updated Player with id', this.id);\r\n  }\r\n\r\n  @AfterRemove()\r\n  logRemove() {\r\n    console.log('Removed Player');\r\n  }\r\n}\r\n","import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\r\n\r\n@Entity()\r\nexport class Salaries_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  player_id!: string;\r\n\r\n  @Column()\r\n  season_2020!: string;\r\n\r\n  @Column()\r\n  season_2021!: string;\r\n\r\n  @Column()\r\n  season_2022!: string;\r\n\r\n  @Column()\r\n  season_2023!: string;\r\n\r\n  @Column()\r\n  season_2024!: string;\r\n\r\n  @Column()\r\n  season_2025!: string;\r\n\r\n  @Column()\r\n  season_2026!: string;\r\n\r\n  @Column()\r\n  season_2027!: string;\r\n\r\n  @Column()\r\n  season_2028!: string;\r\n\r\n  @Column()\r\n  season_2029!: string;\r\n\r\n  @Column()\r\n  season_2030!: string;\r\n\r\n  @Column()\r\n  season_2031!: string;\r\n\r\n  @Column()\r\n  season_2032!: string;\r\n\r\n  @Column()\r\n  season_2033!: string;\r\n\r\n  @Column()\r\n  season_2034!: string;\r\n\r\n  @Column()\r\n  season_2035!: string;\r\n\r\n  @Column()\r\n  season_2036!: string;\r\n\r\n  @Column()\r\n  season_2037!: string;\r\n\r\n  @Column()\r\n  season_2038!: string;\r\n\r\n  @Column()\r\n  season_2039!: string;\r\n\r\n  @Column()\r\n  season_2040!: string;\r\n}\r\n","import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\r\n\r\n@Entity()\r\nexport class Schedule_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  game_day!: number;\r\n\r\n  @Column()\r\n  vis_team_id!: number;\r\n\r\n  @Column()\r\n  vis_team_game_number!: number;\r\n\r\n  @Column()\r\n  vis_team_score!: number;\r\n\r\n  @Column()\r\n  home_team_id!: number;\r\n\r\n  @Column()\r\n  home_team_game_number!: number;\r\n\r\n  @Column()\r\n  home_team_score!: number;\r\n\r\n  @Column()\r\n  playing_year!: string;\r\n}\r\n","import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  Column,\r\n  ManyToOne,\r\n  JoinColumn,\r\n} from 'typeorm';\r\nimport { Teams_V2 } from './team.entity';\r\n\r\n@Entity()\r\nexport class Team_Stats_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @ManyToOne(() => Teams_V2, (team) => team.id)\r\n  @JoinColumn({ name: 'team_id' })\r\n  team_id!: Teams_V2;\r\n\r\n  @Column()\r\n  games_played!: number;\r\n\r\n  @Column()\r\n  wins!: number;\r\n\r\n  @Column()\r\n  loss!: number;\r\n\r\n  @Column()\r\n  ties!: number;\r\n\r\n  @Column()\r\n  points!: number;\r\n\r\n  @Column()\r\n  goals_for!: number;\r\n\r\n  @Column()\r\n  goals_against!: number;\r\n\r\n  @Column()\r\n  pp_attempts!: number;\r\n\r\n  @Column()\r\n  pp_goals!: number;\r\n\r\n  @Column()\r\n  pp_min!: number;\r\n\r\n  @Column()\r\n  pk_attempts!: number;\r\n\r\n  @Column()\r\n  pk_goals!: number;\r\n\r\n  @Column()\r\n  pk_min!: number;\r\n\r\n  @Column()\r\n  penalty_minutes!: number;\r\n\r\n  @Column()\r\n  sh_goals!: number;\r\n\r\n  @Column()\r\n  home_wins!: number;\r\n\r\n  @Column()\r\n  home_loss!: number;\r\n\r\n  @Column()\r\n  home_ties!: number;\r\n\r\n  @Column()\r\n  road_wins!: number;\r\n\r\n  @Column()\r\n  road_loss!: number;\r\n\r\n  @Column()\r\n  road_ties!: number;\r\n\r\n  @Column()\r\n  div_win!: number;\r\n\r\n  @Column()\r\n  div_loss!: number;\r\n\r\n  @Column()\r\n  div_tie!: number;\r\n\r\n  @Column()\r\n  ot_win!: number;\r\n\r\n  @Column()\r\n  ot_loss!: number;\r\n\r\n  @Column()\r\n  lead_after_two_wins!: number;\r\n\r\n  @Column()\r\n  lead_after_two_loss!: number;\r\n\r\n  @Column()\r\n  lead_after_two_ties!: number;\r\n\r\n  @Column()\r\n  trail_after_two_wins!: number;\r\n\r\n  @Column()\r\n  trail_after_two_loss!: number;\r\n\r\n  @Column()\r\n  trail_after_two_ties!: number;\r\n\r\n  @Column()\r\n  even_after_two_wins!: number;\r\n\r\n  @Column()\r\n  even_after_two_loss!: number;\r\n\r\n  @Column()\r\n  even_after_two_ties!: number;\r\n\r\n  @Column()\r\n  long_win_streak!: number;\r\n\r\n  @Column()\r\n  shots_for!: number;\r\n\r\n  @Column()\r\n  shots_against!: number;\r\n\r\n  @Column()\r\n  face_off_won!: number;\r\n\r\n  @Column()\r\n  face_off_lost!: number;\r\n\r\n  @Column()\r\n  corner_won!: number;\r\n\r\n  @Column()\r\n  corner_lost!: number;\r\n\r\n  @Column()\r\n  pass_complete!: number;\r\n\r\n  @Column()\r\n  pass_incomplete!: number;\r\n\r\n  @Column()\r\n  empty_net!: number;\r\n\r\n  @Column()\r\n  shut_outs!: number;\r\n\r\n  @Column()\r\n  playing_year!: string;\r\n\r\n  @Column()\r\n  season_type!: 'Regular' | 'Playoffs';\r\n}\r\n","import {\r\n  Entity,\r\n  Column,\r\n  PrimaryGeneratedColumn,\r\n  AfterInsert,\r\n  AfterRemove,\r\n  AfterUpdate,\r\n  JoinColumn,\r\n  OneToOne,\r\n} from 'typeorm';\r\nimport { Divisions_V2 } from './division.entity';\r\n\r\n@Entity()\r\nexport class Teams_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  shortname!: string;\r\n\r\n  @Column()\r\n  city!: string;\r\n\r\n  @Column()\r\n  nickname!: string;\r\n\r\n  @Column()\r\n  isactive!: boolean;\r\n\r\n  @Column()\r\n  users_id!: number;\r\n\r\n  @Column()\r\n  teamlogo!: string;\r\n\r\n  @Column()\r\n  teamaltlogo!: string;\r\n\r\n  @Column()\r\n  teamcolor!: string;\r\n\r\n  @Column()\r\n  teamtextcolor!: string;\r\n\r\n  @OneToOne(() => Divisions_V2, (division) => division.id, { eager: true })\r\n  @JoinColumn({ name: 'divisions_id' })\r\n  divisions_id!: Divisions_V2;\r\n\r\n  @AfterInsert()\r\n  logInsert() {\r\n    console.log('Inserted Team with id', this.id);\r\n  }\r\n\r\n  @AfterUpdate()\r\n  logUpdate() {\r\n    console.log('Updated Team with id', this.id);\r\n  }\r\n\r\n  @AfterRemove()\r\n  logRemove() {\r\n    console.log('Removed Team');\r\n  }\r\n}\r\n","import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\r\n\r\n@Entity()\r\nexport class Transactions_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  transaction_date!: Date;\r\n\r\n  @Column()\r\n  team_one_id!: number;\r\n\r\n  @Column('text', { array: true })\r\n  team_one_picks!: string[];\r\n\r\n  @Column('int', { array: true })\r\n  team_one_players!: number[];\r\n\r\n  @Column()\r\n  team_two_id!: number;\r\n\r\n  @Column('text', { array: true })\r\n  team_two_picks!: string[];\r\n\r\n  @Column('int', { array: true })\r\n  team_two_players!: number[];\r\n}\r\n","import {\r\n  Entity,\r\n  Column,\r\n  PrimaryGeneratedColumn,\r\n  AfterInsert,\r\n  AfterRemove,\r\n  AfterUpdate,\r\n} from 'typeorm';\r\n\r\n@Entity()\r\nexport class Users_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  firstname!: string;\r\n\r\n  @Column()\r\n  lastname!: string;\r\n\r\n  @Column()\r\n  email!: string;\r\n\r\n  @Column()\r\n  isadmin!: boolean;\r\n\r\n  @Column()\r\n  isactive!: boolean;\r\n\r\n  @AfterInsert()\r\n  logInsert() {\r\n    console.log('Inserted User with id', this.id);\r\n  }\r\n\r\n  @AfterUpdate()\r\n  logUpdate() {\r\n    console.log('Updated User with id', this.id);\r\n  }\r\n\r\n  @AfterRemove()\r\n  logRemove() {\r\n    console.log('Removed User');\r\n  }\r\n}\r\n","import { Entity, PrimaryGeneratedColumn, Column, OneToOne } from 'typeorm';\r\nimport { Teams_V2 } from './team.entity';\r\n\r\n@Entity()\r\nexport class Waivers_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  team_id!: number;\r\n\r\n  @Column()\r\n  priority_number!: number;\r\n\r\n  @OneToOne(() => Teams_V2, (team) => team.id)\r\n  team!: Teams_V2;\r\n}\r\n","export * from './lib/api-entry-draft.module';\n","import { Drafts_V2 } from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { EntryDraftController } from './controllers';\nimport { EntryDraftMiddleware } from './middlewares';\nimport { ApiEntryDraftService } from './services';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Drafts_V2])],\n  controllers: [EntryDraftController],\n  providers: [ApiEntryDraftService],\n})\nexport class ApiEntryDraftModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(EntryDraftMiddleware).forRoutes('*');\n  }\n}\n","import { Drafts_V2 } from '@api/entities';\nimport { Controller, Get, NotFoundException } from '@nestjs/common';\nimport { ApiEntryDraftService } from '../services';\n\n@Controller('entry-draft')\nexport class EntryDraftController {\n  constructor(private draftService: ApiEntryDraftService) {}\n\n  @Get('/ordered')\n  async getAll(): Promise<Drafts_V2[]> {\n    const entries = await this.draftService.getAll();\n\n    if (!entries || entries.length < 1) {\n      throw new NotFoundException('Entry Draft Table not found');\n    }\n    return entries;\n  }\n}\n","export * from './entry-draft.controller';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class EntryDraftMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Entry Draft Table...');\r\n    next();\r\n  }\r\n}\r\n","export * from './entry-draft.middleware';\r\n","import { Drafts_V2 } from '@api/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiEntryDraftService {\r\n  constructor(\r\n    @InjectRepository(Drafts_V2) private repo: Repository<Drafts_V2>\r\n  ) {}\r\n\r\n  async getAll(): Promise<Drafts_V2[]> {\r\n    const draftTable = await this.repo.find({\r\n      relations: ['team_id', 'player_id'],\r\n      select: {\r\n        team_id: {\r\n          id: true,\r\n          city: true,\r\n          nickname: true,\r\n          teamlogo: true,\r\n        },\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n        },\r\n      },\r\n      order: {\r\n        draft_year: 'DESC',\r\n        draft_round: 'ASC',\r\n        draft_overall: 'ASC',\r\n      },\r\n    });\r\n\r\n    return draftTable;\r\n  }\r\n}\r\n","export * from './api-entry-draft.service';\r\n","export * from './lib/api-goalie-ratings.module';\n","import { Goalie_Ratings_V2, Players_V2 } from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { GoalieRatingsController } from './controllers';\nimport { GoalieRatingsMiddleware } from './middlewares';\nimport { ApiGoalieRatingsService } from './services';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Goalie_Ratings_V2, Players_V2])],\n  controllers: [GoalieRatingsController],\n  providers: [ApiGoalieRatingsService],\n})\nexport class ApiGoalieRatingsModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(GoalieRatingsMiddleware).forRoutes('*');\n  }\n}\n","import { Goalie_Ratings_V2 } from '@api/entities';\nimport {\n  Body,\n  Controller,\n  Get,\n  NotFoundException,\n  Param,\n  Put,\n} from '@nestjs/common';\nimport { ApiGoalieRatingsService } from '../services';\n\n@Controller('goalie-ratings')\nexport class GoalieRatingsController {\n  constructor(private goalieRatingsService: ApiGoalieRatingsService) {}\n\n  @Get('/:season')\n  async getAllRatings(@Param() param): Promise<Goalie_Ratings_V2[]> {\n    const players = await this.goalieRatingsService.getAll(param.season);\n\n    if (!players || players.length < 1) {\n      throw new NotFoundException('ratings not found');\n    }\n    return players;\n  }\n\n  @Put('/:id')\n  updatePlayerById(@Param() param, @Body() body): Promise<Goalie_Ratings_V2> {\n    return this.goalieRatingsService.updatePlayerById(parseInt(param.id), body);\n  }\n}\n","export * from './goalie-ratings.controller';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class GoalieRatingsMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Goalie Ratings...');\r\n    next();\r\n  }\r\n}\r\n","export * from './goalie-ratings.middleware';\r\n","import { Goalie_Ratings_V2, Players_V2 } from '@api/entities';\nimport { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class ApiGoalieRatingsService {\n  constructor(\n    @InjectRepository(Goalie_Ratings_V2)\n    private repo: Repository<Goalie_Ratings_V2>,\n    @InjectRepository(Players_V2)\n    private playersRepo: Repository<Players_V2>\n  ) {}\n\n  async getAll(season: string): Promise<Goalie_Ratings_V2[]> {\n    const ratings = await this.repo.find({\n      where: {\n        playing_year: season,\n      },\n    });\n\n    const ratingsWithPlayerInfo = await this.setPlayerInfo(ratings);\n\n    return ratingsWithPlayerInfo;\n  }\n\n  async updatePlayerById(id: number, attrs: Partial<Goalie_Ratings_V2>) {\n    const player = await this.repo.findOneByOrFail({ id });\n\n    if (!player) {\n      throw new NotFoundException('player not found');\n    }\n\n    Object.assign(player, attrs);\n\n    return this.repo.save(player);\n  }\n\n  private async setPlayerInfo(array: any[]) {\n    return await Promise.all(\n      array.map(async (item) => ({\n        ...item,\n        playerInfo: await this.getPlayerInfo(item.player_id),\n      }))\n    );\n  }\n\n  private async getPlayerInfo(playerId: number) {\n    if (playerId) {\n      return await this.playersRepo.findOne({\n        select: {\n          id: true,\n          firstname: true,\n          lastname: true,\n        },\n        where: {\n          id: playerId,\n        },\n      });\n    } else {\n      return {};\n    }\n  }\n}\n","export * from './api-goalie-ratings.service';\r\n","export * from './lib/api-goalie-stats.module';","import { Goalies_Stats_V2, Teams_V2 } from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { GoalieStatsController } from './controllers';\nimport { GoalieStatsMiddleware } from './middlewares';\nimport {\n  ApiGoalieStatsService,\n  ApiGoalieStatsLeadersService,\n  ApiGoalieAllTimeStatsService,\n  ApiUserGoalieStatsService,\n} from './services';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Goalies_Stats_V2, Teams_V2])],\n  controllers: [GoalieStatsController],\n  providers: [\n    ApiGoalieStatsService,\n    ApiGoalieStatsLeadersService,\n    ApiGoalieAllTimeStatsService,\n    ApiUserGoalieStatsService,\n  ],\n})\nexport class ApiGoalieStatsModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(GoalieStatsMiddleware).forRoutes('*');\n  }\n}\n","import { Goalies_Stats_V2 } from '@api/entities';\nimport {\n  StatGoalieAllDto,\n  StatGoalieLeadersDto,\n  StatGoaliesHistoryDto,\n  StatUserGoaliesHistoryDto,\n} from '@cha/shared/entities';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  NotFoundException,\n  Param,\n  Put,\n} from '@nestjs/common';\nimport {\n  ApiGoalieAllTimeStatsService,\n  ApiGoalieStatsLeadersService,\n  ApiGoalieStatsService,\n  ApiUserGoalieStatsService,\n} from '../services';\n\n@Controller('goalie-stats')\nexport class GoalieStatsController {\n  constructor(\n    private goalieStatsLeadersService: ApiGoalieStatsLeadersService,\n    private goalieStatsService: ApiGoalieStatsService,\n    private goalieAllTimeStatsService: ApiGoalieAllTimeStatsService,\n    private userGoalieStatsService: ApiUserGoalieStatsService\n  ) {}\n\n  @Get('/:season')\n  async getAllPlayers(@Param() param): Promise<StatGoalieAllDto[]> {\n    const players = await this.goalieStatsService.getAll(param.season);\n\n    if (!players || players.length < 1) {\n      throw new NotFoundException('players not found');\n    }\n    return players;\n  }\n\n  @Put('/:season/:id')\n  updatePlayerById(@Param() param, @Body() body): Promise<Goalies_Stats_V2> {\n    return this.goalieStatsService.updateGoalieById(\n      parseInt(param.id),\n      param.season,\n      body\n    );\n  }\n\n  @Delete('/:season/:id')\n  deletePlayer(@Param() param) {\n    return this.goalieStatsService.deleteGoalie(\n      parseInt(param.id),\n      param.season\n    );\n  }\n\n  @Get('/leaders/:season/:seasonType/:minGames')\n  async getGoalieStatsLeaders(@Param() param): Promise<StatGoalieLeadersDto> {\n    const stats = await this.goalieStatsLeadersService.getGoalieStatsLeaders(\n      param.season,\n      param.seasonType,\n      param.minGames\n    );\n\n    if (!stats) {\n      throw new NotFoundException('Player Stats not found');\n    }\n    return stats;\n  }\n\n  @Get('/all/:season/:seasonType')\n  async getAllGoalieStats(@Param() param): Promise<any[]> {\n    const stats = await this.goalieStatsService.getAllGoalieStats(\n      param.season,\n      param.seasonType\n    );\n\n    if (!stats || stats.length < 1) {\n      throw new NotFoundException('Player Stats not found');\n    }\n    return stats;\n  }\n\n  @Get('/current/:season/:seasonType/:playerId')\n  async getGoalieStatsByPlayerId(@Param() param): Promise<any[]> {\n    const stats = await this.goalieStatsService.getGoalieStatsByPlayerId(\n      param.season,\n      param.seasonType,\n      param.playerId\n    );\n\n    if (!stats || stats.length < 1) {\n      throw new NotFoundException('Player Stats not found');\n    }\n    return stats;\n  }\n\n  @Get('/history/season/:seasonType')\n  async getAllTimePlayerStatsBySeasonByType(\n    @Param() param\n  ): Promise<StatGoaliesHistoryDto[]> {\n    const stats =\n      await this.goalieAllTimeStatsService.getAllTimeGoalieStatsBySeasonByType(\n        param.seasonType\n      );\n\n    if (!stats || stats.length < 1) {\n      throw new NotFoundException('Goalie Stats not found');\n    }\n    return stats;\n  }\n\n  @Get('/history/all-time/:seasonType')\n  async getAllTimeGoalieStatsSummedBySeasonByType(\n    @Param() param\n  ): Promise<StatGoaliesHistoryDto[]> {\n    const stats =\n      await this.goalieAllTimeStatsService.getAllTimeGoalieStatsSummedBySeasonByType(\n        param.seasonType\n      );\n\n    if (!stats || stats.length < 1) {\n      throw new NotFoundException('Goalie Stats not found');\n    }\n    return stats;\n  }\n\n  @Get('/user/:userId/history/:seasonType')\n  async getTeamGaoliesStatsBySeasonType(\n    @Param() param\n  ): Promise<StatUserGoaliesHistoryDto[]> {\n    const record =\n      await this.userGoalieStatsService.getUserGoaliesStatsBySeasonType(\n        param.userId,\n        param.seasonType\n      );\n\n    if (!record) {\n      throw new NotFoundException('Team Goalies Stats not found');\n    }\n    return record;\n  }\n\n  @Get('/user/:userId/history/all/:seasonType')\n  async getTeamGoaliesStatsAllTimeBySeasonType(\n    @Param() param\n  ): Promise<StatUserGoaliesHistoryDto[]> {\n    const record =\n      await this.userGoalieStatsService.getUserGoaliesStatsAllTimeBySeasonType(\n        param.userId,\n        param.seasonType\n      );\n\n    if (!record) {\n      throw new NotFoundException('Team Goalies Stats not found');\n    }\n    return record;\n  }\n}\n","export * from './goalie-stats.controller';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class GoalieStatsMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Goalie Stats...');\r\n    next();\r\n  }\r\n}\r\n","export * from './goalie-stats.middleware';\r\n","import { Goalies_Stats_V2, Teams_V2 } from '@api/entities';\r\nimport { StatGoaliesHistoryDto } from '@cha/shared/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectDataSource, InjectRepository } from '@nestjs/typeorm';\r\nimport { DataSource, MoreThan, Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiGoalieAllTimeStatsService {\r\n  constructor(\r\n    @InjectRepository(Goalies_Stats_V2)\r\n    private repo: Repository<Goalies_Stats_V2>,\r\n    @InjectRepository(Teams_V2)\r\n    private teamInfoRepo: Repository<Teams_V2>,\r\n    @InjectDataSource() private dataSource: DataSource\r\n  ) {}\r\n\r\n  async getAllTimeGoalieStatsBySeasonByType(\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ): Promise<StatGoaliesHistoryDto[]> {\r\n    const allStats = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        playing_year: true,\r\n        season_type: true,\r\n        games_played: true,\r\n        minutes_played: true,\r\n        goals_against_avg: true,\r\n        wins: true,\r\n        loss: true,\r\n        ties: true,\r\n        shutouts: true,\r\n        goals_against: true,\r\n        saves: true,\r\n        shots_for: true,\r\n        save_pct: true,\r\n        goals: true,\r\n        assists: true,\r\n        points: true,\r\n        penalty_minutes: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isdefense: true,\r\n          isforward: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        season_type: seasonType,\r\n        games_played: MoreThan(0),\r\n      },\r\n      order: {\r\n        wins: 'DESC',\r\n      },\r\n    });\r\n\r\n    const allStatsWithTeamInfo = await this.setTeamInfo(allStats);\r\n\r\n    const allStatsWithTeamInfoConverted = await this.convertStats(\r\n      allStatsWithTeamInfo,\r\n      false\r\n    );\r\n\r\n    return allStatsWithTeamInfoConverted;\r\n  }\r\n\r\n  async getAllTimeGoalieStatsSummedBySeasonByType(\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ): Promise<StatGoaliesHistoryDto[]> {\r\n    const result = await this.dataSource.query(\r\n      `select\r\n      b.firstname as firstname,\r\n      b.lastname as lastname,\r\n      b.isgoalie as isgoalie,\r\n      b.nhl_id as nhl_id,\r\n      a.player_id as player_id,\r\n      a.season_type as season_type, \r\n      sum(games_played) as games_played, \r\n      sum(wins) as wins, \r\n      sum(loss) as loss, \r\n      sum(ties) as ties, \r\n      sum(minutes_played) as minutes_played, \r\n      sum(en_goals) as en_goals, \r\n      sum(shutouts) as shutouts, \r\n      sum(goals_against) as goals_against, \r\n      sum(saves) as saves, \r\n      sum(shots_for) as shots_for, \r\n      sum(goals) as goals, \r\n      sum(assists) as assists, \r\n      sum(points) as points, \r\n      sum(penalty_minutes) as penalty_minutes\r\n      from\r\n      goalies_stats_v2 as a\r\n      left join players_v2 as b\r\n      on b.id = a.player_id\r\n      where (a.player_id = b.id\r\n      and\r\n      a.games_played > '0'\r\n      and\r\n      a.season_type = '${seasonType}')\r\n      group by b.firstname, b.lastname, b.isgoalie, b.nhl_id, a.player_id, a.season_type\r\n      order by wins DESC`\r\n    );\r\n\r\n    const allTimeStatsConverted = await this.convertStats(result, true);\r\n\r\n    return allTimeStatsConverted;\r\n  }\r\n\r\n  private async setTeamInfo(array: Goalies_Stats_V2[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        teamInfo: await this.getTeamInfo(item.team_name),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getTeamInfo(teamName: string) {\r\n    return await this.teamInfoRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        city: true,\r\n        teamlogo: true,\r\n        nickname: true,\r\n      },\r\n      where: {\r\n        shortname: teamName,\r\n      },\r\n    });\r\n  }\r\n\r\n  private async convertStats(array: any[], raw: boolean) {\r\n    return await Promise.all(\r\n      array.map((stat: any) => ({\r\n        playing_year: stat.playing_year,\r\n        season_type: stat.season_type,\r\n        teamInfo: !raw ? stat['teamInfo'] : null,\r\n        player_id: !raw\r\n          ? stat.player_id\r\n          : {\r\n              id: stat['player_id'],\r\n              firstname: stat['firstname'],\r\n              lastname: stat['lastname'],\r\n              nhl_id: stat['nhl_id'],\r\n              isactive: null,\r\n              isgoalie: stat['isgoalie'],\r\n              isdefense: null,\r\n              isforward: null,\r\n              is_protected: null,\r\n            },\r\n        games_played: Number(stat.games_played),\r\n        minutes_played: Number(stat.minutes_played),\r\n        goals_against_avg: !raw\r\n          ? Number(Number(stat.goals_against_avg).toFixed(2))\r\n          : Number(\r\n              (\r\n                (Number(stat.goals_against) * 60) /\r\n                Number(stat.minutes_played)\r\n              ).toFixed(2)\r\n            ),\r\n        wins: Number(stat.wins),\r\n        loss: Number(stat.loss),\r\n        ties: Number(stat.ties),\r\n        shutouts: Number(stat.shutouts),\r\n        goals_against: Number(stat.goals_against),\r\n        saves: Number(stat.saves),\r\n        shots_for: Number(stat.shots_for),\r\n        save_pct: !raw\r\n          ? Number(Number(stat.save_pct).toFixed(3))\r\n          : Number((Number(stat.saves) / Number(stat.shots_for)).toFixed(3)),\r\n        goals: Number(stat.goals),\r\n        assists: Number(stat.assists),\r\n        points: Number(stat.points),\r\n        penalty_minutes: Number(stat.penalty_minutes),\r\n      }))\r\n    );\r\n  }\r\n}\r\n","import { Goalies_Stats_V2, Teams_V2 } from '@api/entities';\r\nimport {\r\n  StatGoalieLeaderDto,\r\n  StatGoalieLeadersDto,\r\n} from '@cha/shared/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, MoreThan } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiGoalieStatsLeadersService {\r\n  constructor(\r\n    @InjectRepository(Goalies_Stats_V2)\r\n    private repo: Repository<Goalies_Stats_V2>,\r\n    @InjectRepository(Teams_V2)\r\n    private teamInfoRepo: Repository<Teams_V2>\r\n  ) {}\r\n\r\n  async getGoalieStatsLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs',\r\n    minGames: string\r\n  ): Promise<StatGoalieLeadersDto> {\r\n    const shotsFacedLeaders = await this.getShotsFacedLeaders(\r\n      season,\r\n      seasonType,\r\n      minGames\r\n    );\r\n    const gaaLeaders = await this.getGaaLeaders(season, seasonType, minGames);\r\n    const savePctLeaders = await this.getSavePctLeaders(\r\n      season,\r\n      seasonType,\r\n      minGames\r\n    );\r\n    const shutoutsLeaders = await this.getShutoutLeaders(season, seasonType);\r\n    const winsLeaders = await this.getWinsLeaders(season, seasonType);\r\n\r\n    return {\r\n      shotsFaced: shotsFacedLeaders as unknown as StatGoalieLeaderDto[],\r\n      gaa: gaaLeaders as unknown as StatGoalieLeaderDto[],\r\n      savePct: savePctLeaders as unknown as StatGoalieLeaderDto[],\r\n      shutouts: shutoutsLeaders as unknown as StatGoalieLeaderDto[],\r\n      wins: winsLeaders as unknown as StatGoalieLeaderDto[],\r\n    };\r\n  }\r\n\r\n  private async getShotsFacedLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs',\r\n    minGames: string\r\n  ) {\r\n    const shotsFacedLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        shots_for: true,\r\n        team_name: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: {\r\n        player_id: true,\r\n      },\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n        games_played: MoreThan(Number(minGames)),\r\n      },\r\n      order: {\r\n        shots_for: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const shotsFacedLeadersWithTeamInfo = await this.setTeamInfo(\r\n      shotsFacedLeaders\r\n    );\r\n\r\n    return shotsFacedLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getGaaLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs',\r\n    minGames: string\r\n  ) {\r\n    const gaaLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        goals_against_avg: true,\r\n        team_name: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: {\r\n        player_id: true,\r\n      },\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n        games_played: MoreThan(Number(minGames)),\r\n      },\r\n      order: {\r\n        goals_against_avg: 'ASC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const gaaLeadersWithTeamInfo = await this.setTeamInfo(gaaLeaders);\r\n\r\n    return gaaLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getSavePctLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs',\r\n    minGames: string\r\n  ) {\r\n    const savePctLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        save_pct: true,\r\n        team_name: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: {\r\n        player_id: true,\r\n      },\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n        games_played: MoreThan(Number(minGames)),\r\n      },\r\n      order: {\r\n        save_pct: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const savePctLeadersWithTeamInfo = await this.setTeamInfo(savePctLeaders);\r\n\r\n    return savePctLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getShutoutLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const shutoutLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        shutouts: true,\r\n        team_name: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: {\r\n        player_id: true,\r\n      },\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        shutouts: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const shutoutLeadersWithTeamInfo = await this.setTeamInfo(shutoutLeaders);\r\n\r\n    return shutoutLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getWinsLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const winLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        wins: true,\r\n        team_name: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: {\r\n        player_id: true,\r\n      },\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        wins: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const winLeadersWithTeamInfo = await this.setTeamInfo(winLeaders);\r\n\r\n    return winLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async setTeamInfo(array: Goalies_Stats_V2[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        teamInfo: await this.getTeamInfo(item.team_name),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getTeamInfo(teamName: string) {\r\n    return await this.teamInfoRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        city: true,\r\n        teamlogo: true,\r\n        nickname: true,\r\n      },\r\n      where: {\r\n        shortname: teamName,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Goalies_Stats_V2, Teams_V2 } from '@api/entities';\r\nimport { StatGoalieAllDto } from '@cha/shared/entities';\r\nimport { Injectable, NotFoundException } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiGoalieStatsService {\r\n  constructor(\r\n    @InjectRepository(Goalies_Stats_V2)\r\n    private repo: Repository<Goalies_Stats_V2>,\r\n    @InjectRepository(Teams_V2)\r\n    private teamInfoRepo: Repository<Teams_V2>\r\n  ) {}\r\n\r\n  async getAll(season: string): Promise<StatGoalieAllDto[]> {\r\n    const players = await this.repo.find({\r\n      where: {\r\n        playing_year: season,\r\n      },\r\n    });\r\n\r\n    const playersWithTeamInfo = this.setTeamInfo(players);\r\n\r\n    return playersWithTeamInfo;\r\n  }\r\n\r\n  async updateGoalieById(\r\n    id: number,\r\n    season: string,\r\n    attrs: Partial<Goalies_Stats_V2>\r\n  ) {\r\n    const player = await this.repo.findOneByOrFail({\r\n      player_id: {\r\n        id: id,\r\n      },\r\n      playing_year: season,\r\n    });\r\n\r\n    if (!player) {\r\n      throw new NotFoundException('goalie not found');\r\n    }\r\n\r\n    Object.assign(player, attrs);\r\n\r\n    return this.repo.save(player);\r\n  }\r\n\r\n  async deleteGoalie(id: number, season: string): Promise<Goalies_Stats_V2> {\r\n    const player = await this.repo.findOneByOrFail({\r\n      id,\r\n      playing_year: season,\r\n    });\r\n\r\n    if (!player) {\r\n      throw new NotFoundException('goalie not found');\r\n    }\r\n    return this.repo.remove(player);\r\n  }\r\n\r\n  async getAllGoalieStats(season: string, seasonType: 'Regular' | 'Playoffs') {\r\n    const allGoalieStats = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        games_played: true,\r\n        minutes_played: true,\r\n        goals_against_avg: true,\r\n        wins: true,\r\n        loss: true,\r\n        ties: true,\r\n        en_goals: true,\r\n        shutouts: true,\r\n        goals_against: true,\r\n        saves: true,\r\n        shots_for: true,\r\n        save_pct: true,\r\n        goals: true,\r\n        assists: true,\r\n        points: true,\r\n        penalty_minutes: true,\r\n        pass_pct: true,\r\n        team_name: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: {\r\n        player_id: true,\r\n      },\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        wins: 'DESC',\r\n      },\r\n    });\r\n\r\n    const goalieStatsWithTeamInfo = await this.setTeamInfo(allGoalieStats);\r\n\r\n    const goalieStatsWithTeamInfoConverted = await this.convertStats(\r\n      goalieStatsWithTeamInfo\r\n    );\r\n\r\n    return goalieStatsWithTeamInfoConverted;\r\n  }\r\n\r\n  async getGoalieStatsByPlayerId(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs',\r\n    playerId: number\r\n  ) {\r\n    const allGoalieStats = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        games_played: true,\r\n        minutes_played: true,\r\n        goals_against_avg: true,\r\n        wins: true,\r\n        loss: true,\r\n        ties: true,\r\n        en_goals: true,\r\n        shutouts: true,\r\n        goals_against: true,\r\n        saves: true,\r\n        shots_for: true,\r\n        save_pct: true,\r\n        goals: true,\r\n        assists: true,\r\n        points: true,\r\n        penalty_minutes: true,\r\n        pass_pct: true,\r\n        team_name: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: {\r\n        player_id: true,\r\n      },\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n        player_id: {\r\n          id: playerId,\r\n        },\r\n      },\r\n      order: {\r\n        wins: 'DESC',\r\n      },\r\n    });\r\n\r\n    const goalieStatsWithTeamInfo = await this.setTeamInfo(allGoalieStats);\r\n\r\n    const goalieStatsWithTeamInfoConverted = await this.convertStats(\r\n      goalieStatsWithTeamInfo\r\n    );\r\n\r\n    return goalieStatsWithTeamInfoConverted;\r\n  }\r\n\r\n  private async setTeamInfo(array: Goalies_Stats_V2[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        teamInfo: await this.getTeamInfo(item.team_name),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getTeamInfo(teamName: string) {\r\n    return await this.teamInfoRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        city: true,\r\n        teamlogo: true,\r\n        nickname: true,\r\n        shortname: true,\r\n      },\r\n      where: {\r\n        shortname: teamName,\r\n      },\r\n    });\r\n  }\r\n\r\n  private async convertStats(array: Goalies_Stats_V2[]) {\r\n    return await Promise.all(\r\n      array.map((stat: Goalies_Stats_V2) => ({\r\n        ...stat,\r\n        games_played: Number(stat.games_played),\r\n        minutes_played: Number(stat.minutes_played),\r\n        goals_against_avg: Number(Number(stat.goals_against_avg).toFixed(2)),\r\n        wins: Number(stat.wins),\r\n        loss: Number(stat.loss),\r\n        ties: Number(stat.ties),\r\n        en_goals: Number(stat.en_goals),\r\n        shutouts: Number(stat.shutouts),\r\n        goals_against: Number(stat.goals_against),\r\n        saves: Number(stat.saves),\r\n        shots_for: Number(stat.shots_for),\r\n        save_pct: Number(Number(stat.save_pct).toFixed(3)),\r\n        goals: Number(stat.goals),\r\n        assists: Number(stat.assists),\r\n        points: Number(stat.points),\r\n        penalty_minutes: Number(stat.penalty_minutes),\r\n        pass_pct: Number(stat.pass_pct),\r\n      }))\r\n    );\r\n  }\r\n}\r\n","import { Goalies_Stats_V2, Teams_V2 } from '@api/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectDataSource, InjectRepository } from '@nestjs/typeorm';\r\nimport { DataSource, Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiUserGoalieStatsService {\r\n  constructor(\r\n    @InjectRepository(Goalies_Stats_V2)\r\n    private repo: Repository<Goalies_Stats_V2>,\r\n    @InjectRepository(Teams_V2)\r\n    private teamInfoRepo: Repository<Teams_V2>,\r\n    @InjectDataSource() private dataSource: DataSource\r\n  ) {}\r\n\r\n  async getUserGoaliesStatsBySeasonType(\r\n    userId: number,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const userTeams = await this.teamInfoRepo.findBy({ users_id: userId });\r\n\r\n    const userTeamsWithGoalieStats = await this.setGoalieStats(\r\n      userTeams,\r\n      seasonType\r\n    );\r\n\r\n    const userTeamsWithGoaliesStatsConverted =\r\n      await this.setConvertedGoaliesStats(userTeamsWithGoalieStats, false);\r\n\r\n    return userTeamsWithGoaliesStatsConverted;\r\n  }\r\n\r\n  async getUserGoaliesStatsAllTimeBySeasonType(\r\n    userId: number,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const userTeams = await this.teamInfoRepo.findBy({ users_id: userId });\r\n\r\n    const userTeamsWithGoalieStats = await this.setGoalieAllTimeStats(\r\n      userTeams,\r\n      seasonType\r\n    );\r\n\r\n    const userTeamsWithGoaliesStatsConverted =\r\n      await this.setConvertedGoaliesStats(userTeamsWithGoalieStats, true);\r\n\r\n    return userTeamsWithGoaliesStatsConverted;\r\n  }\r\n\r\n  private async setGoalieStats(\r\n    array: Teams_V2[],\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        goalieStats: await this.getGoalieStats(item.shortname, seasonType),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async setGoalieAllTimeStats(\r\n    array: Teams_V2[],\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        goalieStats: await this.getGoalieAllTimeStats(\r\n          item.shortname,\r\n          seasonType\r\n        ),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getGoalieAllTimeStats(\r\n    teamShortName: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    return await this.dataSource.query(\r\n      `select\r\n      b.firstname as firstname,\r\n      b.lastname as lastname,\r\n      b.isgoalie as isgoalie,\r\n      b.nhl_id as nhl_id,\r\n      a.player_id as player_id,\r\n      a.season_type as season_type, \r\n      sum(games_played) as games_played, \r\n      sum(wins) as wins, \r\n      sum(loss) as loss, \r\n      sum(ties) as ties, \r\n      sum(minutes_played) as minutes_played, \r\n      sum(en_goals) as en_goals, \r\n      sum(shutouts) as shutouts, \r\n      sum(goals_against) as goals_against, \r\n      sum(saves) as saves, \r\n      sum(shots_for) as shots_for, \r\n      sum(goals) as goals, \r\n      sum(assists) as assists, \r\n      sum(points) as points, \r\n      sum(penalty_minutes) as penalty_minutes\r\n      from\r\n      goalies_stats_v2 as a\r\n      left join players_v2 as b\r\n      on b.id = a.player_id\r\n      where (a.player_id = b.id\r\n      and\r\n      a.games_played > '0'\r\n      and\r\n      a.season_type = '${seasonType}'\r\n      and a.team_name = '${teamShortName}')\r\n      group by b.firstname, b.lastname, b.isgoalie, b.nhl_id, a.player_id, a.season_type\r\n      order by wins DESC`\r\n    );\r\n  }\r\n\r\n  private async getGoalieStats(\r\n    teamShortName: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    return await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        games_played: true,\r\n        minutes_played: true,\r\n        goals_against_avg: true,\r\n        wins: true,\r\n        loss: true,\r\n        ties: true,\r\n        en_goals: true,\r\n        shutouts: true,\r\n        goals_against: true,\r\n        saves: true,\r\n        shots_for: true,\r\n        save_pct: true,\r\n        goals: true,\r\n        assists: true,\r\n        points: true,\r\n        penalty_minutes: true,\r\n        pass_pct: true,\r\n        team_name: true,\r\n        playing_year: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: {\r\n        player_id: true,\r\n      },\r\n      where: {\r\n        team_name: teamShortName,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        wins: 'DESC',\r\n      },\r\n    });\r\n  }\r\n\r\n  private async setConvertedGoaliesStats(array: any[], raw: boolean) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        goalieStats: await this.convertStats(item.goalieStats, raw, item),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async convertStats(\r\n    array: Goalies_Stats_V2[],\r\n    raw: boolean,\r\n    teamInfo: any\r\n  ) {\r\n    return await Promise.all(\r\n      array.map((stat: Goalies_Stats_V2) => ({\r\n        playing_year: stat.playing_year,\r\n        season_type: stat.season_type,\r\n        teamInfo: !raw\r\n          ? {\r\n              id: teamInfo.id,\r\n              city: teamInfo.city,\r\n              nickname: teamInfo.nickname,\r\n              teamlogo: teamInfo.teamlogo,\r\n            }\r\n          : null,\r\n        player_id: !raw\r\n          ? stat.player_id\r\n          : {\r\n              id: stat['player_id'],\r\n              firstname: stat['firstname'],\r\n              lastname: stat['lastname'],\r\n              nhl_id: stat['nhl_id'],\r\n              isactive: null,\r\n              isgoalie: stat['isgoalie'],\r\n              isdefense: null,\r\n              isforward: null,\r\n              is_protected: null,\r\n            },\r\n        games_played: Number(stat.games_played),\r\n        minutes_played: Number(stat.minutes_played),\r\n        goals_against_avg: !raw\r\n          ? Number(Number(stat.goals_against_avg).toFixed(2))\r\n          : Number(\r\n              (\r\n                (Number(stat.goals_against) * 60) /\r\n                Number(stat.minutes_played)\r\n              ).toFixed(2)\r\n            ),\r\n        wins: Number(stat.wins),\r\n        loss: Number(stat.loss),\r\n        ties: Number(stat.ties),\r\n        shutouts: Number(stat.shutouts),\r\n        goals_against: Number(stat.goals_against),\r\n        saves: Number(stat.saves),\r\n        shots_for: Number(stat.shots_for),\r\n        save_pct: !raw\r\n          ? Number(Number(stat.save_pct).toFixed(3))\r\n          : Number((Number(stat.saves) / Number(stat.shots_for)).toFixed(3)),\r\n        goals: Number(stat.goals),\r\n        assists: Number(stat.assists),\r\n        points: Number(stat.points),\r\n        penalty_minutes: Number(stat.penalty_minutes),\r\n      }))\r\n    );\r\n  }\r\n}\r\n","export * from './api-goalie-stats-leaders.service';\r\nexport * from './api-goalie-stats.service';\r\nexport * from './api-goalie-all-time-stats.service';\r\nexport * from './api-user-goalie-stats.service';\r\n","export * from './lib/api-league.module';\n","import { Current_Season_V2 } from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { LeagueController } from './controllers';\nimport { LeagueMiddleware } from './middlewares/league.middleware';\nimport { LeagueService } from './services';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Current_Season_V2])],\n  controllers: [LeagueController],\n  providers: [LeagueService],\n})\nexport class ApiLeagueModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(LeagueMiddleware).forRoutes('*');\n  }\n}\n","export * from './league.controller';\r\n","import { LeagueDataDto } from '@cha/shared/entities';\nimport { Body, Controller, Get, NotFoundException, Put } from '@nestjs/common';\nimport { LeagueService } from '../services';\n\n@Controller('league')\nexport class LeagueController {\n  constructor(private leagueService: LeagueService) {}\n\n  @Get('/current-data')\n  async getCurrentData(): Promise<LeagueDataDto> {\n    const data = await this.leagueService.getCurrentLeagueData();\n\n    if (!data) {\n      throw new NotFoundException('League Data not found');\n    }\n    return data;\n  }\n\n  @Put('/current-data')\n  updateUserById(@Body() body): Promise<LeagueDataDto> {\n    return this.leagueService.updateCurrentLeagueData(body);\n  }\n}\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class LeagueMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request League...');\r\n    next();\r\n  }\r\n}","export * from './league.service';\r\n","import { Current_Season_V2 } from '@api/entities';\r\nimport { LeagueDataDto } from '@cha/shared/entities';\r\nimport { Injectable, NotFoundException } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class LeagueService {\r\n  constructor(\r\n    @InjectRepository(Current_Season_V2)\r\n    private repo: Repository<Current_Season_V2>\r\n  ) {}\r\n\r\n  async getCurrentLeagueData(): Promise<LeagueDataDto> {\r\n    return (await this.repo.find()) as unknown as LeagueDataDto;\r\n  }\r\n\r\n  async updateCurrentLeagueData(attrs: Partial<Current_Season_V2>) {\r\n    const data = await this.repo.findOneByOrFail({ id: 1 });\r\n\r\n    if (!data) {\r\n      throw new NotFoundException('data not found');\r\n    }\r\n\r\n    Object.assign(data, attrs);\r\n\r\n    return this.repo.save(data);\r\n  }\r\n}\r\n","export * from './lib/api-nhl.module';\n","import { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { HttpModule } from '@nestjs/axios';\nimport { NhlController } from './controllers';\nimport { NhlMiddleware } from './middlewares';\nimport { ApiNhlService } from './services';\n\n@Module({\n  imports: [HttpModule],\n  controllers: [NhlController],\n  providers: [ApiNhlService],\n})\nexport class ApiNhlModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(NhlMiddleware).forRoutes('*');\n  }\n}\n","export * from './nhl.controller';\r\n","import { Controller, Get, NotFoundException, Param } from '@nestjs/common';\nimport { ApiNhlService } from '../services';\n\n@Controller('nhl')\nexport class NhlController {\n  constructor(private nhlService: ApiNhlService) {}\n\n  @Get('/nhl-leaders/:season/:playerType/:statType')\n  async getNhlLeaders(@Param() param) {\n    const nhlLeaders = await this.nhlService.getNhlLeaders(\n      param.playerType,\n      param.statType,\n      param.season\n    );\n\n    if (!nhlLeaders) {\n      throw new NotFoundException('Nhl Leaders not found');\n    }\n    return nhlLeaders;\n  }\n\n  @Get('/nhl-leaders/:season/:playerType/:statType/:minGames')\n  async getNhlGoalieLeaders(@Param() param) {\n    const nhlLeaders = await this.nhlService.getNhlGoalieLeaders(\n      param.playerType,\n      param.statType,\n      param.season,\n      param.minGames\n    );\n\n    if (!nhlLeaders) {\n      throw new NotFoundException('Nhl Leaders not found');\n    }\n    return nhlLeaders;\n  }\n\n  @Get('/nhl-rookie-leaders/:season/:playerType/:statType')\n  async getNhlRookieLeaders(@Param() param) {\n    const nhlLeaders = await this.nhlService.getNhlRookieLeaders(\n      param.playerType,\n      param.statType,\n      param.season\n    );\n\n    if (!nhlLeaders) {\n      throw new NotFoundException('Nhl Leaders not found');\n    }\n    return nhlLeaders;\n  }\n\n  @Get('/nhl-defense-leaders/:season/:playerType/:statType')\n  async getNhlDefenseLeaders(@Param() param) {\n    const nhlLeaders = await this.nhlService.getNhlDefenseLeaders(\n      param.playerType,\n      param.statType,\n      param.season\n    );\n\n    if (!nhlLeaders) {\n      throw new NotFoundException('Nhl Leaders not found');\n    }\n    return nhlLeaders;\n  }\n\n  @Get('/nhl-summary/sportsnet/:season/:seasonType')\n  async getNhlSummaryFromSportsnet(@Param() param) {\n    const nhlLeaders = await this.nhlService.getNhlSummaryFromSportsnet(\n      param.season,\n      param.seasonType\n    );\n\n    if (!nhlLeaders) {\n      throw new NotFoundException('Nhl Summary not found');\n    }\n    return nhlLeaders;\n  }\n\n  @Get('/nhl-summary/rookies/:season/:player/:statsType/:sort/:start/:pageSize')\n  async getNhlRookieSummary(@Param() param) {\n    const nhlLeaders = await this.nhlService.getNhlRookieSummary(\n      param.season,\n      param.player,\n      param.statsType,\n      param.sort,\n      param.start,\n      param.pageSize\n    );\n\n    if (!nhlLeaders) {\n      throw new NotFoundException('Nhl Rookie Summary not found');\n    }\n    return nhlLeaders;\n  }\n\n  @Get('/player/stats/:playerId/:season')\n  async getNhlPlayerStatsByPlayerId(@Param() param) {\n    const stats = await this.nhlService.getNhlPlayerStatsByPlayerId(\n      param.playerId,\n      param.season\n    );\n\n    if (!stats) {\n      throw new NotFoundException('Nhl Player Stat not found');\n    }\n    return stats;\n  }\n}\n","export * from './nhl.middleware';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class NhlMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Nhl...');\r\n    next();\r\n  }\r\n}\r\n","import { HttpService } from '@nestjs/axios';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { AxiosResponse } from 'axios';\r\nimport { map, Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ApiNhlService {\r\n  constructor(private httpService: HttpService) {}\r\n\r\n  nhlCOM = 'https://api.nhle.com/stats/rest/en/leaders';\r\n  nhlAPI = 'https://statsapi.web.nhl.com/api/v1/people';\r\n  nhlComSummary = 'https://api.nhle.com/stats/rest/en';\r\n  sportsNet = 'https://mobile-statsv2.sportsnet.ca/web_player_table';\r\n\r\n  getNhlLeaders(\r\n    playerType: string,\r\n    statType: string,\r\n    season: string\r\n  ): Observable<AxiosResponse<any[]>> {\r\n    const leaders = this.httpService\r\n      .get(\r\n        `${this.nhlCOM}/${playerType}s/${statType}?cayenneExp=season=${season}%20and%20gameType=2`\r\n      )\r\n      .pipe(map((response) => response.data));\r\n\r\n    return leaders;\r\n  }\r\n\r\n  getNhlGoalieLeaders(\r\n    playerType: string,\r\n    statType: string,\r\n    season: string,\r\n    minGames: string\r\n  ): Observable<AxiosResponse<any[]>> {\r\n    const leaders = this.httpService\r\n      .get(\r\n        `${this.nhlCOM}/${playerType}s/${statType}?cayenneExp=season=${season}%20and%20gameType=2%20and%20gamesPlayed%20%3E=%20${minGames}`\r\n      )\r\n      .pipe(map((response) => response.data));\r\n\r\n    return leaders;\r\n  }\r\n\r\n  getNhlRookieLeaders(\r\n    playerType: string,\r\n    statType: string,\r\n    season: string\r\n  ): Observable<AxiosResponse<any[]>> {\r\n    const leaders = this.httpService\r\n      .get(\r\n        `${this.nhlCOM}/${playerType}s/${statType}?cayenneExp=season=${season}%20and%20gameType=2%20and%20isRookie%20=%20%27Y%27`\r\n      )\r\n      .pipe(map((response) => response.data));\r\n\r\n    return leaders;\r\n  }\r\n\r\n  getNhlDefenseLeaders(\r\n    playerType: string,\r\n    statType: string,\r\n    season: string\r\n  ): Observable<AxiosResponse<any[]>> {\r\n    const leaders = this.httpService\r\n      .get(\r\n        `${this.nhlCOM}/${playerType}s/${statType}?cayenneExp=season=${season}%20and%20gameType=2%20and%20player.positionCode%20=%20%27D%27`\r\n      )\r\n      .pipe(map((response) => response.data));\r\n\r\n    return leaders;\r\n  }\r\n\r\n  getNhlSummaryFromSportsnet(\r\n    season: string,\r\n    seasonType: string\r\n  ): Observable<AxiosResponse<any[]>> {\r\n    const leaders = this.httpService\r\n      .get(\r\n        `${this.sportsNet}?league=nhl&season=${season}&season_type=${seasonType}`\r\n      )\r\n      .pipe(map((response) => response.data));\r\n\r\n    return leaders;\r\n  }\r\n\r\n  getNhlRookieSummary(\r\n    season: string,\r\n    player: string,\r\n    statsType: string,\r\n    sort: string,\r\n    start: string,\r\n    pageSize: string\r\n  ): Observable<AxiosResponse<any[]>> {\r\n    const leaders = this.httpService\r\n      .get(\r\n        `${this.nhlComSummary}/${player}/summary?isAggregate=false&isGame=false&sort=%5B%7B%22property%22:%22${statsType}%22,%22direction%22:%22${sort}%22%7D%5D&start=${start}&limit=${pageSize}&cayenneExp=gameTypeId=2%20and%20isRookie=%221%22%20and%20seasonId%3C=${season}%20and%20seasonId%3E=${season}`\r\n      )\r\n      .pipe(map((response) => response.data));\r\n\r\n    return leaders;\r\n  }\r\n\r\n  getNhlPlayerStatsByPlayerId(\r\n    playerId: number,\r\n    season: string\r\n  ): Observable<AxiosResponse<any[]>> {\r\n    const stats = this.httpService\r\n      .get(\r\n        `${this.nhlAPI}/${playerId}/stats?stats=statsSingleSeason&season=${season}`\r\n      )\r\n      .pipe(map((response) => response.data.stats[0].splits));\r\n\r\n    return stats;\r\n  }\r\n}\r\n","export * from './api-nhl.service';\r\n","export * from './lib/api-player-info.module';","import { Players_V2 } from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { PlayerInfoController } from './controllers';\nimport { PlayerInfoMiddleware } from './middlewares';\nimport { ApiPlayerInfoService } from './services';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Players_V2])],\n  controllers: [PlayerInfoController],\n  providers: [ApiPlayerInfoService],\n})\nexport class ApiPlayerInfoModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(PlayerInfoMiddleware).forRoutes('*');\n  }\n}\n","export * from './player-info.controller';\r\n","import { PlayerCreateDto, PlayerDto } from '@cha/shared/entities';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  NotFoundException,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\nimport { ApiPlayerInfoService } from '../services';\n\n@Controller('player-info')\nexport class PlayerInfoController {\n  constructor(private playerInfoService: ApiPlayerInfoService) {}\n\n  @Get()\n  async getAllPlayers(): Promise<PlayerDto[]> {\n    const players = await this.playerInfoService.getAll();\n\n    if (!players || players.length < 1) {\n      throw new NotFoundException('players not found');\n    }\n    return players;\n  }\n\n  @Put('/:id')\n  updatePlayerById(@Param() param, @Body() body): Promise<PlayerDto> {\n    return this.playerInfoService.updatePlayerById(parseInt(param.id), body);\n  }\n\n  @Post('/add')\n  addPlayer(@Body() body: PlayerCreateDto) {\n    return this.playerInfoService.addPlayer(body);\n  }\n\n  @Delete('/:id')\n  deletePlayer(@Param() param) {\n    return this.playerInfoService.deletePlayer(parseInt(param.id));\n  }\n}\n","export * from './player-info.middleware';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class PlayerInfoMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Player Info...');\r\n    next();\r\n  }\r\n}\r\n","import { Players_V2 } from '@api/entities';\nimport { PlayerCreateDto } from '@cha/shared/entities';\nimport { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class ApiPlayerInfoService {\n  constructor(\n    @InjectRepository(Players_V2) private repo: Repository<Players_V2>\n  ) {}\n\n  async getAll(): Promise<Players_V2[]> {\n    return await this.repo.find();\n  }\n\n  async updatePlayerById(id: number, attrs: Partial<Players_V2>) {\n    const player = await this.repo.findOneByOrFail({ id });\n\n    if (!player) {\n      throw new NotFoundException('player not found');\n    }\n\n    Object.assign(player, attrs);\n\n    return this.repo.save(player);\n  }\n\n  async addPlayer(body: PlayerCreateDto) {\n    const player = await this.repo.create(body);\n\n    return this.repo.save(player);\n  }\n\n  async deletePlayer(id: number): Promise<Players_V2> {\n    const player = await this.repo.findOneByOrFail({ id });\n\n    if (!player) {\n      throw new NotFoundException('player not found');\n    }\n    return this.repo.remove(player);\n  }\n}\n","export * from './api-player-info.service';\r\n","export * from './lib/api-player-ratings.module';\n","import { Players_V2, Player_Ratings_V2 } from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { PlayerRatingsController } from './controllers';\nimport { PlayerRatingsMiddleware } from './middlewares';\nimport { ApiPlayerRatingsService } from './services';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Player_Ratings_V2, Players_V2])],\n  controllers: [PlayerRatingsController],\n  providers: [ApiPlayerRatingsService],\n})\nexport class ApiPlayerRatingsModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(PlayerRatingsMiddleware).forRoutes('*');\n  }\n}\n","export * from './player-ratings.controller';\r\n","import { Player_Ratings_V2 } from '@api/entities';\nimport {\n  Body,\n  Controller,\n  Get,\n  NotFoundException,\n  Param,\n  Put,\n} from '@nestjs/common';\nimport { ApiPlayerRatingsService } from '../services';\n\n@Controller('player-ratings')\nexport class PlayerRatingsController {\n  constructor(private playerRatingsService: ApiPlayerRatingsService) {}\n\n  @Get('/:season')\n  async getAllRatings(@Param() param): Promise<Player_Ratings_V2[]> {\n    const players = await this.playerRatingsService.getAll(param.season);\n\n    if (!players || players.length < 1) {\n      throw new NotFoundException('ratings not found');\n    }\n    return players;\n  }\n\n  @Put('/:id')\n  updatePlayerById(@Param() param, @Body() body): Promise<Player_Ratings_V2> {\n    return this.playerRatingsService.updatePlayerById(parseInt(param.id), body);\n  }\n}\n","export * from './player-ratings.middleware';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class PlayerRatingsMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Player Ratings...');\r\n    next();\r\n  }\r\n}\r\n","import { Players_V2, Player_Ratings_V2 } from '@api/entities';\nimport { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class ApiPlayerRatingsService {\n  constructor(\n    @InjectRepository(Player_Ratings_V2)\n    private repo: Repository<Player_Ratings_V2>,\n    @InjectRepository(Players_V2)\n    private playersRepo: Repository<Players_V2>\n  ) {}\n\n  async getAll(season: string): Promise<Player_Ratings_V2[]> {\n    const ratings = await this.repo.find({\n      where: {\n        playing_year: season,\n      },\n    });\n\n    const ratingsWithPlayerInfo = await this.setPlayerInfo(ratings);\n\n    return ratingsWithPlayerInfo;\n  }\n\n  async updatePlayerById(id: number, attrs: Partial<Player_Ratings_V2>) {\n    const player = await this.repo.findOneByOrFail({ id });\n\n    if (!player) {\n      throw new NotFoundException('player not found');\n    }\n\n    Object.assign(player, attrs);\n\n    return this.repo.save(player);\n  }\n\n  private async setPlayerInfo(array: any[]) {\n    return await Promise.all(\n      array.map(async (item) => ({\n        ...item,\n        playerInfo: await this.getPlayerInfo(item.player_id),\n      }))\n    );\n  }\n\n  private async getPlayerInfo(playerId: number) {\n    if (playerId) {\n      return await this.playersRepo.findOne({\n        select: {\n          id: true,\n          firstname: true,\n          lastname: true,\n        },\n        where: {\n          id: playerId,\n        },\n      });\n    } else {\n      return {};\n    }\n  }\n}\n","export * from './api-player-ratings.service';\r\n","export * from './lib/api-player-stats.module';\n","import { Players_Stats_V2, Teams_V2 } from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { PlayerStatsController } from './controllers';\nimport { PlayerStatsMiddleware } from './middlewares';\nimport {\n  ApiPlayerAllTimeStatsService,\n  ApiPlayerLeadersStatsService,\n  ApiPlayerStatsService,\n  ApiUserPlayerStatsService,\n} from './services';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Players_Stats_V2, Teams_V2])],\n  controllers: [PlayerStatsController],\n  providers: [\n    ApiPlayerStatsService,\n    ApiPlayerLeadersStatsService,\n    ApiPlayerAllTimeStatsService,\n    ApiUserPlayerStatsService,\n  ],\n})\nexport class ApiPlayerStatsModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(PlayerStatsMiddleware).forRoutes('*');\n  }\n}\n","export * from './player-stats.controller';\r\n","import { Players_Stats_V2 } from '@api/entities';\nimport {\n  CreateStatPlayerAllDto,\n  StatPlayerAllDto,\n  StatPlayerLeadersDto,\n  StatPlayersHistoryDto,\n  StatUserPlayersHistoryDto,\n} from '@cha/shared/entities';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  NotFoundException,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\nimport {\n  ApiPlayerAllTimeStatsService,\n  ApiPlayerLeadersStatsService,\n  ApiPlayerStatsService,\n  ApiUserPlayerStatsService,\n} from '../services';\n\n@Controller('player-stats')\nexport class PlayerStatsController {\n  constructor(\n    private playerLeaderStatsService: ApiPlayerLeadersStatsService,\n    private playerStatsService: ApiPlayerStatsService,\n    private playerAllTimeStatsService: ApiPlayerAllTimeStatsService,\n    private userPlayersStatsService: ApiUserPlayerStatsService\n  ) {}\n\n  @Get('/:season')\n  async getAllPlayers(@Param() param): Promise<StatPlayerAllDto[]> {\n    const players = await this.playerStatsService.getAll(param.season);\n\n    if (!players || players.length < 1) {\n      throw new NotFoundException('players not found');\n    }\n    return players;\n  }\n\n  @Put('/:season/:id')\n  updatePlayerById(@Param() param, @Body() body): Promise<Players_Stats_V2> {\n    return this.playerStatsService.updatePlayerById(\n      parseInt(param.id),\n      param.season,\n      body\n    );\n  }\n\n  @Delete('/:season/:id')\n  deletePlayer(@Param() param) {\n    return this.playerStatsService.deletePlayer(\n      parseInt(param.id),\n      param.season\n    );\n  }\n\n  @Get('/leaders/:season/:seasonType')\n  async getPlayerStatsLeaders(@Param() param): Promise<StatPlayerLeadersDto> {\n    const stats = await this.playerLeaderStatsService.getPlayerStatsLeaders(\n      param.season,\n      param.seasonType\n    );\n\n    if (!stats) {\n      throw new NotFoundException('Player Leader Stats not found');\n    }\n    return stats;\n  }\n\n  @Get('/all/:season/:seasonType')\n  async getPlayerStatsAll(@Param() param): Promise<any[]> {\n    const stats = await this.playerStatsService.getAllStats(\n      param.season,\n      param.seasonType\n    );\n\n    if (!stats || stats.length < 1) {\n      throw new NotFoundException('Player Stats not found');\n    }\n    return stats;\n  }\n\n  @Get('/current/:season/:seasonType/:playerId')\n  async getPlayerStatsByPlayerId(@Param() param): Promise<any[]> {\n    const stats = await this.playerStatsService.getPlayerStatsByPlayerId(\n      param.season,\n      param.seasonType,\n      param.playerId\n    );\n\n    if (!stats || stats.length < 1) {\n      throw new NotFoundException('Player Stats not found');\n    }\n    return stats;\n  }\n\n  @Get('/history/season/:seasonType')\n  async getAllTimePlayerStatsBySeasonByType(\n    @Param() param\n  ): Promise<StatPlayersHistoryDto[]> {\n    const stats =\n      await this.playerAllTimeStatsService.getAllTimePlayerStatsBySeasonByType(\n        param.seasonType\n      );\n\n    if (!stats || stats.length < 1) {\n      throw new NotFoundException('Player Stats not found');\n    }\n    return stats;\n  }\n\n  @Get('/history/all-time/:seasonType')\n  async getAllTimePlayerStatsSummedBySeasonByType(\n    @Param() param\n  ): Promise<StatPlayersHistoryDto[]> {\n    const stats =\n      await this.playerAllTimeStatsService.getAllTimePlayerStatsSummedBySeasonByType(\n        param.seasonType\n      );\n\n    if (!stats || stats.length < 1) {\n      throw new NotFoundException('Player Stats not found');\n    }\n    return stats;\n  }\n\n  @Get('/user/:userId/history/:seasonType')\n  async getTeamPlayerStatsBySeasonType(\n    @Param() param\n  ): Promise<StatUserPlayersHistoryDto[]> {\n    const record =\n      await this.userPlayersStatsService.getUserPlayerStatsBySeasonType(\n        param.userId,\n        param.seasonType\n      );\n\n    if (!record) {\n      throw new NotFoundException('Team Players Stats not found');\n    }\n    return record;\n  }\n\n  @Get('/user/:userId/history/all/:seasonType')\n  async getTeamPlayerStatsAllTimeBySeasonType(\n    @Param() param\n  ): Promise<StatUserPlayersHistoryDto[]> {\n    const record =\n      await this.userPlayersStatsService.getUserPlayerStatsAllTimeBySeasonType(\n        param.userId,\n        param.seasonType\n      );\n\n    if (!record) {\n      throw new NotFoundException('Team Players Stats not found');\n    }\n    return record;\n  }\n}\n","export * from './player-stats.middleware';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class PlayerStatsMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Player Stats...');\r\n    next();\r\n  }\r\n}\r\n","import { Players_Stats_V2, Teams_V2 } from '@api/entities';\r\nimport { StatPlayersHistoryDto } from '@cha/shared/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectDataSource, InjectRepository } from '@nestjs/typeorm';\r\nimport { DataSource, MoreThan, Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiPlayerAllTimeStatsService {\r\n  constructor(\r\n    @InjectRepository(Players_Stats_V2)\r\n    private repo: Repository<Players_Stats_V2>,\r\n    @InjectRepository(Teams_V2)\r\n    private teamInfoRepo: Repository<Teams_V2>,\r\n    @InjectDataSource() private dataSource: DataSource\r\n  ) {}\r\n\r\n  async getAllTimePlayerStatsBySeasonByType(\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ): Promise<StatPlayersHistoryDto[]> {\r\n    const allStats = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        position: true,\r\n        games_played: true,\r\n        goals: true,\r\n        assists: true,\r\n        points: true,\r\n        plus_minus: true,\r\n        penalty_minutes: true,\r\n        pp_goals: true,\r\n        sh_goals: true,\r\n        gw_goals: true,\r\n        shots: true,\r\n        shooting_pct: true,\r\n        minutes_played: true,\r\n        minutes_per_game: true,\r\n        fo_pct: true,\r\n        pass_pct: true,\r\n        corner_pct: true,\r\n        hit_per_game: true,\r\n        blocked_shots: true,\r\n        playing_year: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isdefense: true,\r\n          isforward: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        season_type: seasonType,\r\n      },\r\n      take: 1500,\r\n      order: {\r\n        points: 'DESC',\r\n      },\r\n    });\r\n\r\n    const allStatsWithTeamInfo = await this.setTeamInfo(allStats);\r\n\r\n    const allStatsWithTeamInfoConverted = await this.convertStats(\r\n      allStatsWithTeamInfo,\r\n      false\r\n    );\r\n\r\n    return allStatsWithTeamInfoConverted;\r\n  }\r\n\r\n  async getAllTimePlayerStatsSummedBySeasonByType(\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ): Promise<StatPlayersHistoryDto[]> {\r\n    const result = await this.dataSource.query(\r\n      `select\r\n      b.firstname as firstname,\r\n      b.lastname as lastname,\r\n      b.isdefense as isdefense,\r\n      b.isforward as isforward,\r\n      b.isgoalie as isgoalie,\r\n      b.nhl_id as nhl_id,\r\n      a.player_id as player_id,\r\n      a.season_type as season_type, \r\n      a.position as position,\r\n      sum(a.games_played) as games_played, \r\n      sum(a.goals) as goals, \r\n      sum(a.assists) as assists, \r\n      sum(a.points) as points, \r\n      sum(a.plus_minus) as plus_minus, \r\n      sum(a.penalty_minutes) as penalty_minutes, \r\n      sum(a.sh_goals) as sh_goals, \r\n      sum(a.pp_goals) as pp_goals, \r\n      sum(a.gw_goals) as gw_goals, \r\n      sum(a.shots) as shots, \r\n      sum(a.minutes_played) as minutes_played, \r\n      sum(a.hits) as hits, \r\n      sum(a.blocked_shots) as blocked_shots\r\n      from\r\n      players_stats_v2 as a\r\n      left join players_v2 as b\r\n      on b.id = a.player_id\r\n      where (a.player_id = b.id\r\n      and\r\n      a.points > '0'\r\n      and\r\n      a.season_type = '${seasonType}')\r\n      group by b.firstname, b.lastname, b.isgoalie, b.isdefense, b.isforward, b.nhl_id, a.player_id, a.season_type, a.position\r\n      order by points DESC`\r\n    );\r\n\r\n    const allTimeStatsConverted = await this.convertStats(result, true);\r\n\r\n    return allTimeStatsConverted;\r\n  }\r\n\r\n  private async setTeamInfo(array: Players_Stats_V2[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        teamInfo: await this.getTeamInfo(item.team_name),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getTeamInfo(teamName: string) {\r\n    return await this.teamInfoRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        city: true,\r\n        teamlogo: true,\r\n        nickname: true,\r\n      },\r\n      where: {\r\n        shortname: teamName,\r\n      },\r\n    });\r\n  }\r\n\r\n  private async convertStats(array: any[], raw: boolean) {\r\n    return await Promise.all(\r\n      array.map((stat: any) => ({\r\n        playing_year: stat.playing_year,\r\n        season_type: stat.season_type,\r\n        teamInfo: !raw ? stat['teamInfo'] : null,\r\n        player_id: !raw\r\n          ? stat.player_id\r\n          : {\r\n              id: stat['player_id'],\r\n              firstname: stat['firstname'],\r\n              lastname: stat['lastname'],\r\n              nhl_id: stat['nhl_id'],\r\n              isactive: null,\r\n              isgoalie: null,\r\n              isdefense: stat['isdefense'],\r\n              isforward: stat['isforward'],\r\n              is_protected: null,\r\n            },\r\n        position: stat.position,\r\n        games_played: Number(stat.games_played),\r\n        goals: Number(stat.goals),\r\n        assists: Number(stat.assists),\r\n        points: Number(stat.points),\r\n        pointsPerSixty: Number(\r\n          ((Number(stat.points) / Number(stat.minutes_played)) * 60).toFixed(2)\r\n        ),\r\n        plus_minus: Number(stat.plus_minus),\r\n        penalty_minutes: Number(stat.penalty_minutes),\r\n        pp_goals: Number(stat.pp_goals),\r\n        sh_goals: Number(stat.sh_goals),\r\n        gw_goals: Number(stat.gw_goals),\r\n        shots: Number(stat.shots),\r\n        shooting_pct: !raw\r\n          ? Number(stat.shooting_pct)\r\n          : Number(\r\n              ((Number(stat.goals) / Number(stat.shots)) * 100).toFixed(1)\r\n            ),\r\n        minutes_per_game: !raw\r\n          ? Number(stat.minutes_per_game)\r\n          : Number(\r\n              (Number(stat.minutes_played) / Number(stat.games_played)).toFixed(\r\n                1\r\n              )\r\n            ),\r\n        fo_pct: !raw ? Number(stat.fo_pct) : null,\r\n        pass_pct: !raw ? Number(stat.pass_pct) : null,\r\n        corner_pct: !raw ? Number(stat.corner_pct) : null,\r\n        hit_per_game: !raw\r\n          ? Number(stat.hit_per_game)\r\n          : Number((Number(stat.hits) / Number(stat.games_played)).toFixed(1)),\r\n        blocked_shots: Number(stat.blocked_shots),\r\n      }))\r\n    );\r\n  }\r\n}\r\n","import { Players_Stats_V2, Teams_V2 } from '@api/entities';\r\nimport {\r\n  StatPlayerLeaderDto,\r\n  StatPlayerLeadersDto,\r\n} from '@cha/shared/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiPlayerLeadersStatsService {\r\n  constructor(\r\n    @InjectRepository(Players_Stats_V2)\r\n    private repo: Repository<Players_Stats_V2>,\r\n    @InjectRepository(Teams_V2)\r\n    private teamInfoRepo: Repository<Teams_V2>\r\n  ) {}\r\n\r\n  async getPlayerStatsLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ): Promise<StatPlayerLeadersDto> {\r\n    const hitsLeaders = await this.getHitsLeaders(season, seasonType);\r\n    const pointsLeaders = await this.getPointsLeaders(season, seasonType);\r\n    const assistLeaders = await this.getAssistLeaders(season, seasonType);\r\n    const bestPlusMinusLeaders = await this.getBestPlusMinusLeaders(\r\n      season,\r\n      seasonType\r\n    );\r\n    const blockedShotLeaders = await this.getblockedShotLeaders(\r\n      season,\r\n      seasonType\r\n    );\r\n    const currSteakLeaders = await this.getCurrSteakLeaders(season, seasonType);\r\n    const defenseLeaders = await this.getDefenseLeaders(season, seasonType);\r\n    const goalLeaders = await this.getGoalLeaders(season, seasonType);\r\n    const longStreakLeaders = await this.getLongStreakLeaders(\r\n      season,\r\n      seasonType\r\n    );\r\n    const minutesLeaders = await this.getMinutesLeaders(season, seasonType);\r\n    const penaltyLeaders = await this.getPenaltyLeaders(season, seasonType);\r\n    const ppGoalsLeaders = await this.getPpgoalsLeaders(season, seasonType);\r\n    const rookieLeaders = await this.getRookieLeaders(season, seasonType);\r\n    const shGoalsLeaders = await this.getShGoalsLeaders(season, seasonType);\r\n    const shotsLeaders = await this.getShotsLeaders(season, seasonType);\r\n\r\n    return {\r\n      hits: hitsLeaders as unknown as StatPlayerLeaderDto[],\r\n      points: pointsLeaders as unknown as StatPlayerLeaderDto[],\r\n      assists: assistLeaders as unknown as StatPlayerLeaderDto[],\r\n      bestPlusMinus: bestPlusMinusLeaders as unknown as StatPlayerLeaderDto[],\r\n      blockedShots: blockedShotLeaders as unknown as StatPlayerLeaderDto[],\r\n      currStreak: currSteakLeaders as unknown as StatPlayerLeaderDto[],\r\n      defense: defenseLeaders as unknown as StatPlayerLeaderDto[],\r\n      goals: goalLeaders as unknown as StatPlayerLeaderDto[],\r\n      longStreak: longStreakLeaders as unknown as StatPlayerLeaderDto[],\r\n      minutes: minutesLeaders as unknown as StatPlayerLeaderDto[],\r\n      penalties: penaltyLeaders as unknown as StatPlayerLeaderDto[],\r\n      ppGoals: ppGoalsLeaders as unknown as StatPlayerLeaderDto[],\r\n      rookies: rookieLeaders as unknown as StatPlayerLeaderDto[],\r\n      shGoals: shGoalsLeaders as unknown as StatPlayerLeaderDto[],\r\n      shots: shotsLeaders as unknown as StatPlayerLeaderDto[],\r\n    };\r\n  }\r\n\r\n  private async getHitsLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const hitsLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        hits: true,\r\n        team_name: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: {\r\n        player_id: true,\r\n      },\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        hits: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const hitsLeadersWithTeamInfo = await this.setTeamInfo(hitsLeaders);\r\n\r\n    return hitsLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getPointsLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const pointsLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        points: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        points: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const pointsLeadersWithTeamInfo = await this.setTeamInfo(pointsLeaders);\r\n\r\n    return pointsLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getAssistLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const assistLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        assists: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        assists: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const assistLeadersWithTeamInfo = await this.setTeamInfo(assistLeaders);\r\n\r\n    return assistLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getBestPlusMinusLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const bestPlusMinusLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        plus_minus: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        plus_minus: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const bestPlusMinusLeadersWithTeamInfo = await this.setTeamInfo(\r\n      bestPlusMinusLeaders\r\n    );\r\n\r\n    return bestPlusMinusLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getblockedShotLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const blockedShotLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        blocked_shots: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        blocked_shots: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const blockedShotLeadersWithTeamInfo = await this.setTeamInfo(\r\n      blockedShotLeaders\r\n    );\r\n\r\n    return blockedShotLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getCurrSteakLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const currStreakLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        current_points_streak: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        current_points_streak: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const currStreakLeadersWithTeamInfo = await this.setTeamInfo(\r\n      currStreakLeaders\r\n    );\r\n\r\n    return currStreakLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getDefenseLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const defenseLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        points: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n          isdefense: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n        player_id: {\r\n          isdefense: true,\r\n        },\r\n      },\r\n      order: {\r\n        points: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const defenseLeadersWithTeamInfo = await this.setTeamInfo(defenseLeaders);\r\n\r\n    return defenseLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getGoalLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const goalLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        goals: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        goals: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const goalLeadersWithTeamInfo = await this.setTeamInfo(goalLeaders);\r\n\r\n    return goalLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getLongStreakLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const longStreakLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        longest_points_streak: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        longest_points_streak: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const longStreakLeadersWithTeamInfo = await this.setTeamInfo(\r\n      longStreakLeaders\r\n    );\r\n\r\n    return longStreakLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getMinutesLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const minutesLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        minutes_played: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        minutes_played: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const minutesLeadersWithTeamInfo = await this.setTeamInfo(minutesLeaders);\r\n\r\n    return minutesLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getPenaltyLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const penaltyLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        penalty_minutes: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        penalty_minutes: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const penaltyLeadersWithTeamInfo = await this.setTeamInfo(penaltyLeaders);\r\n\r\n    return penaltyLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getPpgoalsLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const ppGoalsLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        pp_goals: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        pp_goals: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const ppGoalsLeadersWithTeamInfo = await this.setTeamInfo(ppGoalsLeaders);\r\n\r\n    return ppGoalsLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getRookieLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const rookieLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        points: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n        player_status: 'Rookie',\r\n      },\r\n      order: {\r\n        points: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const rookieLeadersWithTeamInfo = await this.setTeamInfo(rookieLeaders);\r\n\r\n    return rookieLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getShGoalsLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const shGoalsLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        sh_goals: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        sh_goals: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const shGoalsLeadersWithTeamInfo = await this.setTeamInfo(shGoalsLeaders);\r\n\r\n    return shGoalsLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getShotsLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const shotsLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        shots: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        shots: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const shotsLeadersWithTeamInfo = await this.setTeamInfo(shotsLeaders);\r\n\r\n    return shotsLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async setTeamInfo(array: Players_Stats_V2[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        teamInfo: await this.getTeamInfo(item.team_name),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getTeamInfo(teamName: string) {\r\n    return await this.teamInfoRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        city: true,\r\n        teamlogo: true,\r\n        nickname: true,\r\n      },\r\n      where: {\r\n        shortname: teamName,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Players_Stats_V2, Teams_V2 } from '@api/entities';\r\nimport { StatPlayerAllDto } from '@cha/shared/entities';\r\nimport { Injectable, NotFoundException } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiPlayerStatsService {\r\n  constructor(\r\n    @InjectRepository(Players_Stats_V2)\r\n    private repo: Repository<Players_Stats_V2>,\r\n    @InjectRepository(Teams_V2)\r\n    private teamInfoRepo: Repository<Teams_V2>\r\n  ) {}\r\n\r\n  async getAll(season: string): Promise<StatPlayerAllDto[]> {\r\n    const players = await this.repo.find({\r\n      where: {\r\n        playing_year: season,\r\n      },\r\n    });\r\n\r\n    const playersWithTeamInfo = this.setTeamInfo(players);\r\n\r\n    return playersWithTeamInfo;\r\n  }\r\n\r\n  async updatePlayerById(\r\n    id: number,\r\n    season: string,\r\n    attrs: Partial<Players_Stats_V2>\r\n  ) {\r\n    const player = await this.repo.findOneByOrFail({\r\n      player_id: {\r\n        id: id,\r\n      },\r\n      playing_year: season,\r\n    });\r\n\r\n    if (!player) {\r\n      throw new NotFoundException('player not found');\r\n    }\r\n\r\n    Object.assign(player, attrs);\r\n\r\n    return this.repo.save(player);\r\n  }\r\n\r\n  async deletePlayer(id: number, season: string): Promise<Players_Stats_V2> {\r\n    const player = await this.repo.findOneByOrFail({\r\n      id,\r\n      playing_year: season,\r\n    });\r\n\r\n    if (!player) {\r\n      throw new NotFoundException('player not found');\r\n    }\r\n    return this.repo.remove(player);\r\n  }\r\n\r\n  async getAllStats(season: string, seasonType: 'Regular' | 'Playoffs') {\r\n    const allStats = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        position: true,\r\n        games_played: true,\r\n        goals: true,\r\n        assists: true,\r\n        points: true,\r\n        plus_minus: true,\r\n        penalty_minutes: true,\r\n        pp_goals: true,\r\n        sh_goals: true,\r\n        gw_goals: true,\r\n        gt_goals: true,\r\n        shots: true,\r\n        shooting_pct: true,\r\n        minutes_played: true,\r\n        minutes_per_game: true,\r\n        fo_pct: true,\r\n        pass_pct: true,\r\n        corner_pct: true,\r\n        hits: true,\r\n        blocked_shots: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isdefense: true,\r\n          isforward: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        points: 'DESC',\r\n      },\r\n    });\r\n\r\n    const allStatsWithTeamInfo = await this.setTeamInfo(allStats);\r\n\r\n    const allStatsWithTeamInfoConverted = await this.convertStats(\r\n      allStatsWithTeamInfo\r\n    );\r\n\r\n    return allStatsWithTeamInfoConverted;\r\n  }\r\n\r\n  async getPlayerStatsByPlayerId(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs',\r\n    playerId: number\r\n  ) {\r\n    const allStats = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        position: true,\r\n        games_played: true,\r\n        goals: true,\r\n        assists: true,\r\n        points: true,\r\n        plus_minus: true,\r\n        penalty_minutes: true,\r\n        pp_goals: true,\r\n        sh_goals: true,\r\n        gw_goals: true,\r\n        gt_goals: true,\r\n        shots: true,\r\n        shooting_pct: true,\r\n        minutes_played: true,\r\n        minutes_per_game: true,\r\n        fo_pct: true,\r\n        pass_pct: true,\r\n        corner_pct: true,\r\n        hits: true,\r\n        blocked_shots: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isdefense: true,\r\n          isforward: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n        player_id: {\r\n          id: playerId,\r\n        },\r\n      },\r\n      order: {\r\n        points: 'DESC',\r\n      },\r\n    });\r\n\r\n    const allStatsWithTeamInfo = await this.setTeamInfo(allStats);\r\n\r\n    const allStatsWithTeamInfoConverted = await this.convertStats(\r\n      allStatsWithTeamInfo\r\n    );\r\n\r\n    return allStatsWithTeamInfoConverted;\r\n  }\r\n\r\n  private async setTeamInfo(array: Players_Stats_V2[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        teamInfo: await this.getTeamInfo(item.team_name),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getTeamInfo(teamName: string) {\r\n    return await this.teamInfoRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        city: true,\r\n        teamlogo: true,\r\n        nickname: true,\r\n        shortname: true,\r\n      },\r\n      where: {\r\n        shortname: teamName,\r\n      },\r\n    });\r\n  }\r\n\r\n  private async convertStats(array: Players_Stats_V2[]) {\r\n    return await Promise.all(\r\n      array.map((stat: Players_Stats_V2) => ({\r\n        ...stat,\r\n        games_played: Number(stat.games_played),\r\n        goals: Number(stat.goals),\r\n        assists: Number(stat.assists),\r\n        points: Number(stat.points),\r\n        plus_minus: Number(stat.plus_minus),\r\n        penalty_minutes: Number(stat.penalty_minutes),\r\n        pp_goals: Number(stat.pp_goals),\r\n        sh_goals: Number(stat.sh_goals),\r\n        gw_goals: Number(stat.gw_goals),\r\n        gt_goals: Number(stat.gt_goals),\r\n        shots: Number(stat.shots),\r\n        shooting_pct: Number(stat.shooting_pct),\r\n        minutes_played: Number(stat.minutes_played),\r\n        minutes_per_game: Number(stat.minutes_per_game),\r\n        fo_pct: Number(stat.fo_pct),\r\n        pass_pct: Number(stat.pass_pct),\r\n        corner_pct: Number(stat.corner_pct),\r\n        hits: Number(stat.hits),\r\n        blocked_shots: Number(stat.blocked_shots),\r\n      }))\r\n    );\r\n  }\r\n}\r\n","import { Players_Stats_V2, Teams_V2 } from '@api/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectDataSource, InjectRepository } from '@nestjs/typeorm';\r\nimport { DataSource, Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiUserPlayerStatsService {\r\n  constructor(\r\n    @InjectRepository(Players_Stats_V2)\r\n    private repo: Repository<Players_Stats_V2>,\r\n    @InjectRepository(Teams_V2)\r\n    private teamInfoRepo: Repository<Teams_V2>,\r\n    @InjectDataSource() private dataSource: DataSource\r\n  ) {}\r\n\r\n  async getUserPlayerStatsBySeasonType(\r\n    userId: number,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const userTeams = await this.teamInfoRepo.findBy({ users_id: userId });\r\n\r\n    const userTeamsWithPlayerStats = await this.setPlayerStats(\r\n      userTeams,\r\n      seasonType\r\n    );\r\n\r\n    const userTeamsWithPlayersStatsConverted =\r\n      await this.setConvertedPlayersStats(userTeamsWithPlayerStats, false);\r\n\r\n    return userTeamsWithPlayersStatsConverted;\r\n  }\r\n\r\n  async getUserPlayerStatsAllTimeBySeasonType(\r\n    userId: number,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const userTeams = await this.teamInfoRepo.findBy({ users_id: userId });\r\n\r\n    const userTeamsWithPlayerStats = await this.setPlayerAllTimeStats(\r\n      userTeams,\r\n      seasonType\r\n    );\r\n\r\n    const userTeamsWithPlayersStatsConverted =\r\n      await this.setConvertedPlayersStats(userTeamsWithPlayerStats, true);\r\n\r\n    return userTeamsWithPlayersStatsConverted;\r\n  }\r\n\r\n  private async setPlayerStats(\r\n    array: Teams_V2[],\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        playerStats: await this.getPlayerStats(item.shortname, seasonType),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async setPlayerAllTimeStats(\r\n    array: Teams_V2[],\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        playerStats: await this.getPlayerAllTimeStats(\r\n          item.shortname,\r\n          seasonType\r\n        ),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getPlayerAllTimeStats(\r\n    teamShortName: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    return await this.dataSource.query(\r\n      `select\r\n      b.firstname as firstname,\r\n      b.lastname as lastname,\r\n      b.isdefense as isdefense,\r\n      b.isforward as isforward,\r\n      b.isgoalie as isgoalie,\r\n      b.nhl_id as nhl_id,\r\n      a.player_id as player_id,\r\n      a.season_type as season_type, \r\n      a.position as position,\r\n      sum(a.games_played) as games_played, \r\n      sum(a.goals) as goals, \r\n      sum(a.assists) as assists, \r\n      sum(a.points) as points, \r\n      sum(a.plus_minus) as plus_minus, \r\n      sum(a.penalty_minutes) as penalty_minutes, \r\n      sum(a.sh_goals) as sh_goals, \r\n      sum(a.pp_goals) as pp_goals, \r\n      sum(a.gw_goals) as gw_goals, \r\n      sum(a.gt_goals) as gt_goals, \r\n      sum(a.shots) as shots, \r\n      sum(a.minutes_played) as minutes_played, \r\n      sum(a.hits) as hits, \r\n      sum(a.blocked_shots) as blocked_shots\r\n      from\r\n      players_stats_v2 as a\r\n      left join players_v2 as b\r\n      on b.id = a.player_id\r\n      where (a.player_id = b.id\r\n      and\r\n      a.points > '0'\r\n      and\r\n      a.season_type = '${seasonType}'\r\n      and a.team_name = '${teamShortName}')\r\n      group by b.firstname, b.lastname, b.isgoalie, b.isdefense, b.isforward, b.nhl_id, a.player_id, a.season_type, a.position\r\n      order by points DESC`\r\n    );\r\n  }\r\n\r\n  private async getPlayerStats(\r\n    teamShortName: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    return await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        position: true,\r\n        games_played: true,\r\n        goals: true,\r\n        assists: true,\r\n        points: true,\r\n        plus_minus: true,\r\n        penalty_minutes: true,\r\n        pp_goals: true,\r\n        sh_goals: true,\r\n        gw_goals: true,\r\n        gt_goals: true,\r\n        shots: true,\r\n        shooting_pct: true,\r\n        minutes_played: true,\r\n        minutes_per_game: true,\r\n        fo_pct: true,\r\n        pass_pct: true,\r\n        corner_pct: true,\r\n        hits: true,\r\n        blocked_shots: true,\r\n        playing_year: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isdefense: true,\r\n          isforward: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        team_name: teamShortName,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        points: 'DESC',\r\n      },\r\n    });\r\n  }\r\n\r\n  private async setConvertedPlayersStats(array: any[], raw: boolean) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        playerStats: await this.convertStats(item.playerStats, raw, item),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async convertStats(\r\n    array: Players_Stats_V2[],\r\n    raw: boolean,\r\n    teamInfo: any\r\n  ) {\r\n    return await Promise.all(\r\n      array.map((stat: Players_Stats_V2) => ({\r\n        playing_year: stat.playing_year,\r\n        season_type: stat.season_type,\r\n        teamInfo: !raw\r\n          ? {\r\n              id: teamInfo.id,\r\n              city: teamInfo.city,\r\n              nickname: teamInfo.nickname,\r\n              teamlogo: teamInfo.teamlogo,\r\n            }\r\n          : null,\r\n        games_played: Number(stat.games_played),\r\n        goals: Number(stat.goals),\r\n        assists: Number(stat.assists),\r\n        points: Number(stat.points),\r\n        plus_minus: Number(stat.plus_minus),\r\n        penalty_minutes: Number(stat.penalty_minutes),\r\n        pp_goals: Number(stat.pp_goals),\r\n        sh_goals: Number(stat.sh_goals),\r\n        gw_goals: Number(stat.gw_goals),\r\n        gt_goals: Number(stat.gt_goals),\r\n        shots: Number(stat.shots),\r\n        shooting_pct: !raw\r\n          ? Number(stat.shooting_pct)\r\n          : Number(\r\n              ((Number(stat.goals) / Number(stat.shots)) * 100).toFixed(1)\r\n            ),\r\n        minutes_per_game: !raw\r\n          ? Number(stat.minutes_per_game)\r\n          : Number(\r\n              (Number(stat.minutes_played) / Number(stat.games_played)).toFixed(\r\n                1\r\n              )\r\n            ),\r\n        fo_pct: !raw ? Number(stat.fo_pct) : null,\r\n        pass_pct: !raw ? Number(stat.pass_pct) : null,\r\n        corner_pct: !raw ? Number(stat.corner_pct) : null,\r\n        minutes_played: Number(stat.minutes_played),\r\n        hits: Number(stat.hits),\r\n        blocked_shots: Number(stat.blocked_shots),\r\n        pointsPerSixty: Number(\r\n          ((Number(stat.points) / Number(stat.minutes_played)) * 60).toFixed(2)\r\n        ),\r\n        hit_per_game: Number((Number(stat.hits) / Number(stat.games_played)).toFixed(1)),\r\n        player_id: !raw\r\n          ? stat.player_id\r\n          : {\r\n              id: stat['player_id'],\r\n              firstname: stat['firstname'],\r\n              lastname: stat['lastname'],\r\n              nhl_id: stat['nhl_id'],\r\n              isactive: null,\r\n              isgoalie: null,\r\n              isdefense: stat['isdefense'],\r\n              isforward: stat['isforward'],\r\n              is_protected: null,\r\n            },\r\n      }))\r\n    );\r\n  }\r\n}\r\n","export * from './api-player-leaders-stats.service';\r\nexport * from './api-player-stats.service';\r\nexport * from './api-player-all-time-stats.service';\r\nexport * from './api-user-player-stats.service';","export * from './lib/api-salaries.module';","import {\n  Goalies_Stats_V2,\n  Goalie_Ratings_V2,\n  Players_Stats_V2,\n  Players_V2,\n  Player_Ratings_V2,\n  Salaries_V2,\n  Teams_V2,\n} from '@api/entities';\nimport { HttpModule } from '@nestjs/axios';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { SalariesController } from './controllers';\nimport { SalariesMiddleware } from './middlewares';\nimport { ApiSalariesService } from './services';\n\n@Module({\n  imports: [\n    HttpModule,\n    TypeOrmModule.forFeature([\n      Players_Stats_V2,\n      Teams_V2,\n      Salaries_V2,\n      Player_Ratings_V2,\n      Goalie_Ratings_V2,\n      Goalies_Stats_V2,\n      Players_V2,\n    ]),\n  ],\n  controllers: [SalariesController],\n  providers: [ApiSalariesService],\n})\nexport class ApiSalariesModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(SalariesMiddleware).forRoutes('*');\n  }\n}\n","export * from './salaries.controller';\r\n","import { SalaryAllDto } from '@cha/shared/entities';\nimport {\n  Body,\n  Controller,\n  Get,\n  NotFoundException,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\nimport { ApiSalariesService } from '../services';\n\n@Controller('salaries')\nexport class SalariesController {\n  constructor(private salariesService: ApiSalariesService) {}\n\n  @Get()\n  async getSalaries(): Promise<SalaryAllDto[]> {\n    const salaries = await this.salariesService.getAll();\n\n    if (!salaries || salaries.length < 1) {\n      throw new NotFoundException('salaries not found');\n    }\n    return salaries;\n  }\n\n  @Put('/:id')\n  updateUserById(@Param() param, @Body() body): Promise<SalaryAllDto> {\n    return this.salariesService.updateSalaryById(parseInt(param.id), body);\n  }\n\n  @Post('/add')\n  addUser(@Body() body: SalaryAllDto) {\n    return this.salariesService.addSalary(body);\n  }\n\n  @Get('/all/players/:season/:ratingSeason')\n  async getAllPlayerSalaries(@Param() param): Promise<any[]> {\n    const salaries = await this.salariesService.getAllPlayerSalaries(\n      param.season,\n      param.ratingSeason\n    );\n\n    if (!salaries) {\n      throw new NotFoundException('Player Salaries not found');\n    }\n    return salaries;\n  }\n\n  @Get('/all/goalies/:season/:ratingSeason')\n  async getAllGoaliesSalaries(@Param() param): Promise<any[]> {\n    const salaries = await this.salariesService.getAllGoaliesSalaries(\n      param.season,\n      param.ratingSeason\n    );\n\n    if (!salaries) {\n      throw new NotFoundException('Goalie Salaries not found');\n    }\n    return salaries;\n  }\n\n  @Get('/user/:teamName/players/:season/:ratingsSeason')\n  async getUserTeamPlayerSalaries(@Param() param): Promise<any[]> {\n    const salaries = await this.salariesService.getUserTeamPlayerSalaries(\n      param.teamName,\n      param.season,\n      param.ratingsSeason\n    );\n\n    if (!salaries) {\n      throw new NotFoundException('User Player Salaries not found');\n    }\n    return salaries;\n  }\n\n  @Get('/user/:teamName/goalies/:season/:ratingsSeason')\n  async getUserTeamGoaliesSalaries(@Param() param): Promise<any[]> {\n    const salaries = await this.salariesService.getUserTeamGoaliesSalaries(\n      param.teamName,\n      param.season,\n      param.ratingsSeason\n    );\n\n    if (!salaries) {\n      throw new NotFoundException('User Goalie Salaries not found');\n    }\n    return salaries;\n  }\n}\n","export * from './salaries.middleware';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class SalariesMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Salaries...');\r\n    next();\r\n  }\r\n}\r\n","import {\r\n  Goalies_Stats_V2,\r\n  Goalie_Ratings_V2,\r\n  Players_Stats_V2,\r\n  Players_V2,\r\n  Player_Ratings_V2,\r\n  Salaries_V2,\r\n  Teams_V2,\r\n} from '@api/entities';\r\nimport { Injectable, NotFoundException } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { HttpService } from '@nestjs/axios';\r\nimport { firstValueFrom, Observable } from 'rxjs';\r\nimport { SalaryAllDto } from '@cha/shared/entities';\r\n\r\n@Injectable()\r\nexport class ApiSalariesService {\r\n  nhlAPI = 'https://statsapi.web.nhl.com/api/v1/people';\r\n\r\n  constructor(\r\n    @InjectRepository(Salaries_V2)\r\n    private repo: Repository<Salaries_V2>,\r\n    @InjectRepository(Teams_V2)\r\n    private teamsRepo: Repository<Teams_V2>,\r\n    @InjectRepository(Players_V2)\r\n    private playersRepo: Repository<Players_V2>,\r\n    @InjectRepository(Players_Stats_V2)\r\n    private playersStatsRepo: Repository<Players_Stats_V2>,\r\n    @InjectRepository(Player_Ratings_V2)\r\n    private playerRatingsRepo: Repository<Player_Ratings_V2>,\r\n    @InjectRepository(Goalies_Stats_V2)\r\n    private goaliesStatsRepo: Repository<Goalies_Stats_V2>,\r\n    @InjectRepository(Goalie_Ratings_V2)\r\n    private goalieRatingsRepo: Repository<Goalie_Ratings_V2>,\r\n    private httpService: HttpService\r\n  ) {}\r\n\r\n  async getAllPlayerSalaries(season: string, ratingSeason: string) {\r\n    const allPlayersInSeason = await this.playersStatsRepo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        player_id: {\r\n          id: true,\r\n        },\r\n      },\r\n      where: {\r\n        player_id: {\r\n          isgoalie: false,\r\n        },\r\n        season_type: 'Regular',\r\n        playing_year: season,\r\n      },\r\n    });\r\n\r\n    const allSalariesForPlayersInSeason = await this.setPlayersSalaries(\r\n      allPlayersInSeason\r\n    );\r\n\r\n    const allSalariesAndRatingsForPlayersInSeason = await this.setPlayerRating(\r\n      allSalariesForPlayersInSeason,\r\n      ratingSeason\r\n    );\r\n\r\n    const allSalariesAndRatingsForPlayersInSeasonWithTeamInfo =\r\n      await this.setTeamInfo(allSalariesAndRatingsForPlayersInSeason);\r\n\r\n    return allSalariesAndRatingsForPlayersInSeasonWithTeamInfo;\r\n  }\r\n\r\n  async getAllGoaliesSalaries(season: string, ratingSeason: string) {\r\n    const allGoaliesInSeason = await this.goaliesStatsRepo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        player_id: {\r\n          id: true,\r\n        },\r\n      },\r\n      where: {\r\n        player_id: {\r\n          isgoalie: true,\r\n        },\r\n        season_type: 'Regular',\r\n        playing_year: season,\r\n      },\r\n    });\r\n\r\n    const allSalariesForGoaliesInSeason = await this.setPlayersSalaries(\r\n      allGoaliesInSeason\r\n    );\r\n\r\n    const allSalariesAndRatingsForGoaliesInSeason = await this.setGoalieRating(\r\n      allSalariesForGoaliesInSeason,\r\n      ratingSeason\r\n    );\r\n\r\n    const allSalariesAndRatingsForGoaliesInSeasonWithTeamInfo =\r\n      await this.setTeamInfo(allSalariesAndRatingsForGoaliesInSeason);\r\n\r\n    return allSalariesAndRatingsForGoaliesInSeasonWithTeamInfo;\r\n  }\r\n\r\n  async getUserTeamPlayerSalaries(\r\n    teamName: string,\r\n    season: string,\r\n    ratingsSeason: string\r\n  ) {\r\n    const allPlayersInSeason = await this.playersStatsRepo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        player_id: {\r\n          id: true,\r\n        },\r\n      },\r\n      where: {\r\n        player_id: {\r\n          isgoalie: false,\r\n        },\r\n        team_name: teamName,\r\n        season_type: 'Regular',\r\n        playing_year: season,\r\n      },\r\n    });\r\n\r\n    const allSalariesForPlayersInSeason = await this.setPlayersSalaries(\r\n      allPlayersInSeason\r\n    );\r\n\r\n    const allSalariesAndRatingsForPlayersInSeason = await this.setPlayerRating(\r\n      allSalariesForPlayersInSeason,\r\n      ratingsSeason\r\n    );\r\n\r\n    const allSalariesRatingsNHLStatsForPlayersInSeason = await this.setNHLStats(\r\n      allSalariesAndRatingsForPlayersInSeason\r\n    );\r\n\r\n    const allSalariesAndRatingsForPlayersInSeasonWithTeamInfo =\r\n      await this.setTeamInfo(allSalariesRatingsNHLStatsForPlayersInSeason);\r\n\r\n    return allSalariesAndRatingsForPlayersInSeasonWithTeamInfo;\r\n  }\r\n\r\n  async getUserTeamGoaliesSalaries(\r\n    teamName: string,\r\n    season: string,\r\n    ratingsSeason: string\r\n  ) {\r\n    const allGoaliesInSeason = await this.goaliesStatsRepo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        player_id: {\r\n          id: true,\r\n        },\r\n      },\r\n      where: {\r\n        player_id: {\r\n          isgoalie: true,\r\n        },\r\n        team_name: teamName,\r\n        season_type: 'Regular',\r\n        playing_year: season,\r\n      },\r\n    });\r\n\r\n    const allSalariesForGoaliesInSeason = await this.setPlayersSalaries(\r\n      allGoaliesInSeason\r\n    );\r\n\r\n    const allSalariesAndRatingsForGoaliesInSeason = await this.setGoalieRating(\r\n      allSalariesForGoaliesInSeason,\r\n      ratingsSeason\r\n    );\r\n\r\n    const allSalariesRatingsNHLStatsForPlayersInSeason = await this.setNHLStats(\r\n      allSalariesAndRatingsForGoaliesInSeason\r\n    );\r\n\r\n    const allSalariesAndRatingsForGoaliesInSeasonWithTeamInfo =\r\n      await this.setTeamInfo(allSalariesRatingsNHLStatsForPlayersInSeason);\r\n\r\n    return allSalariesAndRatingsForGoaliesInSeasonWithTeamInfo;\r\n  }\r\n\r\n  private async setPlayersSalaries(array: any[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        salaries: await this.getSalary(item.player_id.id),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getSalary(playerId: number) {\r\n    return await this.repo.findOne({\r\n      select: {\r\n        id: true,\r\n        player_id: true,\r\n        season_2022: true,\r\n        season_2023: true,\r\n        season_2024: true,\r\n        season_2025: true,\r\n      },\r\n      where: {\r\n        player_id: playerId.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  private async setPlayerRating(array: any[], season: string) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        ratings: await this.getPlayerRating(item.player_id.id, season),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async setGoalieRating(array: any[], season: string) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        ratings: await this.getGoalieRating(item.player_id.id, season),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getGoalieRating(playerId: number, season: string) {\r\n    return await this.goalieRatingsRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        passing: true,\r\n        speed: true,\r\n        skating: true,\r\n        wins: true,\r\n        goals_against_avg: true,\r\n        save_pct: true,\r\n        games_played: true,\r\n      },\r\n      where: {\r\n        player_id: playerId,\r\n        playing_year: season,\r\n      },\r\n    });\r\n  }\r\n\r\n  private async getPlayerRating(playerId: number, season: string) {\r\n    return await this.playerRatingsRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        c_rate: true,\r\n        l_rate: true,\r\n        r_rate: true,\r\n        ld_rate: true,\r\n        rd_rate: true,\r\n        skating: true,\r\n        speed: true,\r\n        passing: true,\r\n        shooting: true,\r\n        face_off: true,\r\n        forecheck: true,\r\n        assist_rating: true,\r\n        clear_crease: true,\r\n        shot_block: true,\r\n        pk: true,\r\n        physical: true,\r\n        rock: true,\r\n        intimidation: true,\r\n        game_fatigue: true,\r\n        shift_fatigue: true,\r\n        points: true,\r\n        goals: true,\r\n        assists: true,\r\n        shots: true,\r\n        shooting_pct: true,\r\n        games_played: true,\r\n      },\r\n      where: {\r\n        player_id: playerId,\r\n        playing_year: season,\r\n      },\r\n    });\r\n  }\r\n\r\n  private async setTeamInfo(array: any[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        teamInfo: await this.getTeamInfo(item.team_name),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getTeamInfo(teamName: string) {\r\n    if (teamName) {\r\n      return await this.teamsRepo.findOne({\r\n        select: {\r\n          id: true,\r\n          city: true,\r\n          teamlogo: true,\r\n          nickname: true,\r\n        },\r\n        where: {\r\n          shortname: teamName,\r\n        },\r\n      });\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n\r\n  private async setNHLStats(array: any[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        nhlStats: await this.getNhlPlayerStatsByPlayerId(item.player_id.nhl_id),\r\n      }))\r\n    );\r\n  }\r\n\r\n  async getNhlPlayerStatsByPlayerId(\r\n    playerId: number\r\n  ): Promise<Observable<any>> {\r\n    const stats = this.httpService.get(\r\n      `${this.nhlAPI}/${playerId}/stats?stats=statsSingleSeason&season=20212022` //TODO CHANGE EVERY YEAR\r\n    );\r\n\r\n    const response = await firstValueFrom(stats);\r\n\r\n    return response.data.stats[0].splits[0]?.stat;\r\n  }\r\n\r\n  async getAll(): Promise<Salaries_V2[]> {\r\n    const salaries = await this.repo.find();\r\n\r\n    const salariesWithPlayerInfo = await this.setPlayerInfo(salaries);\r\n\r\n    return salariesWithPlayerInfo;\r\n  }\r\n\r\n  private async setPlayerInfo(array: any[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        playerInfo: await this.getPlayerInfo(item.player_id),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getPlayerInfo(playerId: number) {\r\n    if (playerId) {\r\n      return await this.playersRepo.findOne({\r\n        select: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n        },\r\n        where: {\r\n          id: playerId,\r\n        },\r\n      });\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n\r\n  async addSalary(body: SalaryAllDto) {\r\n    const salary = await this.repo.create(body);\r\n\r\n    return this.repo.save(salary);\r\n  }\r\n\r\n  async updateSalaryById(id: number, attrs: Partial<Salaries_V2>) {\r\n    const salary = await this.repo.findOneByOrFail({ id });\r\n\r\n    if (!salary) {\r\n      throw new NotFoundException('salary not found');\r\n    }\r\n\r\n    Object.assign(salary, attrs);\r\n\r\n    return this.repo.save(salary);\r\n  }\r\n}\r\n","export * from './api-salaries.service';\r\n","export * from './lib/api-schedule.module';\n","import { Schedule_V2, Teams_V2, Team_Stats_V2 } from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ScheduleController } from './controllers';\nimport { ScheduleMiddleware } from './middlewares';\nimport { ApiScheduleService } from './services';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Schedule_V2, Teams_V2, Team_Stats_V2])],\n  controllers: [ScheduleController],\n  providers: [ApiScheduleService],\n})\nexport class ApiScheduleModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(ScheduleMiddleware).forRoutes('*');\n  }\n}\n","export * from './schedule.controller';\r\n","import { ScheduleAllDto } from '@cha/shared/entities';\nimport { Controller, Get, NotFoundException, Param } from '@nestjs/common';\nimport { ApiScheduleService } from '../services';\n\n@Controller('schedule')\nexport class ScheduleController {\n  constructor(private scheduleService: ApiScheduleService) {}\n\n  @Get('/:season')\n  async getCompleteScheduleBySeason(@Param() param): Promise<ScheduleAllDto[]> {\n    const stats = await this.scheduleService.getCompleteScheduleBySeason(\n      param.season\n    );\n\n    if (!stats || stats.length < 1) {\n      throw new NotFoundException('Player Leader Stats not found');\n    }\n    return stats;\n  }\n\n  @Get('/next/:season/:currentDay')\n  async getNextDays(@Param() param): Promise<any[]> {\n    const stats = await this.scheduleService.getNextDays(\n      param.season,\n      Number(param.currentDay)\n    );\n\n    if (!stats || stats.length < 1) {\n      throw new NotFoundException('Player Leader Stats not found');\n    }\n    return stats;\n  }\n}\n","export * from './schedule.middleware';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class ScheduleMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Schedule...');\r\n    next();\r\n  }\r\n}\r\n","import { Schedule_V2, Teams_V2, Team_Stats_V2 } from '@api/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Between, Brackets, Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiScheduleService {\r\n  constructor(\r\n    @InjectRepository(Schedule_V2)\r\n    private repo: Repository<Schedule_V2>,\r\n    @InjectRepository(Teams_V2)\r\n    private teamInfoRepo: Repository<Teams_V2>,\r\n    @InjectRepository(Team_Stats_V2)\r\n    private teamStatsRepo: Repository<Team_Stats_V2>\r\n  ) {}\r\n\r\n  async getCompleteScheduleBySeason(season: string) {\r\n    const schedule = await this.repo.find({\r\n      where: {\r\n        playing_year: season,\r\n      },\r\n      order: {\r\n        game_day: 'ASC',\r\n      },\r\n    });\r\n\r\n    const scheduleTeamInfo = await this.setTeamInfo(schedule);\r\n\r\n    return scheduleTeamInfo;\r\n  }\r\n\r\n  async getNextDays(season: string, currentDay: number) {\r\n    const schedule = await this.repo.find({\r\n      where: {\r\n        playing_year: season,\r\n        game_day: Between(currentDay, currentDay + 4),\r\n      },\r\n      order: {\r\n        game_day: 'ASC',\r\n      },\r\n    });\r\n\r\n    const scheduleTeamInfo = await this.setTeamNextInfo(schedule);\r\n\r\n    return scheduleTeamInfo;\r\n  }\r\n\r\n  private async getTeamLastFive(teamId: number, season: string) {\r\n    const lastFive = await this.repo\r\n      .createQueryBuilder('schedule')\r\n      .where('schedule.playing_year = :year', { year: season })\r\n      .andWhere(\r\n        new Brackets((qb) => {\r\n          qb.where('schedule.home_team_id = :teamId', { teamId }).orWhere(\r\n            'schedule.vis_team_id = :teamId',\r\n            { teamId }\r\n          );\r\n        })\r\n      )\r\n      .orderBy('schedule.game_day', 'DESC')\r\n      .limit(5)\r\n      .getMany();\r\n\r\n    return await this.getLastFiveRecord(lastFive, teamId);\r\n  }\r\n\r\n  private async getLastFiveRecord(lastFive: Schedule_V2[], teamId: number) {\r\n    const lastFiveRecord = [];\r\n\r\n    await lastFive.forEach((record: Schedule_V2) => {\r\n      if (record.home_team_id === teamId) {\r\n        if (record.home_team_score > record.vis_team_score) {\r\n          lastFiveRecord.push('W');\r\n        } else if (record.home_team_score < record.vis_team_score) {\r\n          lastFiveRecord.push('L');\r\n        } else {\r\n          lastFiveRecord.push('T');\r\n        }\r\n      } else {\r\n        if (record.vis_team_score > record.home_team_score) {\r\n          lastFiveRecord.push('W');\r\n        } else if (record.vis_team_score < record.home_team_score) {\r\n          lastFiveRecord.push('L');\r\n        } else {\r\n          lastFiveRecord.push('T');\r\n        }\r\n      }\r\n    });\r\n\r\n    return lastFiveRecord;\r\n  }\r\n\r\n  private async getVersusRecord(data: Schedule_V2[], teamId: number) {\r\n    let wins = 0;\r\n    let loss = 0;\r\n    let ties = 0;\r\n\r\n    await data.forEach((game: Schedule_V2) => {\r\n      if (game.vis_team_id === teamId) {\r\n        game.vis_team_score > game.home_team_score\r\n          ? wins++\r\n          : game.vis_team_score === game.home_team_score\r\n          ? ties++\r\n          : loss++;\r\n      } else if (game.home_team_id === teamId) {\r\n        game.home_team_score > game.vis_team_score\r\n          ? wins++\r\n          : game.home_team_score === game.vis_team_score\r\n          ? ties++\r\n          : loss++;\r\n      }\r\n    });\r\n\r\n    return {\r\n      wins,\r\n      loss,\r\n      ties,\r\n    };\r\n  }\r\n\r\n  private async setTeamNextInfo(array: Schedule_V2[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        id: item.id,\r\n        gameDay: item.game_day,\r\n        visTeamScore: item.vis_team_score,\r\n        visTeamInfo: await this.getTeamInfo(item.vis_team_id),\r\n        visTeamLastFive: await this.getTeamLastFive(\r\n          item.vis_team_id,\r\n          item.playing_year\r\n        ),\r\n        visTeamRecord: await this.getTeamSeasonRecord(\r\n          item.vis_team_id,\r\n          item.playing_year\r\n        ),\r\n        visTeamVersus: await this.getTeamRecordVersus(\r\n          item.vis_team_id,\r\n          item.home_team_id,\r\n          item.playing_year\r\n        ),\r\n        homeTeamScore: item.home_team_score,\r\n        homeTeamInfo: await this.getTeamInfo(item.home_team_id),\r\n        homeTeamLastFive: await this.getTeamLastFive(\r\n          item.home_team_id,\r\n          item.playing_year\r\n        ),\r\n        homeTeamRecord: await this.getTeamSeasonRecord(\r\n          item.home_team_id,\r\n          item.playing_year\r\n        ),\r\n        homeTeamVersus: await this.getTeamRecordVersus(\r\n          item.home_team_id,\r\n          item.vis_team_id,\r\n          item.playing_year\r\n        ),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async setTeamInfo(array: Schedule_V2[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        visTeamInfo: await this.getTeamInfo(item.vis_team_id),\r\n        homeTeamInfo: await this.getTeamInfo(item.home_team_id),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getTeamRecordVersus(\r\n    teamOneId: number,\r\n    teamTwoId: number,\r\n    season: string\r\n  ) {\r\n    const versus = await this.repo\r\n      .createQueryBuilder('schedule')\r\n      .where('schedule.playing_year = :year', { year: season })\r\n      .where(\r\n        new Brackets((qb) => {\r\n          qb.where('schedule.vis_team_id = :teamOneId', { teamOneId })\r\n            .andWhere('schedule.home_team_id = :teamTwoId', { teamTwoId })\r\n            .andWhere('schedule.playing_year = :year', { year: season })\r\n            .andWhere('schedule.vis_team_score >= :empty', { empty: 0 });\r\n        })\r\n      )\r\n      .orWhere(\r\n        new Brackets((qb) => {\r\n          qb.where('schedule.vis_team_id = :teamTwoId', { teamTwoId })\r\n            .andWhere('schedule.home_team_id = :teamOneId', { teamOneId })\r\n            .andWhere('schedule.playing_year = :year', { year: season })\r\n            .andWhere('schedule.vis_team_score >= :empty', { empty: 0 });\r\n        })\r\n      )\r\n      .getMany();\r\n\r\n    return await this.getVersusRecord(versus, teamOneId);\r\n  }\r\n\r\n  private async getTeamSeasonRecord(teamId: number, season: string) {\r\n    return await this.teamStatsRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        wins: true,\r\n        loss: true,\r\n        ties: true,\r\n      },\r\n      where: {\r\n        team_id: {\r\n          id: teamId,\r\n        },\r\n        playing_year: season,\r\n        season_type: 'Regular',\r\n      },\r\n    });\r\n  }\r\n\r\n  private async getTeamInfo(teamId: number) {\r\n    return await this.teamInfoRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        city: true,\r\n        teamlogo: true,\r\n        nickname: true,\r\n        teamcolor: true,\r\n      },\r\n      where: {\r\n        id: teamId,\r\n      },\r\n    });\r\n  }\r\n}\r\n","export * from './api-schedule.service';","export * from './lib/api-team-stats.module';","import { Team_Stats_V2, Teams_V2, Conferences_V2 } from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { TeamStatsController } from './controllers';\nimport { TeamStatsMiddleware } from './middlewares';\nimport {\n  ApiAllTimeTeamStatsService,\n  ApiTeamStatsService,\n  ApiUserTeamStatsService,\n} from './services';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Team_Stats_V2, Teams_V2, Conferences_V2]),\n  ],\n  controllers: [TeamStatsController],\n  providers: [\n    ApiTeamStatsService,\n    ApiAllTimeTeamStatsService,\n    ApiUserTeamStatsService,\n  ],\n})\nexport class ApiTeamStatsModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(TeamStatsMiddleware).forRoutes('*');\n  }\n}\n","export * from './team-stats.controller';\r\n","import { Team_Stats_V2 } from '@api/entities';\nimport {\n  StatTeamsHistoryDto,\n  StatUserTeamRecordDto,\n} from '@cha/shared/entities';\nimport { Controller, Get, NotFoundException, Param } from '@nestjs/common';\nimport {\n  ApiAllTimeTeamStatsService,\n  ApiTeamStatsService,\n  ApiUserTeamStatsService,\n} from '../services';\n\n@Controller('team-stats')\nexport class TeamStatsController {\n  constructor(\n    private teamsStatsService: ApiTeamStatsService,\n    private allTimeTeamsStatsService: ApiAllTimeTeamStatsService,\n    private userTeamStatsService: ApiUserTeamStatsService\n  ) {}\n\n  @Get('/:season/:seasonType')\n  async getTeamStatsBySeasonByType(@Param() param): Promise<Team_Stats_V2[]> {\n    const stats = await this.teamsStatsService.getTeamStatsBySeasonByType(\n      param.season,\n      param.seasonType\n    );\n\n    if (!stats || stats.length < 1) {\n      throw new NotFoundException('Team Stats not found');\n    }\n    return stats;\n  }\n\n  @Get('/all/:season/:seasonType')\n  async getAllTeamStatsBySeasonByType(\n    @Param() param\n  ): Promise<Team_Stats_V2[]> {\n    const stats = await this.teamsStatsService.getAllTeamStatsBySeasonByType(\n      param.season,\n      param.seasonType\n    );\n\n    if (!stats || stats.length < 1) {\n      throw new NotFoundException('Team Stats not found');\n    }\n    return stats;\n  }\n\n  @Get('/playoffs/:season/:seasonType')\n  async getTeamStandingsForPlayoffs(@Param() param): Promise<Team_Stats_V2[]> {\n    const stats = await this.teamsStatsService.getTeamStandingsForPlayoffs(\n      param.season,\n      param.seasonType\n    );\n\n    if (!stats || stats.length < 1) {\n      throw new NotFoundException('Team Stats not found');\n    }\n    return stats;\n  }\n\n  @Get('/history/season/:seasonType')\n  async getAllTimeTeamStatsBySeasonByType(\n    @Param() param\n  ): Promise<StatTeamsHistoryDto[]> {\n    const stats =\n      await this.allTimeTeamsStatsService.getAllTimeTeamStatsBySeasonByType(\n        param.seasonType\n      );\n\n    if (!stats || stats.length < 1) {\n      throw new NotFoundException('Team Stats not found');\n    }\n    return stats;\n  }\n\n  @Get('/history/all-time/:seasonType')\n  async getAllTimeTeamStatsSummedBySeasonByType(\n    @Param() param\n  ): Promise<StatTeamsHistoryDto[]> {\n    const stats =\n      await this.allTimeTeamsStatsService.getAllTimeTeamStatsSummedBySeasonByType(\n        param.seasonType\n      );\n\n    if (!stats || stats.length < 1) {\n      throw new NotFoundException('Team Stats not found');\n    }\n    return stats;\n  }\n\n  @Get('/user/:teamId/record/:season/:seasonType/')\n  async getUserTeamRecordBySeasonBySeasonType(\n    @Param() param\n  ): Promise<StatUserTeamRecordDto> {\n    const record =\n      await this.userTeamStatsService.getUserTeamRecordBySeasonBySeasonType(\n        param.teamId,\n        param.season,\n        param.seasonType\n      );\n\n    if (!record) {\n      throw new NotFoundException('User Team Stats not found');\n    }\n    return record;\n  }\n\n  @Get('/user/:userId/history/:seasonType')\n  async getUserTeamStatsBySeasonType(\n    @Param() param\n  ): Promise<StatUserTeamRecordDto> {\n    const record =\n      await this.userTeamStatsService.getUserTeamStatsBySeasonType(\n        param.userId,\n        param.seasonType\n      );\n\n    if (!record) {\n      throw new NotFoundException('User Team Stats not found');\n    }\n    return record;\n  }\n}\n","export * from './team-stats.middleware';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class TeamStatsMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Team Stats...');\r\n    next();\r\n  }\r\n}\r\n","import { Team_Stats_V2 } from '@api/entities';\r\nimport { StatTeamsHistoryDto } from '@cha/shared/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectDataSource, InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, MoreThan, DataSource } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiAllTimeTeamStatsService {\r\n  constructor(\r\n    @InjectRepository(Team_Stats_V2)\r\n    private repo: Repository<Team_Stats_V2>,\r\n    @InjectDataSource() private dataSource: DataSource\r\n  ) {}\r\n\r\n  async getAllTimeTeamStatsBySeasonByType(\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ): Promise<StatTeamsHistoryDto[]> {\r\n    const allTimeStats = await this.repo.find({\r\n      relations: ['team_id'],\r\n      select: {\r\n        team_id: {\r\n          id: true,\r\n          city: true,\r\n          teamlogo: true,\r\n          shortname: true,\r\n          nickname: true,\r\n        },\r\n        games_played: true,\r\n        points: true,\r\n        wins: true,\r\n        loss: true,\r\n        ties: true,\r\n        penalty_minutes: true,\r\n        goals_for: true,\r\n        goals_against: true,\r\n        pk_goals: true,\r\n        pk_attempts: true,\r\n        pp_goals: true,\r\n        pp_attempts: true,\r\n        sh_goals: true,\r\n        playing_year: true,\r\n        season_type: true,\r\n        shut_outs: true,\r\n        face_off_won: true,\r\n        face_off_lost: true,\r\n        corner_won: true,\r\n        corner_lost: true,\r\n        pass_complete: true,\r\n        pass_incomplete: true,\r\n      },\r\n      where: {\r\n        season_type: seasonType,\r\n        games_played: MoreThan(0),\r\n      },\r\n      order: {\r\n        points: 'DESC',\r\n      },\r\n    });\r\n\r\n    const allTimeStatsConverted = await this.convertStats(allTimeStats, false);\r\n\r\n    return allTimeStatsConverted;\r\n  }\r\n\r\n  async getAllTimeTeamStatsSummedBySeasonByType(\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ): Promise<StatTeamsHistoryDto[]> {\r\n    const result = await this.dataSource.query(\r\n      ` select\r\n      a.team_id as team_id,\r\n      a.season_type as season_type, \r\n      c.city as city, \r\n      c.nickname as nickname,\r\n      c.shortname,\r\n      c.teamlogo,\r\n      c.isactive,\r\n      sum(games_played) as games_played, \r\n      sum(wins) as wins, \r\n      sum(loss) as loss, \r\n      sum(ties) as ties, \r\n      sum(points) as points, \r\n      sum(goals_for) as goals_for, \r\n      sum(goals_against) as goals_against, \r\n      sum(pp_attempts) as pp_attempts, \r\n      sum(pp_goals) as pp_goals, \r\n      sum(pk_attempts) as pk_attempts, \r\n      sum(pk_goals) as pk_goals, \r\n      sum(sh_goals) as sh_goals, \r\n      sum(penalty_minutes) as penalty_minutes, \r\n      sum(shots_for) as shots_for, \r\n      sum(shots_against) as shots_against, \r\n      sum(shut_outs) as shut_outs,\r\n      sum(face_off_won) as face_off_won,\r\n      sum(face_off_lost) as face_off_lost,\r\n      sum(corner_won) as corner_won,\r\n      sum(corner_lost) as corner_lost,\r\n      sum(pass_complete) as pass_complete,\r\n      sum(pass_incomplete) as pass_incomplete\r\n      from\r\n      team_stats_v2 as a\r\n      left join teams_v2 as c\r\n      on c.id = a.team_id\r\n      where a.season_type = '${seasonType}'\r\n      group by a.team_id, a.season_type, c.city, c.nickname, c.shortname, c.teamlogo, c.isactive\r\n      order by points DESC`\r\n    );\r\n\r\n    const allTimeStatsConverted = await this.convertStats(result, true);\r\n\r\n    return allTimeStatsConverted;\r\n  }\r\n\r\n  private async convertStats(array: any[], raw: boolean) {\r\n    return await Promise.all(\r\n      array.map((stat: any) => ({\r\n        goalsForPerGame: Number(\r\n          (stat.goals_for / stat.games_played).toFixed(2)\r\n        ),\r\n        goalsAgainstPerGame: Number(\r\n          (stat.goals_against / stat.games_played).toFixed(2)\r\n        ),\r\n        goalDiff: stat.goals_for - stat.goals_against,\r\n        winPct: Number(((stat.wins / stat.games_played) * 100).toFixed(1)),\r\n        ppPct: Number(((stat.pp_goals / stat.pp_attempts) * 100).toFixed(1)),\r\n        pkPct: Number(\r\n          (\r\n            ((stat.pk_attempts - stat.pk_goals) / stat.pk_attempts) *\r\n            100\r\n          ).toFixed(1)\r\n        ),\r\n        foPct: Number(\r\n          this.getPct(Number(stat.face_off_won), Number(stat.face_off_lost)).toFixed(1)\r\n        ),\r\n        passPct: Number(\r\n          this.getPct(Number(stat.pass_complete), Number(stat.pass_incomplete)).toFixed(1)\r\n        ),\r\n        cornerPct: Number(\r\n          this.getPct(Number(stat.corner_won), Number(stat.corner_lost)).toFixed(1)\r\n        ),\r\n        pimPerGame: Number(\r\n          (stat.penalty_minutes / stat.games_played).toFixed(1)\r\n        ),\r\n        team_name: raw\r\n          ? `${stat.city} ${stat.nickname}`\r\n          : `${stat.team_id.city} ${stat.team_id.nickname}`,\r\n        team_id: !raw\r\n          ? stat.team_id\r\n          : {\r\n              id: stat.team_id,\r\n              city: stat.city,\r\n              teamlogo: stat.teamlogo,\r\n              shortname: stat.shortname,\r\n              nickname: stat.nickname,\r\n            },\r\n        games_played: Number(stat.games_played),\r\n        wins: Number(stat.wins),\r\n        loss: Number(stat.loss),\r\n        ties: Number(stat.ties),\r\n        points: Number(stat.points),\r\n        goals_for: Number(stat.goals_for),\r\n        goals_against: Number(stat.goals_against),\r\n        shots_against: Number(stat.shots_against),\r\n        shots_for: Number(stat.shots_for),\r\n        pp_goals: Number(stat.pp_goals),\r\n        pp_attempts: Number(stat.pp_attempts),\r\n        pk_goals: Number(stat.pk_goals),\r\n        pk_attempts: Number(stat.pk_attempts),\r\n        sh_goals: Number(stat.sh_goals),\r\n        penalty_minutes: Number(stat.penalty_minutes),\r\n        face_off_won: Number(stat.face_off_won),\r\n        face_off_lost: Number(stat.face_off_lost),\r\n        corner_won: Number(stat.corner_won),\r\n        corner_lost: Number(stat.corner_lost),\r\n        pass_complete: Number(stat.pass_complete),\r\n        pass_incomplete: Number(stat.pass_incomplete),\r\n        shut_outs: Number(stat.shut_outs),\r\n        season_type: stat.season_type,\r\n        playing_year: stat.playing_year,\r\n      }))\r\n    );\r\n  }\r\n\r\n  private getPct(high: number, low: number): number {\r\n    const total = high + low;\r\n    return (high / total) * 100;\r\n  }\r\n}\r\n","import { Conferences_V2, Team_Stats_V2 } from '@api/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiTeamStatsService {\r\n  constructor(\r\n    @InjectRepository(Team_Stats_V2)\r\n    private repo: Repository<Team_Stats_V2>,\r\n    @InjectRepository(Conferences_V2)\r\n    private conferencesRepo: Repository<Conferences_V2>\r\n  ) {}\r\n\r\n  async getTeamStatsBySeasonByType(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ): Promise<Team_Stats_V2[]> {\r\n    return await this.repo.find({\r\n      relations: ['team_id'],\r\n      select: {\r\n        team_id: {\r\n          id: true,\r\n          city: true,\r\n          teamlogo: true,\r\n          shortname: true,\r\n          nickname: true,\r\n        },\r\n        games_played: true,\r\n        points: true,\r\n        wins: true,\r\n        loss: true,\r\n        ties: true,\r\n        long_win_streak: true,\r\n        penalty_minutes: true,\r\n        goals_for: true,\r\n        goals_against: true,\r\n        pk_goals: true,\r\n        pk_attempts: true,\r\n        pp_goals: true,\r\n        pp_attempts: true,\r\n      },\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n    });\r\n  }\r\n\r\n  async getAllTeamStatsBySeasonByType(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ): Promise<Team_Stats_V2[]> {\r\n    const teamStats = await this.repo.find({\r\n      relations: ['team_id'],\r\n      select: {\r\n        team_id: {\r\n          id: true,\r\n          city: true,\r\n          teamlogo: true,\r\n          shortname: true,\r\n          nickname: true,\r\n          divisions_id: {\r\n            id: true,\r\n            divisionname: true,\r\n            conference_id: true,\r\n          },\r\n        },\r\n        div_loss: true,\r\n        div_tie: true,\r\n        div_win: true,\r\n        games_played: true,\r\n        goals_against: true,\r\n        goals_for: true,\r\n        home_loss: true,\r\n        home_ties: true,\r\n        home_wins: true,\r\n        loss: true,\r\n        penalty_minutes: true,\r\n        pk_attempts: true,\r\n        pk_goals: true,\r\n        pk_min: true,\r\n        playing_year: true,\r\n        points: true,\r\n        pp_attempts: true,\r\n        pp_goals: true,\r\n        road_loss: true,\r\n        road_ties: true,\r\n        road_wins: true,\r\n        season_type: true,\r\n        ties: true,\r\n        trail_after_two_loss: true,\r\n        trail_after_two_ties: true,\r\n        trail_after_two_wins: true,\r\n        wins: true,\r\n      },\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n    });\r\n\r\n    const teamStatsWithConference = await this.setConferenceInfo(teamStats);\r\n\r\n    return teamStatsWithConference;\r\n  }\r\n\r\n  async getTeamStandingsForPlayoffs(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ): Promise<Team_Stats_V2[]> {\r\n    const teamStats = await this.repo.find({\r\n      relations: ['team_id'],\r\n      select: {\r\n        team_id: {\r\n          id: true,\r\n          city: true,\r\n          teamlogo: true,\r\n          teamcolor: true,\r\n          shortname: true,\r\n          nickname: true,\r\n          divisions_id: {\r\n            id: true,\r\n            divisionname: true,\r\n            conference_id: true,\r\n          },\r\n        },\r\n        goals_against: true,\r\n        goals_for: true,\r\n        playing_year: true,\r\n        points: true,\r\n        season_type: true,\r\n        wins: true,\r\n      },\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n    });\r\n\r\n    const teamStatsWithConference = await this.setConferenceInfo(teamStats);\r\n\r\n    const teamStatsWithConferenceSorted = await this.sortTeamStatsByStandings(\r\n      teamStatsWithConference\r\n    );\r\n\r\n    return teamStatsWithConferenceSorted;\r\n  }\r\n\r\n  private async setConferenceInfo(array: Team_Stats_V2[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        conference: await this.getConferenceInfo(\r\n          item.team_id.divisions_id.conference_id\r\n        ),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getConferenceInfo(conferenceId: number) {\r\n    return await this.conferencesRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        conferencename: true,\r\n      },\r\n      where: {\r\n        id: conferenceId,\r\n      },\r\n    });\r\n  }\r\n\r\n  private sortTeamStatsByStandings = (data) => {\r\n    return data\r\n      .sort((a: any, b: any) => {\r\n        if (b.points === a.points) {\r\n          if (b.wins === a.wins) {\r\n            if (\r\n              b.goals_for - b.goals_against ===\r\n              a.goals_for - a.goals_against\r\n            ) {\r\n              return b.goals_for - a.goals_for;\r\n            } else {\r\n              return (\r\n                b.goals_for - b.goals_against - (a.goals_for - a.goals_against)\r\n              );\r\n            }\r\n          } else {\r\n            return b.wins - a.wins;\r\n          }\r\n        } else {\r\n          return b.points - a.points;\r\n        }\r\n      });\r\n  };\r\n}\r\n","import { Teams_V2, Team_Stats_V2 } from '@api/entities';\r\nimport { StatUserTeamRecordDto } from '@cha/shared/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { MoreThan, Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiUserTeamStatsService {\r\n  constructor(\r\n    @InjectRepository(Team_Stats_V2)\r\n    private repo: Repository<Team_Stats_V2>,\r\n    @InjectRepository(Teams_V2)\r\n    private teamsRepo: Repository<Teams_V2>\r\n  ) {}\r\n\r\n  async getUserTeamRecordBySeasonBySeasonType(\r\n    teamId: number,\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ): Promise<StatUserTeamRecordDto> {\r\n    return await this.repo.findOne({\r\n      relations: ['team_id'],\r\n      select: {\r\n        team_id: {\r\n          id: true,\r\n          city: true,\r\n          teamlogo: true,\r\n          shortname: true,\r\n          nickname: true,\r\n        },\r\n        id: true,\r\n        wins: true,\r\n        loss: true,\r\n        ties: true,\r\n        points: true,\r\n        home_wins: true,\r\n        home_loss: true,\r\n        home_ties: true,\r\n        road_wins: true,\r\n        road_loss: true,\r\n        road_ties: true,\r\n        div_win: true,\r\n        div_loss: true,\r\n        div_tie: true,\r\n      },\r\n      where: {\r\n        team_id: {\r\n          id: teamId,\r\n        },\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n    });\r\n  }\r\n\r\n  async getUserTeamStatsBySeasonType(\r\n    userId: number,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ): Promise<any> {\r\n    const userTeams = await this.teamsRepo.findBy({ users_id: userId });\r\n\r\n    const userTeamsWithTeamStats = await this.setTeamStats(\r\n      userTeams,\r\n      seasonType\r\n    );\r\n\r\n    const userTeamsWithTeamStatsConverted = await this.setConvertedTeamStats(\r\n      userTeamsWithTeamStats\r\n    );\r\n\r\n    return userTeamsWithTeamStatsConverted;\r\n  }\r\n\r\n  private async setConvertedTeamStats(array: any[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        teamStats: await this.convertStats(item.teamStats),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async setTeamStats(\r\n    array: Teams_V2[],\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        teamStats: await this.getTeamStats(item.id, seasonType),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getTeamStats(\r\n    teamId: number,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    return await this.repo.find({\r\n      relations: ['team_id'],\r\n      select: {\r\n        team_id: {\r\n          id: true,\r\n          city: true,\r\n          teamlogo: true,\r\n          shortname: true,\r\n          nickname: true,\r\n        },\r\n        id: true,\r\n        games_played: true,\r\n        points: true,\r\n        wins: true,\r\n        loss: true,\r\n        ties: true,\r\n        penalty_minutes: true,\r\n        goals_for: true,\r\n        goals_against: true,\r\n        pk_goals: true,\r\n        pk_attempts: true,\r\n        pp_goals: true,\r\n        pp_attempts: true,\r\n        sh_goals: true,\r\n        playing_year: true,\r\n        season_type: true,\r\n        shut_outs: true,\r\n        face_off_won: true,\r\n        face_off_lost: true,\r\n        corner_won: true,\r\n        corner_lost: true,\r\n        pass_complete: true,\r\n        pass_incomplete: true,\r\n        shots_against: true,\r\n        shots_for: true\r\n      },\r\n      where: {\r\n        team_id: {\r\n          id: teamId,\r\n        },\r\n        games_played: MoreThan(0),\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        playing_year: 'DESC'\r\n      }\r\n    });\r\n  }\r\n\r\n  private async convertStats(array: any[]) {\r\n    return await Promise.all(\r\n      array.map((stat: any) => ({\r\n        goalsForPerGame: Number(\r\n          (stat.goals_for / stat.games_played).toFixed(2)\r\n        ),\r\n        goalsAgainstPerGame: Number(\r\n          (stat.goals_against / stat.games_played).toFixed(2)\r\n        ),\r\n        goalDiff: stat.goals_for - stat.goals_against,\r\n        winPct: Number(((stat.wins / stat.games_played) * 100).toFixed(1)),\r\n        ppPct: Number(((stat.pp_goals / stat.pp_attempts) * 100).toFixed(1)),\r\n        pkPct: Number(\r\n          (\r\n            ((stat.pk_attempts - stat.pk_goals) / stat.pk_attempts) *\r\n            100\r\n          ).toFixed(1)\r\n        ),\r\n        foPct: Number(\r\n          this.getPct(\r\n            Number(stat.face_off_won),\r\n            Number(stat.face_off_lost)\r\n          ).toFixed(1)\r\n        ),\r\n        passPct: Number(\r\n          this.getPct(\r\n            Number(stat.pass_complete),\r\n            Number(stat.pass_incomplete)\r\n          ).toFixed(1)\r\n        ),\r\n        cornerPct: Number(\r\n          this.getPct(\r\n            Number(stat.corner_won),\r\n            Number(stat.corner_lost)\r\n          ).toFixed(1)\r\n        ),\r\n        pimPerGame: Number(\r\n          (stat.penalty_minutes / stat.games_played).toFixed(1)\r\n        ),\r\n        team_name: `${stat.team_id.city} ${stat.team_id.nickname}`,\r\n        team_id: stat.team_id,\r\n        games_played: Number(stat.games_played),\r\n        wins: Number(stat.wins),\r\n        loss: Number(stat.loss),\r\n        ties: Number(stat.ties),\r\n        points: Number(stat.points),\r\n        goals_for: Number(stat.goals_for),\r\n        goals_against: Number(stat.goals_against),\r\n        shots_against: Number(stat.shots_against),\r\n        shots_for: Number(stat.shots_for),\r\n        pp_goals: Number(stat.pp_goals),\r\n        pp_attempts: Number(stat.pp_attempts),\r\n        pk_goals: Number(stat.pk_goals),\r\n        pk_attempts: Number(stat.pk_attempts),\r\n        sh_goals: Number(stat.sh_goals),\r\n        penalty_minutes: Number(stat.penalty_minutes),\r\n        face_off_won: Number(stat.face_off_won),\r\n        face_off_lost: Number(stat.face_off_lost),\r\n        corner_won: Number(stat.corner_won),\r\n        corner_lost: Number(stat.corner_lost),\r\n        pass_complete: Number(stat.pass_complete),\r\n        pass_incomplete: Number(stat.pass_incomplete),\r\n        shut_outs: Number(stat.shut_outs),\r\n        season_type: stat.season_type,\r\n        playing_year: stat.playing_year,\r\n      }))\r\n    );\r\n  }\r\n\r\n  private getPct(high: number, low: number): number {\r\n    const total = high + low;\r\n    return (high / total) * 100;\r\n  }\r\n}\r\n","export * from './api-team-stats.service';\r\nexport * from './api-all-time-team-stats.service';\r\nexport * from './api-user-team-stats.service';\r\n","export * from './lib/api-teams.module';\n","import { Teams_V2, Users_V2 } from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { TeamsController } from './controllers';\nimport { TeamsMiddleware } from './middlewares/teams.middleware';\nimport { TeamsService } from './services';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Teams_V2, Users_V2])],\n  controllers: [TeamsController],\n  providers: [TeamsService],\n})\nexport class ApiTeamsModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(TeamsMiddleware).forRoutes('*');\n  }\n}\n","export * from './teams.controller';\r\n","import { DivisionDto, TeamCreateDto, TeamDto } from '@cha/shared/entities';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  NotFoundException,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\nimport { TeamsService } from '../services';\n\n@Controller('teams')\nexport class TeamsController {\n  constructor(private teamsService: TeamsService) {}\n\n  @Get('/user/:id')\n  async getUserTeams(@Param() param): Promise<TeamDto[]> {\n    const teams = await this.teamsService.getUserTeams(parseInt(param.id));\n\n    if (!teams || teams.length < 1) {\n      throw new NotFoundException('User Teams not found');\n    }\n    return teams;\n  }\n\n  @Get('/current')\n  async getCurrentTeams(): Promise<TeamDto[]> {\n    const teams = await this.teamsService.getCurrentTeams();\n\n    if (!teams || teams.length < 1) {\n      throw new NotFoundException('No Current Teams found');\n    }\n    return teams;\n  }\n\n  @Get('/:teamId')\n  async getUserByTeamId(@Param() param): Promise<{ user }> {\n    const user = await this.teamsService.getUserByTeamId(param.teamId);\n\n    if (!user) {\n      throw new NotFoundException('No User Found');\n    }\n    return user;\n  }\n\n  @Get()\n  async getTeams(): Promise<TeamDto[]> {\n    const teams = await this.teamsService.getAll();\n\n    if (!teams || teams.length < 1) {\n      throw new NotFoundException('teams not found');\n    }\n    return teams;\n  }\n\n  @Put('/:id')\n  updateTeamById(@Param() param, @Body() body): Promise<TeamDto> {\n    return this.teamsService.updateTeamById(parseInt(param.id), body);\n  }\n\n  @Post('/add')\n  addUser(@Body() body: TeamCreateDto) {\n    return this.teamsService.addTeam(body);\n  }\n\n  @Delete('/delete/:id')\n  deleteUserById(@Param() param) {\n    return this.teamsService.deleteTeam(parseInt(param.id));\n  }\n}\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class TeamsMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Teams...');\r\n    next();\r\n  }\r\n}","export * from './teams.service';\r\n","import { Teams_V2, Users_V2 } from '@api/entities';\r\nimport { TeamCreateDto } from '@cha/shared/entities';\r\nimport { Injectable, NotFoundException } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class TeamsService {\r\n  constructor(\r\n    @InjectRepository(Teams_V2) private repo: Repository<Teams_V2>,\r\n    @InjectRepository(Users_V2) private userRepo: Repository<Users_V2>,\r\n  ) {}\r\n\r\n  async getUserTeams(id: number): Promise<Teams_V2[]> {\r\n    return await this.repo.findBy({ users_id: id });\r\n  }\r\n\r\n  async getCurrentTeams(): Promise<Teams_V2[]> {\r\n    return await this.repo.findBy({ isactive: true });\r\n  }\r\n\r\n  async getUserByTeamId(teamId: number): Promise<any> {\r\n    const userId = await this.repo.findOne({\r\n      select: {\r\n        id: true,\r\n        users_id: true,\r\n      },\r\n      where: {\r\n        id: teamId,\r\n      },\r\n    });\r\n\r\n    const user = await this.userRepo.findOne({\r\n      where: {\r\n        id: userId.users_id,\r\n      },\r\n    });\r\n\r\n    return user;\r\n  }\r\n\r\n  async getAll(): Promise<Teams_V2[]> {\r\n    return await this.repo.find();\r\n  }\r\n\r\n  async updateTeamById(id: number, attrs: Partial<Teams_V2>) {\r\n    const team = await this.repo.findOneByOrFail({ id });\r\n\r\n    if (!team) {\r\n      throw new NotFoundException('team not found');\r\n    }\r\n\r\n    Object.assign(team, attrs);\r\n\r\n    return this.repo.save(team);\r\n  }\r\n\r\n  async addTeam(body: TeamCreateDto) {\r\n    const team = await this.repo.create(body);\r\n\r\n    return this.repo.save(team);\r\n  }\r\n\r\n  async deleteTeam(id: number): Promise<Teams_V2> {\r\n    const team = await this.repo.findOneByOrFail({ id });\r\n\r\n    if (!team) {\r\n      throw new NotFoundException('team not found');\r\n    }\r\n    return this.repo.remove(team);\r\n  }\r\n}\r\n","export * from './lib/api-transactions.module';\n","import {\n  Draft_Order_V2,\n  Goalies_Stats_V2,\n  Players_Stats_V2,\n  Players_V2,\n  Teams_V2,\n  Transactions_V2,\n} from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { TransactionsController } from './controllers';\nimport { TransactionsMiddleware } from './middlewares';\nimport {\n  ApiTransactionsService,\n  ApiTransactionsTradesService,\n} from './services';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      Transactions_V2,\n      Teams_V2,\n      Players_V2,\n      Players_Stats_V2,\n      Goalies_Stats_V2,\n      Draft_Order_V2,\n    ]),\n  ],\n  controllers: [TransactionsController],\n  providers: [ApiTransactionsService, ApiTransactionsTradesService],\n})\nexport class ApiTransactionsModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(TransactionsMiddleware).forRoutes('*');\n  }\n}\n","export * from './transactions.controller';\r\n","import { GetTeamTransactionDto } from '@cha/shared/entities';\nimport { Controller, Get, NotFoundException, Param } from '@nestjs/common';\nimport {\n  ApiTransactionsService,\n  ApiTransactionsTradesService,\n} from '../services';\n\n@Controller('transactions')\nexport class TransactionsController {\n  constructor(\n    private transactionsService: ApiTransactionsService,\n    private transactionsTradesService: ApiTransactionsTradesService\n  ) {}\n\n  @Get('/:season')\n  async getTransactionsBySeason(@Param() param): Promise<any[]> {\n    const stats = await this.transactionsService.getTransactionsBySeason(\n      param.season\n    );\n\n    if (!stats || stats.length < 1) {\n      throw new NotFoundException('Transactions not found');\n    }\n    return stats;\n  }\n\n  @Get('team/:team/:season/:draftYear')\n  async getTeam(@Param() param): Promise<GetTeamTransactionDto> {\n    const team = await this.transactionsTradesService.getTeamBySeason(\n      param.team,\n      param.season,\n      param.draftYear\n    );\n\n    if (!team) {\n      throw new NotFoundException('Team not found');\n    }\n    return team;\n  }\n}\n","export * from './transactions.middleware';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class TransactionsMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Transactions...');\r\n    next();\r\n  }\r\n}\r\n","import {\r\n  Draft_Order_V2,\r\n  Goalies_Stats_V2,\r\n  Players_Stats_V2,\r\n  Teams_V2,\r\n  Transactions_V2,\r\n} from '@api/entities';\r\nimport { GetTeamTransactionDto } from '@cha/shared/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Brackets, Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiTransactionsTradesService {\r\n  constructor(\r\n    @InjectRepository(Transactions_V2)\r\n    private repo: Repository<Transactions_V2>,\r\n    @InjectRepository(Teams_V2)\r\n    private teamInfoRepo: Repository<Teams_V2>,\r\n    @InjectRepository(Players_Stats_V2)\r\n    private playerStatsRepo: Repository<Players_Stats_V2>,\r\n    @InjectRepository(Goalies_Stats_V2)\r\n    private goalieStatsRepo: Repository<Goalies_Stats_V2>,\r\n    @InjectRepository(Draft_Order_V2)\r\n    private draftRepo: Repository<Draft_Order_V2>\r\n  ) {}\r\n\r\n  async getTeamBySeason(\r\n    team: string,\r\n    season: string,\r\n    draftYear: string\r\n  ): Promise<GetTeamTransactionDto> {\r\n    const players = await this.playerStatsRepo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n        },\r\n      },\r\n      where: {\r\n        team_name: team,\r\n        playing_year: season,\r\n      },\r\n    });\r\n\r\n    const goalies = await this.goalieStatsRepo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n        },\r\n      },\r\n      where: {\r\n        team_name: team,\r\n        playing_year: season,\r\n      },\r\n    });\r\n\r\n    const draftTeam = await this.getPlayerTeamInfo(team);\r\n\r\n    console.log(draftTeam);\r\n\r\n    const draftPicks = await this.draftRepo\r\n      .createQueryBuilder('Draft_Order_V2')\r\n      .leftJoinAndSelect(\r\n        Teams_V2,\r\n        'team',\r\n        'team.id = Draft_Order_V2.team_id.id'\r\n      )\r\n      .where('Draft_Order_V2.draft_year = :draftYear', { draftYear: draftYear })\r\n      .andWhere('Draft_Order_V2.draft_year = :draftYear', {\r\n        draftYear: (Number(draftYear) + 1).toString(),\r\n      })\r\n      //   .andWhere(\r\n      //     new Brackets((qb) => {\r\n      //       qb.where('Draft_Order_V2.team_id.shortname = :shortName', {\r\n      //         shortName: draftTeam.shortname,\r\n      //       })\r\n      //         .orWhere('Draft_Order_V2.round_one = :teamId', {\r\n      //           teamId: draftTeam.id,\r\n      //         })\r\n      //         .orWhere('Draft_Order_V2.round_two = :teamId', {\r\n      //           teamId: draftTeam.id,\r\n      //         })\r\n      //         .orWhere('Draft_Order_V2.round_three = :teamId', {\r\n      //           teamId: draftTeam.id,\r\n      //         })\r\n      //         .orWhere('Draft_Order_V2.round_four = :teamId', {\r\n      //           teamId: draftTeam.id,\r\n      //         })\r\n      //         .orWhere('Draft_Order_V2.round_five = :teamId', {\r\n      //           teamId: draftTeam.id,\r\n      //         });\r\n      //     })\r\n      //   )\r\n      .getMany();\r\n\r\n    const playersWithTeamInfo = await this.setTeamInfo(players);\r\n    const goaliesWithTeamInfo = await this.setTeamInfo(goalies);\r\n    // const draftPicksWithTeamInfo = await this.setDraftTeamInfo(draftPicks);\r\n\r\n    return {\r\n      players: playersWithTeamInfo,\r\n      goalies: goaliesWithTeamInfo,\r\n      draftPicks: draftPicks,\r\n    };\r\n  }\r\n\r\n  private async setDraftTeamInfo(array: Draft_Order_V2[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        teamInfo: await this.getPlayerTeamInfo(item.team_id.shortname),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async setTeamInfo(array: Players_Stats_V2[] | Goalies_Stats_V2[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        teamInfo: await this.getPlayerTeamInfo(item.team_name),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getPlayerTeamInfo(teamName: string) {\r\n    return await this.teamInfoRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        shortname: true,\r\n      },\r\n      where: {\r\n        shortname: teamName,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Players_V2, Teams_V2, Transactions_V2 } from '@api/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Between, Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiTransactionsService {\r\n  constructor(\r\n    @InjectRepository(Transactions_V2)\r\n    private repo: Repository<Transactions_V2>,\r\n    @InjectRepository(Teams_V2)\r\n    private teamInfoRepo: Repository<Teams_V2>,\r\n    @InjectRepository(Players_V2)\r\n    private playersRepo: Repository<Players_V2>\r\n  ) {}\r\n\r\n  async getTransactionsBySeason(year: string) {\r\n    const season = this.findSeasonDates(year);\r\n\r\n    const transactions = await this.repo.find({\r\n      where: {\r\n        transaction_date: Between(new Date(season.start), new Date(season.end)),\r\n      },\r\n      order: {\r\n        transaction_date: 'DESC',\r\n      },\r\n    });\r\n\r\n    const transactionsTeamInfo = await this.setTransactionInfo(transactions);\r\n\r\n    return transactionsTeamInfo;\r\n  }\r\n\r\n  private async setTransactionInfo(transactions: Transactions_V2[]) {\r\n    return await Promise.all(\r\n      transactions.map(async (transaction: Transactions_V2) => ({\r\n        id: transaction.id,\r\n        transactionDate: transaction.transaction_date,\r\n        teamOneInfo: await this.getTeamInfo(transaction.team_one_id),\r\n        teamOnePlayers: await this.setPlayersInfo(transaction.team_one_players),\r\n        teamOnePicks: transaction.team_one_picks,\r\n        teamTwoInfo: await this.getTeamInfo(transaction.team_two_id),\r\n        teamTwoPlayers: await this.setPlayersInfo(transaction.team_two_players),\r\n        teamTwoPicks: transaction.team_two_picks,\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async setPlayersInfo(array: number[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        player: await this.getPlayerInfo(item),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getTeamInfo(teamId: number) {\r\n    return await this.teamInfoRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        city: true,\r\n        teamlogo: true,\r\n        nickname: true,\r\n        teamcolor: true,\r\n        teamtextcolor: true,\r\n      },\r\n      where: {\r\n        id: teamId,\r\n      },\r\n    });\r\n  }\r\n\r\n  private async getPlayerInfo(playerId: number) {\r\n    return await this.playersRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        firstname: true,\r\n        lastname: true,\r\n        nhl_id: true,\r\n      },\r\n      where: {\r\n        id: playerId,\r\n      },\r\n    });\r\n  }\r\n\r\n  private findSeasonDates(year: string) {\r\n    const seasons = [\r\n      { year: '23', start: '2022-06-02', end: '2023-06-01' },\r\n      { year: '22', start: '2021-07-15', end: '2022-06-01' },\r\n      { year: '21', start: '2020-04-27', end: '2021-07-15' },\r\n    ];\r\n\r\n    return seasons.find((season) => season.year === year);\r\n  }\r\n}\r\n","export * from './api-transactions.service';\r\nexport * from './api-transactions-trades.service';\r\n","export * from './lib/api-users.module';\n","import { Users_V2 } from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersController } from './controllers';\nimport { UserMiddleware } from './middlewares';\nimport { UsersService } from './services';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Users_V2])],\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class ApiUsersModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(UserMiddleware).forRoutes('*');\n  }\n}\n","export * from './users.controller';\r\n","import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  NotFoundException,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\nimport { UsersService } from '../services';\nimport { UserCreateDto, UserDto } from '@cha/shared/entities';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private usersService: UsersService) {}\n\n  @Get()\n  async getUsers(): Promise<UserDto[]> {\n    const users = await this.usersService.getAll();\n\n    if (!users || users.length < 1) {\n      throw new NotFoundException('users not found');\n    }\n    return users;\n  }\n\n  @Get('/:email')\n  async getUserByEmail(@Param() param): Promise<UserDto> {\n    const user = await this.usersService.findUserByEmail(param.email);\n    if (!user) {\n      throw new NotFoundException('user not found');\n    }\n    return user;\n  }\n\n  @Get('/userId/:id')\n  async getUserById(@Param() param): Promise<UserDto> {\n    const user = await this.usersService.findUserById(parseInt(param.id));\n    if (!user) {\n      throw new NotFoundException('user not found');\n    }\n    return user;\n  }\n\n  @Put('/userId/:id')\n  updateUserById(@Param() param, @Body() body): Promise<UserDto> {\n    return this.usersService.updateUserById(parseInt(param.id), body);\n  }\n\n  @Post('/add')\n  addUser(@Body() body: UserCreateDto) {\n    return this.usersService.addUser(body);\n  }\n\n  @Delete('/delete/:id')\n  deleteUserById(@Param() param) {\n    return this.usersService.deleteUser(parseInt(param.id));\n  }\n}\n","export * from './user.middleware';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class UserMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request User...');\r\n    next();\r\n  }\r\n}\r\n","export * from './users.service';\r\n","import { Users_V2 } from '@api/entities';\nimport { UserCreateDto } from '@cha/shared/entities';\nimport { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class UsersService {\n  constructor(@InjectRepository(Users_V2) private repo: Repository<Users_V2>) {}\n\n  async findUserByEmail(email: string): Promise<Users_V2> {\n    return await this.repo.findOneByOrFail({ email });\n  }\n\n  async getAll(): Promise<Users_V2[]> {\n    return await this.repo.find();\n  }\n\n  async findUserById(id: number): Promise<Users_V2> {\n    return await this.repo.findOneByOrFail({ id });\n  }\n\n  async updateUserById(id: number, attrs: Partial<Users_V2>) {\n    const user = await this.repo.findOneByOrFail({ id });\n\n    if (!user) {\n      throw new NotFoundException('user not found');\n    }\n\n    Object.assign(user, attrs);\n\n    return this.repo.save(user);\n  }\n\n  async addUser(body: UserCreateDto) {\n    const user = await this.repo.create(body);\n\n    return this.repo.save(user);\n  }\n\n  async deleteUser(id: number): Promise<Users_V2> {\n    const user = await this.repo.findOneByOrFail({ id });\n\n    if (!user) {\n      throw new NotFoundException('user not found');\n    }\n    return this.repo.remove(user);\n  }\n}\n","export * from './lib/api-waivers.module';\n","import { Teams_V2, Waivers_V2 } from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { WaiversController } from './controllers';\nimport { WaiversMiddleware } from './middlewares';\nimport { ApiWaiversService } from './services';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Waivers_V2, Teams_V2])],\n  controllers: [WaiversController],\n  providers: [ApiWaiversService],\n})\nexport class ApiWaiversModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(WaiversMiddleware).forRoutes('*');\n  }\n}\n","export * from './waivers.controller';\r\n","import { Waivers_V2 } from '@api/entities';\nimport { WaiversDto } from '@cha/shared/entities';\nimport {\n  Body,\n  Controller,\n  Get,\n  NotFoundException,\n  Param,\n  Put,\n} from '@nestjs/common';\nimport { ApiWaiversService } from '../services';\n\n@Controller('waivers')\nexport class WaiversController {\n  constructor(private waiversService: ApiWaiversService) {}\n\n  @Get('/all')\n  async getAllPlayerSalaries(): Promise<Waivers_V2[]> {\n    const salaries = await this.waiversService.getWaiverPriority();\n\n    if (!salaries) {\n      throw new NotFoundException('Waivers not found');\n    }\n    return salaries;\n  }\n\n  @Put()\n  updateWaiverById(@Body() body): Promise<void> {\n    return this.waiversService.updateWaiverPriority(body);\n  }\n}\n","export * from './waivers.middleware';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class WaiversMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Waivers...');\r\n    next();\r\n  }\r\n}\r\n","import { Teams_V2, Waivers_V2 } from '@api/entities';\r\nimport { WaiversDto } from '@cha/shared/entities';\r\nimport { Injectable, NotFoundException } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiWaiversService {\r\n  constructor(\r\n    @InjectRepository(Waivers_V2)\r\n    private repo: Repository<Waivers_V2>,\r\n    @InjectRepository(Teams_V2)\r\n    private teamsRepo: Repository<Teams_V2>\r\n  ) {}\r\n\r\n  async getWaiverPriority() {\r\n    const allWaivers = await this.repo.find();\r\n\r\n    const allWaiverWithTeamInfo = await this.setTeamInfo(allWaivers);\r\n\r\n    return allWaiverWithTeamInfo;\r\n  }\r\n\r\n  async updateWaiverPriority(waiverList: WaiversDto[]) {\r\n    const allWaivers = await this.setNewWaiverPriority(waiverList);\r\n\r\n    return allWaivers;\r\n  }\r\n\r\n  private async setNewWaiverPriority(waiverList: WaiversDto[]) {\r\n    return await waiverList.forEach(\r\n      async (waiver: WaiversDto) => await this.updateWaiver(waiver)\r\n    );\r\n  }\r\n\r\n  private async updateWaiver(team: WaiversDto) {\r\n    const waiver = await this.repo.findOneByOrFail({ id: team.id });\r\n\r\n    if (!waiver) {\r\n      throw new NotFoundException('team not found');\r\n    }\r\n\r\n    Object.assign(waiver, team);\r\n\r\n    return this.repo.save(team);\r\n  }\r\n\r\n  private async setTeamInfo(array: any[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        teamInfo: await this.getTeamInfo(item.team_id),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getTeamInfo(teamId: number) {\r\n    if (teamId) {\r\n      return await this.teamsRepo.findOne({\r\n        select: {\r\n          id: true,\r\n          city: true,\r\n          teamlogo: true,\r\n          nickname: true,\r\n        },\r\n        where: {\r\n          id: teamId,\r\n        },\r\n      });\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n","export * from './api-waivers.service';\r\n","export * from './lib/dtos';\n\nexport * from './lib/enums';\n\nexport * from './lib/models';\n","import { AwardTypeEnum } from '../../enums';\r\n\r\nexport interface AwardAwardTypeDto {\r\n  id: AwardTypeEnum;\r\n  display_name: string;\r\n}\r\n","export interface AwardStatsDto {\r\n  id: number;\r\n  player_id: number;\r\n  playing_year: string;\r\n  games_played: number;\r\n  goals?: number;\r\n  assists?: number;\r\n  points?: number;\r\n  wins?: number;\r\n  goals_against_avg?: string;\r\n  save_pct?: string;\r\n  goals_for?: number;\r\n  goals_against?: number;\r\n}\r\n","import { PlayerDto } from '../player';\r\nimport { TeamDto } from '../teams';\r\nimport { UserDto } from '../user';\r\nimport { AwardAwardTypeDto } from './award-award-type.dto';\r\nimport { AwardStatsDto } from './award-stats.dto';\r\n\r\nexport interface AwardDto {\r\n  id: number;\r\n  display_season: string;\r\n  cha_season: string;\r\n  award_type: AwardAwardTypeDto;\r\n  users_id: UserDto;\r\n  team_id: TeamDto;\r\n  player_id?: PlayerDto;\r\n  stats?: AwardStatsDto;\r\n}\r\n","export * from './award.dto';\r\nexport * from './award-stats.dto';\r\nexport * from './award-award-type.dto';\r\nexport * from './user-award.dto';\r\n","export interface UserAwardDto {\r\n  id: number;\r\n  display_season: string;\r\n  award_type: {\r\n    id: number;\r\n    display_name: string;\r\n  };\r\n  users_id: {\r\n    id: number;\r\n    firstname: string;\r\n    lastname: string;\r\n  };\r\n  player_id: {\r\n    id: number;\r\n    firstname: string;\r\n    lastname: string;\r\n    nhl_id: string;\r\n  };\r\n  team_id: {\r\n    id: number;\r\n    teamlogo: string;\r\n    teamcolor: string;\r\n    teamtextcolor: string;\r\n  };\r\n}\r\n","import { PlayerDto } from '../player';\r\nimport { TeamDto } from '../teams';\r\n\r\nexport interface DraftPickDto {\r\n  id: number;\r\n  draft_overall: number;\r\n  draft_round: number;\r\n  draft_year: string;\r\n  player_id: PlayerDto;\r\n  team_id: TeamDto;\r\n}\r\n","import { TeamsEnum } from '../../enums';\r\n\r\nexport interface DraftTableStatDto {\r\n  id: number;\r\n  team_id: TeamsEnum;\r\n  wins: string;\r\n  points: string;\r\n  goals_for: string;\r\n  goals_against: string;\r\n}\r\n","import { TeamsEnum } from '../../enums';\r\nimport { TeamDto } from '../teams';\r\nimport { DraftTableStatDto } from './draft-table-stat.dto';\r\n\r\nexport interface DraftTableDto {\r\n  id: number;\r\n  draft_year: string;\r\n  team_id: TeamDto;\r\n  round_one: TeamsEnum;\r\n  round_two: TeamsEnum;\r\n  round_three: TeamsEnum;\r\n  round_four: TeamsEnum;\r\n  round_five: TeamsEnum;\r\n  stats: DraftTableStatDto;\r\n}\r\n","export * from './draft-table-stat.dto';\r\nexport * from './draft-table.dto';\r\nexport * from './draft-pick.dto';\r\n","export * from './user';\r\nexport * from './teams';\r\nexport * from './league';\r\nexport * from './awards';\r\nexport * from './player';\r\nexport * from './drafts';\r\nexport * from './nhl';\r\nexport * from './stats';\r\nexport * from './schedule';\r\nexport * from './transactions';\r\nexport * from './salaries';\r\nexport * from './waivers';","export interface ConferenceDto {\r\n  id: number;\r\n  conferencename: string;\r\n  isactive: boolean;\r\n}\r\n","import { ConferencesEnum } from '../../enums';\r\n\r\nexport interface DivisionDto {\r\n  id: number;\r\n  divisionname: string;\r\n  conference_id: ConferencesEnum;\r\n  isactive: boolean;\r\n}\r\n","export * from './leagueData.dto';\r\nexport * from './conference.dto';\r\nexport * from './division.dto';\r\n","export interface LeagueDataDto {\r\n  current_year: string;\r\n  next_year: string;\r\n  prev_year: string;\r\n  nhl_year: string;\r\n  current_season_type: string;\r\n  current_day: number;\r\n  current_draft_year: number;\r\n  next_draft_year: number;\r\n  current_cap: number;\r\n  next_cap: number;\r\n  min_games: number;\r\n  offseason: boolean;\r\n}\r\n","export * from './nhl-leaders.dto';\r\nexport * from './nhl-player.dto';\r\nexport * from './nhl-goalie-stat.dto';\r\nexport * from './nhl-player-stat.dto';\r\n","export interface NhlGoalieStatDto {\r\n  assists: number;\r\n  gamesPlayed: number;\r\n  gamesStarted?: number;\r\n  goalieFullName?: string;\r\n  goals: number;\r\n  goalsAgainst?: number;\r\n  goalsAgainstAverage?: number;\r\n  lastName: string;\r\n  losses?: number;\r\n  otLosses?: number;\r\n  penaltyMinutes: number;\r\n  playerId: number;\r\n  player_id?: number;\r\n  points: number;\r\n  savePct?: number;\r\n  saves?: number;\r\n  seasonId: number;\r\n  shootsCatches: string;\r\n  shotsAgainst?: number;\r\n  shutouts?: number;\r\n  teamAbbrevs: string;\r\n  ties?: null;\r\n  timeOnIce?: number;\r\n  wins?: number;\r\n  chaTeam?: string;\r\n}\r\n","import { NhlPlayerDto, NhlGoalieDto } from './nhl-player.dto';\r\n\r\nexport interface NhlLeadersDto {\r\n  points: NhlPlayerDto[];\r\n  goals: NhlPlayerDto[];\r\n  assists: NhlPlayerDto[];\r\n  rookiePoints: NhlPlayerDto[];\r\n  rookieGoals: NhlPlayerDto[];\r\n  rookieAssists: NhlPlayerDto[];\r\n  gaa: NhlGoalieDto[];\r\n  savePct: NhlGoalieDto[];\r\n  shutouts: NhlGoalieDto[];\r\n  defensePoints: NhlPlayerDto[];\r\n  defenseGoals: NhlPlayerDto[];\r\n  defenseAssists: NhlPlayerDto[];\r\n}\r\n","export interface NhlPlayerStatDto {\r\n  assists: number;\r\n  evGoals?: number;\r\n  evPoints?: number;\r\n  faceoffWinPct?: number;\r\n  gameWinningGoals?: number;\r\n  gamesPlayed: number;\r\n  goals: number;\r\n  lastName: string;\r\n  otGoals?: number;\r\n  penaltyMinutes: number;\r\n  playerId: number;\r\n  player_id?: number;\r\n  plusMinus?: number;\r\n  points: number;\r\n  pointsPerGame?: number;\r\n  positionCode?: string;\r\n  ppGoals?: number;\r\n  ppPoints?: number;\r\n  seasonId: number;\r\n  shGoals?: number;\r\n  shPoints?: number;\r\n  shootingPct?: number;\r\n  shootsCatches: string;\r\n  shots?: number;\r\n  skaterFullName?: string;\r\n  teamAbbrevs: string;\r\n  timeOnIcePerGame?: number;\r\n  chaTeam?: string;\r\n}\r\n","export interface NhlPlayerDto {\r\n  player: NhlPlayer;\r\n  team: NhlTeam;\r\n  points?: number;\r\n  goals?: number;\r\n  assists?: number;\r\n}\r\n\r\nexport interface NhlGoalieDto {\r\n  player: NhlPlayer;\r\n  team: NhlTeam;\r\n  gaa?: number;\r\n  savePctg?: number;\r\n  shutouts?: number;\r\n}\r\n\r\nexport interface NhlPlayer {\r\n  id: number;\r\n  currentTeamId: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  fullName: string;\r\n  positionCode: string;\r\n  sweaterNumber: number;\r\n}\r\n\r\nexport interface NhlTeam {\r\n  id: number;\r\n  franchiseId: number;\r\n  fullName: string;\r\n  leagueId: number;\r\n  logos: NhlLogo[];\r\n  rawTricode: 'string';\r\n  triCode: string;\r\n}\r\n\r\nexport interface NhlLogo {\r\n  id: number;\r\n  background: string;\r\n  endSeason: number;\r\n  secureUrl: string;\r\n  startSeason: number;\r\n  teamId: number;\r\n  url: string;\r\n}\r\n","export * from './player.dto';\r\n","export interface PlayerDto {\r\n  id: number;\r\n  firstname: string;\r\n  lastname: string;\r\n  nhl_id: string;\r\n  isactive: boolean;\r\n  isgoalie: boolean;\r\n  isdefense: boolean;\r\n  isforward: boolean;\r\n  is_protected: boolean;\r\n  primary_position: string;\r\n  alt_position: string;\r\n}\r\n\r\nexport interface PlayerCreateDto {\r\n  firstname: string;\r\n  lastname: string;\r\n  nhl_id: string;\r\n  isactive: boolean;\r\n  isgoalie: boolean;\r\n  isdefense: boolean;\r\n  isforward: boolean;\r\n  is_protected: boolean;\r\n  primary_position: string;\r\n  alt_position: string;\r\n}\r\n","import { PlayerRatingDto } from './player-rating.dto';\r\n\r\nexport interface GoalieRatingDto extends PlayerRatingDto {\r\n  id: number;\r\n  player_id: string;\r\n  skating: string;\r\n  speed: string;\r\n  passing: string;\r\n  points?: string;\r\n  wins?: string;\r\n  goals_against_avg?: string;\r\n  save_pct?: string;\r\n  games_played?: string;\r\n  goals?: string;\r\n  assists?: string;\r\n  shots?: string;\r\n  shooting_pct?: string;\r\n  playerInfo?: {\r\n    id: number;\r\n    firstname: string;\r\n    lastname: string;\r\n  };\r\n}\r\n","export * from './goalie-rating.dto';\r\nexport * from './player-rating.dto';\r\nexport * from './salaries-and-ratings.dto';\r\nexport * from './salary.dto';\r\n","export interface PlayerRatingDto {\r\n  id: number;\r\n  player_id: string;\r\n  game_fatigue: string;\r\n  shift_fatigue: string;\r\n  c_rate: string;\r\n  l_rate: string;\r\n  r_rate: string;\r\n  ld_rate: string;\r\n  rd_rate: string;\r\n  shooting: string;\r\n  skating: string;\r\n  speed: string;\r\n  passing: string;\r\n  forecheck: string;\r\n  physical: string;\r\n  intimidation: string;\r\n  clear_crease: string;\r\n  rock: string;\r\n  pk: string;\r\n  shot_block: string;\r\n  face_off: string;\r\n  assist_rating: string;\r\n  points?: string;\r\n  wins?: string;\r\n  goals_against_avg?: string;\r\n  save_pct?: string;\r\n  games_played?: string;\r\n  goals?: string;\r\n  assists?: string;\r\n  shots?: string;\r\n  shooting_pct?: string;\r\n  playerInfo?: {\r\n    id: number;\r\n    firstname: string;\r\n    lastname: string;\r\n  };\r\n}\r\n","import { PlayerDto } from '../player';\r\nimport { TeamDto } from '../teams';\r\nimport { GoalieRatingDto } from './goalie-rating.dto';\r\nimport { PlayerRatingDto } from './player-rating.dto';\r\n\r\nexport interface SalariesAndRatingsDto {\r\n  id: number;\r\n  team_name: string;\r\n  player_id: PlayerDto;\r\n  salaries: SalaryDto;\r\n  ratings: PlayerRatingDto | GoalieRatingDto;\r\n  teamInfo: TeamDto;\r\n  nhlStats: any;\r\n}\r\n\r\nexport interface SalaryDto {\r\n  id: number;\r\n  player_id: number;\r\n  season_2022: string | null;\r\n  season_2023: string | null;\r\n  season_2024: string | null;\r\n  season_2025: string | null;\r\n}\r\n","export interface SalaryAllDto {\r\n  id: number;\r\n  player_id: string;\r\n  season_2020: string;\r\n  season_2021: string;\r\n  season_2022: string;\r\n  season_2023: string;\r\n  season_2024: string;\r\n  season_2025: string;\r\n  season_2026: string;\r\n  season_2027: string;\r\n  season_2028: string;\r\n  season_2029: string;\r\n  season_2030: string;\r\n  season_2031: string;\r\n  season_2032: string;\r\n  season_2033: string;\r\n  season_2034: string;\r\n  season_2035: string;\r\n  season_2036: string;\r\n  season_2037: string;\r\n  season_2038: string;\r\n  season_2039: string;\r\n  season_2040: string;\r\n  playerInfo?: {\r\n    id: number;\r\n    firstname: string;\r\n    lastname: string;\r\n  };\r\n}\r\n","import { TeamDto } from '../teams';\r\n\r\nexport interface GamesDto {\r\n  id: number;\r\n  gameDay: number;\r\n  visTeamScore: number;\r\n  visTeamInfo: TeamDto;\r\n  visTeamLastFive: string[];\r\n  visTeamRecord: TeamRecordDto;\r\n  visTeamVersus: TeamVersusRecordDto;\r\n  homeTeamScore: 3;\r\n  homeTeamInfo: TeamDto;\r\n  homeTeamLastFive: string[];\r\n  homeTeamRecord: TeamRecordDto;\r\n  homeTeamVersus: TeamVersusRecordDto;\r\n}\r\n\r\nexport interface TeamVersusRecordDto {\r\n  wins: number;\r\n  loss: number;\r\n  ties: number;\r\n}\r\n\r\nexport interface TeamRecordDto {\r\n  id: number;\r\n  wins: string;\r\n  loss: string;\r\n  ties: string;\r\n}\r\n","export * from './schedule-all.dto';\r\nexport * from './games.dto';\r\n","import { TeamDto } from '../teams';\r\n\r\nexport interface ScheduleAllDto {\r\n  id: number;\r\n  game_day: number;\r\n  vis_team_id: number;\r\n  vis_team_game_number: number;\r\n  vis_team_score: number;\r\n  visTeamInfo: TeamDto;\r\n  home_team_id: number;\r\n  home_team_game_number: number;\r\n  home_team_score: number;\r\n  homeTeamInfo: TeamDto;\r\n  playing_year: string;\r\n}\r\n","export * from './stat-team.dto';\r\nexport * from './stat-player-leader.dto';\r\nexport * from './stat-player-leaders.dto';\r\nexport * from './stat-goalie-leader.dto';\r\nexport * from './stat-goalie-leaders.dto';\r\nexport * from './stat-team-all.dto';\r\nexport * from './stat-player-all.dto';\r\nexport * from './stat-goalie-all.dto';\r\nexport * from './stat-team-playoffs.dto';\r\nexport * from './stat-teams-history';\r\nexport * from './stat-players-history.dto';\r\nexport * from './stat-goalies-history.dto';\r\nexport * from './stat-user-team-record.dto';\r\nexport * from './stat-user-teams-history.dto';\r\nexport * from './stat-user-players-history.dto';\r\nexport * from './stat-user-goalies-history.dto';","export interface StatGoalieAllDto {\r\n  player_id: {\r\n    id: number;\r\n    firstname: string;\r\n    lastname: string;\r\n    nhl_id: string;\r\n    isdefense: boolean;\r\n    isforward: boolean;\r\n  };\r\n  teamInfo: {\r\n    id: number;\r\n    teamlogo: string;\r\n    city: string;\r\n    nickname: string;\r\n    shortname?: string;\r\n  };\r\n  id: number;\r\n  games_played: number;\r\n  minutes_played: number;\r\n  goals_against_avg: number | string;\r\n  wins: number;\r\n  loss: number;\r\n  ties: number;\r\n  en_goals: number;\r\n  shutouts: number;\r\n  goals_against: number;\r\n  saves: number;\r\n  shots_for: number;\r\n  save_pct: number | string;\r\n  goals: number;\r\n  assists: number;\r\n  points: number;\r\n  penalty_minutes: number;\r\n  pass_pct: number | string;\r\n  team_name: string;\r\n}\r\n","export interface StatGoalieLeaderDto {\r\n  shots_for?: string;\r\n  games_played?: string;\r\n  goals_against_avg?: string;\r\n  save_pct?: string;\r\n  shutouts?: string;\r\n  wins?: string;\r\n  player_id: {\r\n    id: number;\r\n    isgoalie: boolean;\r\n    firstname: string;\r\n    lastname: string;\r\n    nhl_id: string;\r\n  };\r\n  teamInfo: {\r\n    id: number;\r\n    teamlogo: string;\r\n    city: string;\r\n    nickname: string;\r\n  };\r\n}\r\n","import { StatGoalieLeaderDto } from './stat-goalie-leader.dto';\r\n\r\nexport interface StatGoalieLeadersDto {\r\n  shotsFaced: StatGoalieLeaderDto[];\r\n  gaa: StatGoalieLeaderDto[];\r\n  savePct: StatGoalieLeaderDto[];\r\n  shutouts: StatGoalieLeaderDto[];\r\n  wins: StatGoalieLeaderDto[];\r\n}\r\n","import { PlayerDto } from '../player';\r\nimport { TeamDto } from '../teams';\r\n\r\nexport interface StatGoaliesHistoryDto {\r\n  playing_year: string;\r\n  season_type: string;\r\n  teamInfo: TeamDto;\r\n  player_id: PlayerDto;\r\n  games_played: number;\r\n  minutes_played: number;\r\n  goals_against_avg: number;\r\n  wins: number;\r\n  loss: number;\r\n  ties: number;\r\n  shutouts: number;\r\n  goals_against: number;\r\n  saves: number;\r\n  shots_for: number;\r\n  save_pct: number;\r\n  goals: number;\r\n  assists: number;\r\n  points: number;\r\n  penalty_minutes: number;\r\n}\r\n","export interface StatPlayerAllDto {\r\n  player_id: {\r\n    id: number;\r\n    firstname: string;\r\n    lastname: string;\r\n    nhl_id: string;\r\n    isdefense: boolean;\r\n    isforward: boolean;\r\n  };\r\n  teamInfo: {\r\n    id: number;\r\n    teamlogo: string;\r\n    city: string;\r\n    nickname: string;\r\n    shortname?: string;\r\n  };\r\n  position: string;\r\n  games_played: number;\r\n  goals: number;\r\n  assists: number;\r\n  points: number;\r\n  plus_minus: number;\r\n  penalty_minutes: number;\r\n  pp_goals: number;\r\n  sh_goals: number;\r\n  gw_goals: number;\r\n  gt_goals: number;\r\n  shots: number;\r\n  shooting_pct: string;\r\n  minutes_played: number;\r\n  minutes_per_game: string;\r\n  fo_pct: string;\r\n  pass_pct: string;\r\n  corner_pct: string;\r\n  hits: number;\r\n  blocked_shots: number;\r\n}\r\n\r\nexport interface CreateStatPlayerAllDto {\r\n  player_id: {\r\n    id: number;\r\n    firstname: string;\r\n    lastname: string;\r\n    nhl_id: string;\r\n    isdefense: boolean;\r\n    isforward: boolean;\r\n  };\r\n  teamInfo: {\r\n    id: number;\r\n    teamlogo: string;\r\n    city: string;\r\n    nickname: string;\r\n  };\r\n  position: string;\r\n  games_played: number;\r\n  goals: number;\r\n  assists: number;\r\n  points: number;\r\n  plus_minus: number;\r\n  penalty_minutes: number;\r\n  pp_goals: number;\r\n  sh_goals: number;\r\n  gw_goals: number;\r\n  gt_goals: number;\r\n  shots: number;\r\n  shooting_pct: string;\r\n  minutes_played: number;\r\n  minutes_per_game: string;\r\n  fo_pct: string;\r\n  pass_pct: string;\r\n  corner_pct: string;\r\n  hits: number;\r\n  blocked_shots: number;\r\n}\r\n","export interface StatPlayerLeaderDto {\r\n  assists?: string;\r\n  plus_minus?: string;\r\n  blocked_shots?: string;\r\n  current_points_streak?: string;\r\n  longest_points_streak?: string;\r\n  goals?: string;\r\n  points?: string;\r\n  hits?: string;\r\n  minutes_played?: string;\r\n  penalty_minutes?: string;\r\n  games_played?: string;\r\n  pp_goals?: string;\r\n  sh_goals?: string;\r\n  shots?: string;\r\n  player_id: {\r\n    id: number;\r\n    isgoalie: boolean;\r\n    firstname: string;\r\n    lastname: string;\r\n    nhl_id: string;\r\n  };\r\n  teamInfo: {\r\n    id: number;\r\n    teamlogo: string;\r\n    city: string;\r\n    nickname: string;\r\n  };\r\n}\r\n","import { StatPlayerLeaderDto } from './stat-player-leader.dto';\r\n\r\nexport interface StatPlayerLeadersDto {\r\n  assists: StatPlayerLeaderDto[];\r\n  bestPlusMinus: StatPlayerLeaderDto[];\r\n  blockedShots: StatPlayerLeaderDto[];\r\n  currStreak: StatPlayerLeaderDto[];\r\n  defense: StatPlayerLeaderDto[];\r\n  goals: StatPlayerLeaderDto[];\r\n  hits: StatPlayerLeaderDto[];\r\n  longStreak: StatPlayerLeaderDto[];\r\n  minutes: StatPlayerLeaderDto[];\r\n  penalties: StatPlayerLeaderDto[];\r\n  points: StatPlayerLeaderDto[];\r\n  ppGoals: StatPlayerLeaderDto[];\r\n  rookies: StatPlayerLeaderDto[];\r\n  shGoals: StatPlayerLeaderDto[];\r\n  shots: StatPlayerLeaderDto[];\r\n}\r\n","import { PlayerDto } from '../player';\r\nimport { TeamDto } from '../teams';\r\n\r\nexport interface StatPlayersHistoryDto {\r\n  playing_year: string;\r\n  season_type: string;\r\n  teamInfo: TeamDto;\r\n  player_id: PlayerDto;\r\n  position: string;\r\n  games_played: number;\r\n  goals: number;\r\n  assists: number;\r\n  points: number;\r\n  pointsPerSixty: number;\r\n  plus_minus: number;\r\n  penalty_minutes: number;\r\n  pp_goals: number;\r\n  sh_goals: number;\r\n  gw_goals: number;\r\n  shots: number;\r\n  shooting_pct: number;\r\n  minutes_per_game: number;\r\n  fo_pct: number;\r\n  corner_pct: number;\r\n  pass_pct: number;\r\n  hit_per_game: number;\r\n  blocked_shots: number;\r\n}\r\n","import { ConferencesEnum, TeamsEnum } from '../../enums';\r\nimport { DivisionDto } from '../league/division.dto';\r\n\r\nexport interface StatTeamAllDto {\r\n  id: number;\r\n  team_id: {\r\n    id: TeamsEnum;\r\n    shortname: string;\r\n    city: string;\r\n    teamlogo: string;\r\n    nickname: string;\r\n    divisions_id: DivisionDto;\r\n  };\r\n  conference: {\r\n    id: ConferencesEnum;\r\n    conferencename: string;\r\n  };\r\n  div_loss: string;\r\n  div_tie: string;\r\n  div_win: string;\r\n  games_played: string;\r\n  goals_against: string;\r\n  goals_for: string;\r\n  home_loss: string;\r\n  home_ties: string;\r\n  home_wins: string;\r\n  loss: string;\r\n  penalty_minutes: string;\r\n  pk_attempts: string;\r\n  pk_goals: string;\r\n  pk_min: string;\r\n  playing_year: string;\r\n  points: string;\r\n  pp_attempts: string;\r\n  pp_goals: string;\r\n  road_loss: string;\r\n  road_ties: string;\r\n  road_wins: string;\r\n  season_type: 'Regular' | 'Playoffs';\r\n  ties: string;\r\n  trail_after_two_loss: string;\r\n  trail_after_two_ties: string;\r\n  trail_after_two_wins: string;\r\n  wins: string;\r\n}\r\n","import { TeamsEnum, ConferencesEnum } from '../../enums';\r\nimport { DivisionDto } from '../league/division.dto';\r\n\r\nexport interface StatTeamPlayoffsDto {\r\n  id: number;\r\n  team_id: {\r\n    id: TeamsEnum;\r\n    shortname: string;\r\n    city: string;\r\n    teamlogo: string;\r\n    nickname: string;\r\n    divisions_id: DivisionDto;\r\n    teamcolor: string;\r\n  };\r\n  conference: {\r\n    id: ConferencesEnum;\r\n    conferencename: string;\r\n  };\r\n  goals_against: string;\r\n  goals_for: string;\r\n  playing_year: string;\r\n  points: string;\r\n  season_type: 'Regular' | 'Playoffs';\r\n  wins: string;\r\n  conferenceStanding: number;\r\n}\r\n","import { TeamsEnum } from '../../enums';\r\n\r\nexport interface statTeamDto {\r\n  games_played: string;\r\n  wins: string;\r\n  loss: string;\r\n  ties: string;\r\n  points: string;\r\n  goals_for: string;\r\n  goals_against: string;\r\n  pp_attempts: string;\r\n  pp_goals: string;\r\n  pk_attempts: string;\r\n  pk_goals: string;\r\n  penalty_minutes: string;\r\n  long_win_streak: string;\r\n  team_id: {\r\n    id: TeamsEnum;\r\n    shortname: string;\r\n    city: string;\r\n    teamlogo: string;\r\n    nickname: string;\r\n  };\r\n}\r\n","import { TeamDto } from '../teams';\r\n\r\nexport interface StatTeamsHistoryDto {\r\n  games_played: number;\r\n  wins: number;\r\n  loss: number;\r\n  ties: number;\r\n  points: number;\r\n  goals_for: number;\r\n  goals_against: number;\r\n  goalsForPerGame: number;\r\n  goalsAgainstPerGame: number;\r\n  goalDiff: number;\r\n  winPct: number;\r\n  ppPct: number;\r\n  pkPct: number;\r\n  pimPerGame: number;\r\n  sh_goals: number;\r\n  foPct: number;\r\n  cornerPct: number;\r\n  passPct: number;\r\n  shut_outs: number;\r\n  playing_year: string;\r\n  season_type: string;\r\n  team_id: TeamDto;\r\n}\r\n","import { StatGoaliesHistoryDto } from './stat-goalies-history.dto';\r\n\r\nexport interface StatUserGoaliesHistoryDto {\r\n  id: number;\r\n  shortname: string;\r\n  city: string;\r\n  nickname: string;\r\n  isactive: boolean;\r\n  users_id: number;\r\n  teamlogo: string;\r\n  teamaltlogo: string;\r\n  teamcolor: string;\r\n  teamtextcolor: string;\r\n  divisions_id: {\r\n    id: 5;\r\n    divisionname: string;\r\n    conference_id: number;\r\n    isactive: boolean;\r\n  };\r\n  goalieStats: StatGoaliesHistoryDto[];\r\n}\r\n","import { StatPlayersHistoryDto } from './stat-players-history.dto';\r\n\r\nexport interface StatUserPlayersHistoryDto {\r\n  id: number;\r\n  shortname: string;\r\n  city: string;\r\n  nickname: string;\r\n  isactive: boolean;\r\n  users_id: number;\r\n  teamlogo: string;\r\n  teamaltlogo: string;\r\n  teamcolor: string;\r\n  teamtextcolor: string;\r\n  divisions_id: {\r\n    id: 5;\r\n    divisionname: string;\r\n    conference_id: number;\r\n    isactive: boolean;\r\n  };\r\n  playerStats: StatPlayersHistoryDto[];\r\n}\r\n","import { TeamDto } from '../teams';\r\n\r\nexport interface StatUserTeamRecordDto {\r\n  id: number;\r\n  team_id: TeamDto;\r\n  wins: number;\r\n  loss: number;\r\n  ties: number;\r\n  points: number;\r\n  home_wins: number;\r\n  home_loss: number;\r\n  home_ties: number;\r\n  road_wins: number;\r\n  road_loss: number;\r\n  road_ties: number;\r\n  div_win: number;\r\n  div_loss: number;\r\n  div_tie: number;\r\n}\r\n","import { StatTeamsHistoryDto } from './stat-teams-history';\r\n\r\nexport interface StatUserTeamHistoryDto {\r\n  id: number;\r\n  shortname: string;\r\n  city: string;\r\n  nickname: string;\r\n  isactive: boolean;\r\n  users_id: number;\r\n  teamlogo: string;\r\n  teamaltlogo: string;\r\n  teamcolor: string;\r\n  teamtextcolor: string;\r\n  divisions_id: {\r\n    id: 5;\r\n    divisionname: string;\r\n    conference_id: number;\r\n    isactive: boolean;\r\n  };\r\n  teamStats: StatTeamsHistoryDto[];\r\n}\r\n","export * from './team.dto';\r\n","import { TeamsEnum } from '../../enums';\r\nimport { DivisionDto } from '../league/division.dto';\r\n\r\nexport interface TeamDto {\r\n  id: TeamsEnum;\r\n  shortname: string;\r\n  city: string;\r\n  nickname: string;\r\n  isactive: boolean;\r\n  users_id: number;\r\n  teamlogo: string;\r\n  teamaltlogo: string;\r\n  teamcolor: string;\r\n  teamtextcolor: string;\r\n  divisions_id: DivisionDto;\r\n}\r\n\r\nexport interface TeamCreateDto {\r\n  shortname: string;\r\n  city: string;\r\n  nickname: string;\r\n  isactive: boolean;\r\n  users_id: number;\r\n  teamlogo: string;\r\n  teamaltlogo: string;\r\n  teamcolor: string;\r\n  teamtextcolor: string;\r\n  divisions_id: DivisionDto;\r\n}\r\n","import { Teams_V2 } from '@api/entities';\r\n\r\nexport interface GetTeamTransactionDto {\r\n  players: PlayerTransactionDto[];\r\n  goalies: PlayerTransactionDto[];\r\n  draftPicks: DraftPickTransactionDto[];\r\n}\r\n\r\nexport interface PlayerTransactionDto {\r\n  id: number;\r\n  player_id: {\r\n    firstname: string;\r\n    lastname: string;\r\n    id: number;\r\n  };\r\n  teamInfo: {\r\n    id: number;\r\n    shortname: string;\r\n  };\r\n}\r\n\r\nexport interface DraftPickTransactionDto {\r\n  id: number;\r\n  team_id: Teams_V2;\r\n  round_one: number;\r\n  round_two: number;\r\n  round_three: number;\r\n  round_four: number;\r\n  round_five: number;\r\n  draft_year: string;\r\n}\r\n","export interface GetTransactionDto {\r\n  id: number;\r\n  transactionDate: Date;\r\n  teamOneInfo: TeamInfoTransactionDto;\r\n  teamOnePlayers: PlayerInfoTransactionDto[];\r\n  teamOnePicks: string[];\r\n  teamTwoInfo: TeamInfoTransactionDto;\r\n  teamTwoPlayers: PlayerInfoTransactionDto[];\r\n  teamTwoPicks: string[];\r\n}\r\n\r\nexport interface TeamInfoTransactionDto {\r\n  id: number;\r\n  city: string;\r\n  teamlogo: string;\r\n  nickname: string;\r\n  teamcolor: string;\r\n  teamtextcolor: string;\r\n}\r\n\r\nexport interface PlayerInfoTransactionDto {\r\n  player: {\r\n    id: number;\r\n    firstname: string;\r\n    lastname: string;\r\n    nhl_id?: string;\r\n  };\r\n}\r\n","export * from './get-transaction.dto';\r\nexport * from './get-team-transaction.dto';\r\n","export * from './user.dto';\r\nexport * from './user.create.dto';\r\n","export class UserCreateDto {\r\n  firstname!: string;\r\n  lastname!: string;\r\n  email!: string;\r\n  isadmin!: boolean;\r\n  isactive!: boolean;\r\n}\r\n","export class UserDto {\r\n  id!: number;\r\n  email!: string;\r\n  firstname!: string;\r\n  lastname!: string;\r\n  isactive!: boolean;\r\n  isadmin!: boolean;\r\n  authdata?: string;\r\n}\r\n","export * from './waivers.dto';","import { TeamDto } from '../teams';\r\n\r\nexport interface WaiversDto {\r\n  id: number;\r\n  team_id: number;\r\n  priority_number: number;\r\n  teamInfo?: TeamDto;\r\n}\r\n","export enum AwardTypeEnum {\r\n  GM = 2,\r\n  CHAMPION = 3,\r\n  SEASON = 4,\r\n  ROOKIE = 5,\r\n  SCORER = 6,\r\n  GOALIE = 7,\r\n  DEFENSE = 8,\r\n}\r\n","export * from './awardType.enum';\r\n","export * from './primeButtonClass.enum';\r\n","export enum PrimeButtonClass {\r\n  PRIMARY = '',\r\n  SECONDARY = 'p-button-secondary',\r\n  SUCCESS = 'p-button-success',\r\n  INFO = 'p-button-info',\r\n  WARNING = 'p-button-warning',\r\n  HELP = 'p-button-help',\r\n  DANGER = 'p-button-danger',\r\n}\r\n","export * from './button';\r\nexport * from './logo';\r\nexport * from './teams';\r\nexport * from './award';\r\nexport * from './league';\r\n","export enum ConferencesEnum {\r\n  EASTERN = 2,\r\n  WESTERN = 3,\r\n}\r\n","export enum DivisionsEnum {\r\n  NORTH_WEST = 2,\r\n  NORTH_EAST = 3,\r\n  SOUTH_WEST = 4,\r\n  SOUTH_EAST = 5,\r\n}\r\n","export * from './conferences.enum';\r\nexport * from './divisions.enum';","export enum ChaLogoEnum {\r\n  ASSASSINS = 'Assassins.png',\r\n  BRAHMAS = 'Brahams.png',\r\n  FIGHTING_COCKS = 'Cocks.png',\r\n  CYCLONES = 'Cyclones.png',\r\n  CHY_DESPERADO = 'Desperado.png',\r\n  DRAGONS = 'Dragons.png',\r\n  FLASHERS = 'Flashers.png',\r\n  FREE_AGENT = 'free_agent.png',\r\n  GLORY = 'Glory.png',\r\n  GOATS = 'Goats.png',\r\n  GREEN_JACKETS = 'GreenJackets.png',\r\n  HOUND_DOGS = 'HoundDogs.png',\r\n  STELLAR_JAYS = 'jays-large.png',\r\n  KILLER_BEES = 'KillerBees.png',\r\n  MOUNTAINEERS = 'Mountaineers.png',\r\n  NORTH_STARS = 'NorthStars.png',\r\n  OIL_BARONS = 'OilBarons.png',\r\n  PROWLERS = 'Prowlers.png',\r\n  SAC_STORM = 'sac_storm.png',\r\n  VIKINGS = 'vikings.png',\r\n  WOLFPACK = 'Wolfpack.png',\r\n\r\n  ACES = 'aces.png',\r\n  BADGERS = 'badgers.png',\r\n  BANDITS = 'bandits.png',\r\n  BARONS = 'barons.png',\r\n  BEAVERS = 'beavers.png',\r\n  CHA_STORM = 'chastorm.png',\r\n  CHUPACABRAS = 'chupacabras.png',\r\n  COMETS = 'comets.png',\r\n  CONQUERERS = 'conquerers.png',\r\n  CRIMSONTIDE = 'crimsontide.png',\r\n  CRUSH = 'crush.png',\r\n  GRAVEDIGGERS = 'gravediggers.png',\r\n  HELLCATS = 'hellcats.png',\r\n  MIS_INDIANS = 'indians.png',\r\n  SAL_INDIANS = 'indians.png',\r\n  JOKERS = 'jokers.png',\r\n  LAS_DESPERADO = 'lasdesperado.png',\r\n  LIONHEARTS = 'lionheats.png',\r\n  LOGGERHEADS = 'loggerheads.png',\r\n  MUDBUGS = 'mudbugs.png',\r\n  OCEANUS = 'oceanus.png',\r\n  OUTLAWS = 'outlaws.png',\r\n  PREDATORS = 'predators.png',\r\n  RAYS = 'rays.png',\r\n  REDNECKS = 'rednecks.png',\r\n  ROYALS = 'royals.png',\r\n  SCHOONERS = 'schooners.png',\r\n  SEA_STORM = 'Storm.png',\r\n  SURGE = 'surge.png',\r\n  THUNDERCATS = 'thundercats.png',\r\n  VIPERS = 'Vipers.png',\r\n  VOODOO = 'voodoo.png',\r\n  WHISKEYJACKS = 'whiskeyjacks.png',\r\n  RUSTLERS = 'rustlers.png',\r\n\r\n  LEAGUE = 'cha_logo.jpg',\r\n}\r\n","export * from './cha-logo.enum';\r\n","export * from './team.enum';\r\n","export enum TeamsEnum {\r\n  FLASHERS = 2,\r\n  GREEN_JACKETS = 3,\r\n  CHY_DESPERADO = 4,\r\n  CYCLONES = 5,\r\n  GLORY = 6,\r\n  GOATS = 7,\r\n  MOUNTAINEERS = 8,\r\n  BRAHMAS = 9,\r\n  HOUND_DOGS = 10,\r\n  ICE_DRAGONS = 11,\r\n  NORTH_STARS = 12,\r\n  ASSASSINS = 13,\r\n  OIL_BARONS = 14,\r\n  PROWLERS = 15,\r\n  FIGHTING_COCKS = 16,\r\n  SEA_STORM = 17,\r\n  STINGRAYS = 18,\r\n  KILLER_BEES = 19,\r\n  VIPERS = 20,\r\n  WOLFPACK = 21,\r\n  MUDBUGS = 22,\r\n  CHA_STORM = 23,\r\n  SURGE = 24,\r\n  LAS_DESPERADO = 25,\r\n  OUTLAWS = 26,\r\n  OCEANUS = 27,\r\n  ACES = 28,\r\n  HONEY_BADGERS = 29,\r\n  BANDITS = 30,\r\n  BARONS = 31,\r\n  CHUPACABRAS = 32,\r\n  CONQUERERS = 33,\r\n  CRUSH = 34,\r\n  HELLCATS = 35,\r\n  MISS_INDIANS = 36,\r\n  SAL_INDIANS = 37,\r\n  JOKERS = 38,\r\n  LIONHEARTS = 39,\r\n  LOGGERHEADS = 40,\r\n  PREDATORS = 41,\r\n  REDNECKS = 42,\r\n  ROYALS = 43,\r\n  RUSTLERS = 44,\r\n  SCHOONERS = 45,\r\n  THUNDERCATS = 46,\r\n  VOODOO = 47,\r\n  WHISKEYJACKS = 48,\r\n  CRIMSONTIDE = 49,\r\n  BEAVERS = 50,\r\n  COMETS = 51,\r\n  GRAVE_DIGGERS = 52,\r\n  STELLAR_JAYS = 53,\r\n  FREE_AGENT = 54,\r\n  VIKINGS = 60,\r\n  SAC_STORM = 61,\r\n}\r\n","export * from './playoffs';\r\nexport * from './salaries';","export * from './playoff-standings.model';\r\n","import { StatTeamPlayoffsDto } from '../../dtos';\r\n\r\nexport interface PlayoffStandingsModel {\r\n  eastTeams: StatTeamPlayoffsDto[];\r\n  westTeams: StatTeamPlayoffsDto[];\r\n}\r\n","export * from './player-salary.model';","export interface PlayerSalaryModel {\r\n  Name: string;\r\n  2022: string | null;\r\n  2023: string | null;\r\n  2024: string | null;\r\n  2025: string | null;\r\n}\r\n","module.exports = require(\"@nestjs/axios\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"rxjs\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { NestExpressApplication } from '@nestjs/platform-express';\n\nimport { join } from 'path';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create<NestExpressApplication>(AppModule);\n  const globalPrefix = 'api';\n  const port = process.env.PORT || 3333;\n\n  console.log(process.env.DATABASE_URL);\n\n  app.setGlobalPrefix(globalPrefix);\n  app.useStaticAssets(join(__dirname, '..', 'public'));\n  app.setBaseViewsDir(join(__dirname, 'assets/views'));\n  app.setViewEngine('hbs');\n  app.enableCors();\n\n  app.use((req, res, next) => {\n    next();\n  });\n\n  await app.listen(port);\n  Logger.log(\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}