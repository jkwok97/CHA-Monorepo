{"version":3,"file":"main.js","mappings":"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ACA,uD,gcCFA,wDACA,uD,8PCDA,wDACA,wDACA,uDACA,wDACA,wDACA,wDACA,wDACA,uDACA,uD,s/BCRA,+C,+UCAA,+C,6JCAA,wDACA,uD,+HCDA,4BAAaV,e,yHCAb,sBAAac,S,+ICAb,+C,gOCAA,SAAY5d,eACV,uCACA,mDACA,+CACA,+CACA,+CACA,+CACA,gDACD,CARD,CAAY,QAAAA,gBAAA,QAAAA,cAAa,I,+ICAzB,+C,6ICAA,+C,kICAA,SAAY6d,kBACV,4BACA,gDACA,4CACA,sCACA,4CACA,sCACA,yCACD,CARD,CAAY,QAAAA,mBAAA,QAAAA,iBAAgB,I,6JCA5B,sDACA,wDACA,wDACA,wDACA,qD,iICJA,SAAYC,iBACV,qDACA,oDACD,CAHD,CAAY,QAAAA,kBAAA,QAAAA,gBAAe,I,+HCA3B,SAAYC,eACV,uDACA,uDACA,uDACA,sDACD,CALD,CAAY,QAAAA,gBAAA,QAAAA,cAAa,I,2JCAzB,wDACA,uD,6HCDA,SAAYC,aACV,sCACA,kCACA,uCACA,oCACA,0CACA,kCACA,oCACA,wCACA,8BACA,8BACA,6CACA,uCACA,0CACA,yCACA,4CACA,yCACA,uCACA,oCACA,sCACA,kCACA,oCAEA,4BACA,kCACA,kCACA,gCACA,kCACA,qCACA,0CACA,gCACA,wCACA,0CACA,8BACA,4CACA,oCACA,sCACA,sCACA,gCACA,6CACA,uCACA,0CACA,kCACA,kCACA,kCACA,sCACA,4BACA,oCACA,gCACA,sCACA,kCACA,8BACA,0CACA,gCACA,gCACA,4CACA,oCAEA,iCACD,CA3DD,CAAY,QAAAA,cAAA,QAAAA,YAAW,I,+ICAvB,+C,+ICAA,+C,2HCAA,SAAYC,WACV,2CACA,qDACA,qDACA,2CACA,qCACA,qCACA,mDACA,yCACA,gDACA,kDACA,kDACA,8CACA,gDACA,4CACA,wDACA,8CACA,8CACA,kDACA,wCACA,4CACA,0CACA,8CACA,sCACA,sDACA,0CACA,0CACA,oCACA,sDACA,0CACA,wCACA,kDACA,gDACA,sCACA,4CACA,oDACA,kDACA,wCACA,gDACA,kDACA,8CACA,4CACA,wCACA,4CACA,8CACA,kDACA,wCACA,oDACA,kDACA,0CACA,wCACA,sDACA,oDACA,gDACA,0CACA,6CACD,CAxDD,CAAY,QAAAA,YAAA,QAAAA,UAAS,I,+ICArB,8C,8ICAA,+C,iHCAAC,OAAOza,QAAU0a,QAAQ,gB,gBCAzBD,OAAOza,QAAU0a,QAAQ,iB,gBCAzBD,OAAOza,QAAU0a,QAAQ,iB,eCAzBD,OAAOza,QAAU0a,QAAQ,e,gBCAzBD,OAAOza,QAAU0a,QAAQ,kB,gBCAzBD,OAAOza,QAAU0a,QAAQ,O,eCAzBD,OAAOza,QAAU0a,QAAQ,Q,gBCAzBD,OAAOza,QAAU0a,QAAQ,U,gBCAzBD,OAAOza,QAAU0a,QAAQ,K,gBCAzBD,OAAOza,QAAU0a,QAAQ,O,GCCrBC,yBAA2B,CAAC,EAGhC,SAASC,oBAAoBC,UAE5B,IAAIC,aAAeH,yBAAyBE,UAC5C,QAAqBE,IAAjBD,aACH,OAAOA,aAAa9a,QAGrB,IAAIya,OAASE,yBAAyBE,UAAY,CAGjD7a,QAAS,CAAC,GAOX,OAHAgb,oBAAoBH,UAAUJ,OAAQA,OAAOza,QAAS4a,qBAG/CH,OAAOza,OACf,C,wHCjBA,yCACA,gCAGA,iCAEA,wCAEAzG,iBACE,MAAM0hB,UAAY,OAAAC,YAAYvB,OAA+B,aAAA7jB,WAEvDqlB,KAAO3kB,QAAQC,IAAI2kB,MAAQ,KAEjC/hB,QAAQC,IAAI9C,QAAQC,IAAIC,cAExBukB,IAAII,gBALiB,OAMrBJ,IAAIK,iBAAgB,SAAAC,MAAKC,UAAW,KAAM,WAC1CP,IAAIQ,iBAAgB,SAAAF,MAAKC,UAAW,iBACpCP,IAAIS,cAAc,OAClBT,IAAIU,aAEJV,IAAIvgB,KAAI,CAACC,IAAKC,IAAKC,QACjBA,MAAM,UAGFogB,IAAIW,OAAOT,MACjB,SAAAU,OAAOviB,IACL,kDAAkD6hB,WAEtD,CAEAW,E","sources":["webpack://cha-hockey/./apps/cha-server/src/app/app.controller.ts","webpack://cha-hockey/./apps/cha-server/src/app/app.module.ts","webpack://cha-hockey/./apps/cha-server/src/app/app.service.ts","webpack://cha-hockey/./libs/api/awards/src/index.ts","webpack://cha-hockey/./libs/api/awards/src/lib/api-awards.module.ts","webpack://cha-hockey/./libs/api/awards/src/lib/controllers/awards.controller.ts","webpack://cha-hockey/./libs/api/awards/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/awards/src/lib/middlewares/awards.middleware.ts","webpack://cha-hockey/./libs/api/awards/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/awards/src/lib/services/api-awards.service.ts","webpack://cha-hockey/./libs/api/awards/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/core/src/index.ts","webpack://cha-hockey/./libs/api/core/src/lib/api-core.module.ts","webpack://cha-hockey/./libs/api/draft-table/src/index.ts","webpack://cha-hockey/./libs/api/draft-table/src/lib/api-draft-table.module.ts","webpack://cha-hockey/./libs/api/draft-table/src/lib/controllers/draft-table.controller.ts","webpack://cha-hockey/./libs/api/draft-table/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/draft-table/src/lib/middlewares/draft-table.middleware.ts","webpack://cha-hockey/./libs/api/draft-table/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/draft-table/src/lib/services/api-draft-table.service.ts","webpack://cha-hockey/./libs/api/draft-table/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/entities/src/index.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/award-type.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/award.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/conference.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/current_season.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/division.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/draft-order.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/draft.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/goalie-rating.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/goalie-stats.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/index.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/player-rating.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/player-stats.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/player.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/salary.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/schedule.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/team-stats.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/team.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/transactions.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/user.entity.ts","webpack://cha-hockey/./libs/api/entities/src/lib/entities/waivers.entity.ts","webpack://cha-hockey/./libs/api/entry-draft/src/index.ts","webpack://cha-hockey/./libs/api/entry-draft/src/lib/api-entry-draft.module.ts","webpack://cha-hockey/./libs/api/entry-draft/src/lib/controllers/entry-draft.controller.ts","webpack://cha-hockey/./libs/api/entry-draft/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/entry-draft/src/lib/middlewares/entry-draft.middleware.ts","webpack://cha-hockey/./libs/api/entry-draft/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/entry-draft/src/lib/services/api-entry-draft.service.ts","webpack://cha-hockey/./libs/api/entry-draft/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/goalie-stats/src/index.ts","webpack://cha-hockey/./libs/api/goalie-stats/src/lib/api-goalie-stats.module.ts","webpack://cha-hockey/./libs/api/goalie-stats/src/lib/controllers/goalie-stats.controller.ts","webpack://cha-hockey/./libs/api/goalie-stats/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/goalie-stats/src/lib/middlewares/goalie-stats.middleware.ts","webpack://cha-hockey/./libs/api/goalie-stats/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/goalie-stats/src/lib/services/api-goalie-stats-leaders.service.ts","webpack://cha-hockey/./libs/api/goalie-stats/src/lib/services/api-goalie-stats.service.ts","webpack://cha-hockey/./libs/api/goalie-stats/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/league/src/index.ts","webpack://cha-hockey/./libs/api/league/src/lib/api-league.module.ts","webpack://cha-hockey/./libs/api/league/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/league/src/lib/controllers/league.controller.ts","webpack://cha-hockey/./libs/api/league/src/lib/middlewares/league.middleware.ts","webpack://cha-hockey/./libs/api/league/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/league/src/lib/services/league.service.ts","webpack://cha-hockey/./libs/api/nhl/src/index.ts","webpack://cha-hockey/./libs/api/nhl/src/lib/api-nhl.module.ts","webpack://cha-hockey/./libs/api/nhl/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/nhl/src/lib/controllers/nhl.controller.ts","webpack://cha-hockey/./libs/api/nhl/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/nhl/src/lib/middlewares/nhl.middleware.ts","webpack://cha-hockey/./libs/api/nhl/src/lib/services/api-nhl.service.ts","webpack://cha-hockey/./libs/api/nhl/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/player-info/src/index.ts","webpack://cha-hockey/./libs/api/player-info/src/lib/api-player-info.module.ts","webpack://cha-hockey/./libs/api/player-info/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/player-info/src/lib/controllers/player-info.controller.ts","webpack://cha-hockey/./libs/api/player-ratings/src/index.ts","webpack://cha-hockey/./libs/api/player-ratings/src/lib/api-player-ratings.module.ts","webpack://cha-hockey/./libs/api/player-ratings/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/player-ratings/src/lib/controllers/player-ratings.controller.ts","webpack://cha-hockey/./libs/api/player-stats/src/index.ts","webpack://cha-hockey/./libs/api/player-stats/src/lib/api-player-stats.module.ts","webpack://cha-hockey/./libs/api/player-stats/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/player-stats/src/lib/controllers/player-stats.controller.ts","webpack://cha-hockey/./libs/api/player-stats/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/player-stats/src/lib/middlewares/player-stats.middleware.ts","webpack://cha-hockey/./libs/api/player-stats/src/lib/services/api-player-leaders-stats.service.ts","webpack://cha-hockey/./libs/api/player-stats/src/lib/services/api-player-stats.service.ts","webpack://cha-hockey/./libs/api/player-stats/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/salaries/src/index.ts","webpack://cha-hockey/./libs/api/salaries/src/lib/api-salaries.module.ts","webpack://cha-hockey/./libs/api/salaries/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/salaries/src/lib/controllers/salaries.controller.ts","webpack://cha-hockey/./libs/api/salaries/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/salaries/src/lib/middlewares/salaries.middleware.ts","webpack://cha-hockey/./libs/api/salaries/src/lib/services/api-salaries.service.ts","webpack://cha-hockey/./libs/api/salaries/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/schedule/src/index.ts","webpack://cha-hockey/./libs/api/schedule/src/lib/api-schedule.module.ts","webpack://cha-hockey/./libs/api/schedule/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/schedule/src/lib/controllers/schedule.controller.ts","webpack://cha-hockey/./libs/api/schedule/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/schedule/src/lib/middlewares/schedule.middleware.ts","webpack://cha-hockey/./libs/api/schedule/src/lib/services/api-schedule.service.ts","webpack://cha-hockey/./libs/api/schedule/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/team-stats/src/index.ts","webpack://cha-hockey/./libs/api/team-stats/src/lib/api-team-stats.module.ts","webpack://cha-hockey/./libs/api/team-stats/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/team-stats/src/lib/controllers/team-stats.controller.ts","webpack://cha-hockey/./libs/api/team-stats/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/team-stats/src/lib/middlewares/team-stats.middleware.ts","webpack://cha-hockey/./libs/api/team-stats/src/lib/services/api-all-time-team-stats.service.ts","webpack://cha-hockey/./libs/api/team-stats/src/lib/services/api-team-stats.service.ts","webpack://cha-hockey/./libs/api/team-stats/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/teams/src/index.ts","webpack://cha-hockey/./libs/api/teams/src/lib/api-teams.module.ts","webpack://cha-hockey/./libs/api/teams/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/teams/src/lib/controllers/teams.controller.ts","webpack://cha-hockey/./libs/api/teams/src/lib/middlewares/teams.middleware.ts","webpack://cha-hockey/./libs/api/teams/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/teams/src/lib/services/teams.service.ts","webpack://cha-hockey/./libs/api/transactions/src/index.ts","webpack://cha-hockey/./libs/api/transactions/src/lib/api-transactions.module.ts","webpack://cha-hockey/./libs/api/transactions/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/transactions/src/lib/controllers/transactions.controller.ts","webpack://cha-hockey/./libs/api/transactions/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/transactions/src/lib/middlewares/transactions.middleware.ts","webpack://cha-hockey/./libs/api/transactions/src/lib/services/api-transactions.service.ts","webpack://cha-hockey/./libs/api/transactions/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/users/src/index.ts","webpack://cha-hockey/./libs/api/users/src/lib/api-users.module.ts","webpack://cha-hockey/./libs/api/users/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/users/src/lib/controllers/users.controller.ts","webpack://cha-hockey/./libs/api/users/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/users/src/lib/middlewares/user.middleware.ts","webpack://cha-hockey/./libs/api/users/src/lib/services/index.ts","webpack://cha-hockey/./libs/api/users/src/lib/services/users.service.ts","webpack://cha-hockey/./libs/api/waivers/src/index.ts","webpack://cha-hockey/./libs/api/waivers/src/lib/api-waivers.module.ts","webpack://cha-hockey/./libs/api/waivers/src/lib/controllers/index.ts","webpack://cha-hockey/./libs/api/waivers/src/lib/controllers/waivers.controller.ts","webpack://cha-hockey/./libs/api/waivers/src/lib/middlewares/index.ts","webpack://cha-hockey/./libs/api/waivers/src/lib/middlewares/waivers.middleware.ts","webpack://cha-hockey/./libs/api/waivers/src/lib/services/api-waivers.service.ts","webpack://cha-hockey/./libs/api/waivers/src/lib/services/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/awards/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/drafts/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/league/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/nhl/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/player/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/salaries/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/schedule/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/stats/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/teams/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/transactions/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/user/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/user/user.create.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/user/user.dto.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/dtos/waivers/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/enums/award/awardType.enum.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/enums/award/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/enums/button/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/enums/button/primeButtonClass.enum.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/enums/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/enums/league/conferences.enum.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/enums/league/divisions.enum.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/enums/league/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/enums/logo/cha-logo.enum.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/enums/logo/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/enums/teams/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/enums/teams/team.enum.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/models/index.ts","webpack://cha-hockey/./libs/cha/shared/entities/src/lib/models/playoffs/index.ts","webpack://cha-hockey/external commonjs \"@nestjs/axios\"","webpack://cha-hockey/external commonjs \"@nestjs/common\"","webpack://cha-hockey/external commonjs \"@nestjs/config\"","webpack://cha-hockey/external commonjs \"@nestjs/core\"","webpack://cha-hockey/external commonjs \"@nestjs/typeorm\"","webpack://cha-hockey/external commonjs \"rxjs\"","webpack://cha-hockey/external commonjs \"tslib\"","webpack://cha-hockey/external commonjs \"typeorm\"","webpack://cha-hockey/external node-commonjs \"fs\"","webpack://cha-hockey/external node-commonjs \"path\"","webpack://cha-hockey/webpack/bootstrap","webpack://cha-hockey/./apps/cha-server/src/main.ts"],"sourcesContent":["import { Controller, Get, Render } from '@nestjs/common';\n\n@Controller()\nexport class AppController {\n  @Get()\n  @Render('index')\n  root() {\n    return { message: 'Hello world!' };\n  }\n}\n","import { ApiCoreModule } from '@api/core';\nimport {\n  Users_V2,\n  Teams_V2,\n  Award_Type_V2,\n  Awards_V2,\n  Draft_Order_V2,\n  Drafts_V2,\n  Conferences_V2,\n  Current_Season_V2,\n  Divisions_V2,\n  Players_V2,\n  Goalie_Ratings_V2,\n  Player_Ratings_V2,\n  Salaries_V2,\n  Schedule_V2,\n  Goalies_Stats_V2,\n  Players_Stats_V2,\n  Team_Stats_V2,\n  Transactions_V2,\n  Waivers_V2,\n} from '@api/entities';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: `.env.${process.env.NODE_ENV}`,\n    }),\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      url: process.env.DATABASE_URL,\n      // database: 'defaultdb',\n      // host: process.env.DATABASE_HOST,\n      // username: process.env.DATABASE_USER,\n      // password: process.env.DATABASE_PASSWORD,\n      // port: parseInt(process.env.DATABASE_PORT),\n      synchronize: false,\n      entities: [\n        Users_V2,\n        Teams_V2,\n        Award_Type_V2,\n        Awards_V2,\n        Draft_Order_V2,\n        Drafts_V2,\n        Conferences_V2,\n        Current_Season_V2,\n        Divisions_V2,\n        Players_V2,\n        Goalie_Ratings_V2,\n        Player_Ratings_V2,\n        Salaries_V2,\n        Schedule_V2,\n        Goalies_Stats_V2,\n        Players_Stats_V2,\n        Team_Stats_V2,\n        Transactions_V2,\n        Waivers_V2,\n      ],\n      ssl: {\n        rejectUnauthorized: false,\n      },\n    }),\n    ApiCoreModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Welcome to cha-server!' };\n  }\n\n  getViewName() {\n    return 'index.hbs';\n  }\n}\n","export * from './lib/api-awards.module';","import {\n  Awards_V2,\n  Players_Stats_V2,\n  Goalies_Stats_V2,\n  Team_Stats_V2,\n} from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AwardsController } from './controllers';\nimport { AwardsMiddleware } from './middlewares';\nimport { ApiAwardsService } from './services';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      Awards_V2,\n      Players_Stats_V2,\n      Goalies_Stats_V2,\n      Team_Stats_V2,\n    ]),\n  ],\n  controllers: [AwardsController],\n  providers: [ApiAwardsService],\n})\nexport class ApiAwardsModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(AwardsMiddleware).forRoutes('*');\n  }\n}\n","import { Awards_V2 } from '@api/entities';\nimport { Controller, Get, NotFoundException } from '@nestjs/common';\nimport { ApiAwardsService } from '../services/api-awards.service';\n\n@Controller('awards')\nexport class AwardsController {\n  constructor(private awardsService: ApiAwardsService) {}\n\n  @Get()\n  getAllAwardWinners() {\n    console.log('in awards controller');\n    return 'awards';\n  }\n\n  // @Get('/winners/:id')\n  // getAwardWinnersById() {}\n\n  @Get('/champions')\n  async getChampions(): Promise<Awards_V2[]> {\n    const champions = await this.awardsService.getChampions();\n\n    if (!champions || champions.length < 1) {\n      throw new NotFoundException('Champions Awards not found');\n    }\n    return champions;\n  }\n\n  @Get('/scorers')\n  async getScorerAwards() {\n    const scorers = await this.awardsService.getScorerAwards();\n\n    if (!scorers || scorers.length < 1) {\n      throw new NotFoundException('Scorers Awards not found');\n    }\n    return scorers;\n  }\n\n  @Get('/defense')\n  async getDefenseAwards(): Promise<Awards_V2[]> {\n    const defense = await this.awardsService.getDefenseAwards();\n\n    if (!defense || defense.length < 1) {\n      throw new NotFoundException('Defense Awards not found');\n    }\n    return defense;\n  }\n\n  @Get('/rookies')\n  async getRookieAwards(): Promise<Awards_V2[]> {\n    const rookies = await this.awardsService.getRookieAwards();\n\n    if (!rookies || rookies.length < 1) {\n      throw new NotFoundException('Rookie Awards not found');\n    }\n    return rookies;\n  }\n\n  @Get('/goalies')\n  async getGoalieAwards(): Promise<Awards_V2[]> {\n    const goalies = await this.awardsService.getGoalieAwards();\n\n    if (!goalies || goalies.length < 1) {\n      throw new NotFoundException('Goalie Awards not found');\n    }\n    return goalies;\n  }\n\n  @Get('/gm')\n  async getGmAwards(): Promise<Awards_V2[]> {\n    const gms = await this.awardsService.getGmAwards();\n\n    if (!gms || gms.length < 1) {\n      throw new NotFoundException('GM Awards not found');\n    }\n    return gms;\n  }\n\n  @Get('/season')\n  async getSeasonAwards(): Promise<Awards_V2[]> {\n    const season = await this.awardsService.getSeasonAwards();\n\n    if (!season || season.length < 1) {\n      throw new NotFoundException('Season Awards not found');\n    }\n    return season;\n  }\n\n  // @Get('/player/:id')\n  // getPlayerAwardsByPlayerId() {}\n\n  // @Get('/goalie/:id')\n  // getGoalieAwardsByPlayerId() {}\n\n  // @Get('/user/:id')\n  // getTeamAwardsByUserId() {}\n\n  // @Get('/award-types')\n  // getAwardTypes() {}\n\n  // @Post('/add')\n  // addAwardWinner() {}\n\n  // @Put('/winners/:id')\n  // editAwardWinnerById() {}\n\n  // @Delete('/winners/:id')\n  // deleteAwardWinnerById() {}\n}\n","export * from './awards.controller';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class AwardsMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Awards...');\r\n    next();\r\n  }\r\n}\r\n","export * from './awards.middleware';\r\n","import {\r\n  Awards_V2,\r\n  Players_Stats_V2,\r\n  Goalies_Stats_V2,\r\n  Team_Stats_V2,\r\n} from '@api/entities';\r\nimport { AwardTypeEnum } from '@cha/shared/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiAwardsService {\r\n  constructor(\r\n    @InjectRepository(Awards_V2) private repo: Repository<Awards_V2>,\r\n    @InjectRepository(Players_Stats_V2)\r\n    private playerStatsRepo: Repository<Players_Stats_V2>,\r\n    @InjectRepository(Goalies_Stats_V2)\r\n    private goalieStatsRepo: Repository<Goalies_Stats_V2>,\r\n    @InjectRepository(Team_Stats_V2)\r\n    private teamStatsRepo: Repository<Team_Stats_V2>\r\n  ) {}\r\n\r\n  selectUserOptions = {\r\n    id: true,\r\n    display_season: true,\r\n    cha_season: true,\r\n    award_type: {\r\n      display_name: true,\r\n      id: true,\r\n    },\r\n    team_id: {\r\n      id: true,\r\n      city: true,\r\n      nickname: true,\r\n      teamlogo: true,\r\n      teamcolor: true,\r\n    },\r\n    users_id: {\r\n      firstname: true,\r\n      lastname: true,\r\n    },\r\n  };\r\n\r\n  selectPlayerOptions = {\r\n    id: true,\r\n    display_season: true,\r\n    cha_season: true,\r\n    award_type: {\r\n      display_name: true,\r\n      id: true,\r\n    },\r\n    team_id: {\r\n      city: true,\r\n      nickname: true,\r\n      teamlogo: true,\r\n      teamcolor: true,\r\n    },\r\n    player_id: {\r\n      id: true,\r\n      nhl_id: true,\r\n      firstname: true,\r\n      lastname: true,\r\n    },\r\n    users_id: {\r\n      firstname: true,\r\n      lastname: true,\r\n    },\r\n  };\r\n\r\n  async getChampions(): Promise<Awards_V2[]> {\r\n    return await this.repo.find({\r\n      select: this.selectUserOptions,\r\n      relations: ['users_id', 'team_id', 'award_type'],\r\n      where: {\r\n        award_type: {\r\n          id: AwardTypeEnum.CHAMPION,\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  async getScorerAwards() {\r\n    const scorers = await this.repo.find({\r\n      select: this.selectPlayerOptions,\r\n      relations: ['users_id', 'team_id', 'player_id', 'award_type'],\r\n      where: {\r\n        award_type: {\r\n          id: AwardTypeEnum.SCORER,\r\n        },\r\n      },\r\n    });\r\n\r\n    const scrorersWithStats = await this.setPlayerStats(scorers);\r\n\r\n    return scrorersWithStats;\r\n  }\r\n\r\n  async getDefenseAwards(): Promise<Awards_V2[]> {\r\n    const defense = await this.repo.find({\r\n      select: this.selectPlayerOptions,\r\n      relations: ['users_id', 'team_id', 'player_id', 'award_type'],\r\n      where: {\r\n        award_type: {\r\n          id: AwardTypeEnum.DEFENSE,\r\n        },\r\n      },\r\n    });\r\n\r\n    const defenseWithStats = await this.setPlayerStats(defense);\r\n\r\n    return defenseWithStats;\r\n  }\r\n\r\n  async getRookieAwards(): Promise<Awards_V2[]> {\r\n    const rookies = await this.repo.find({\r\n      select: this.selectPlayerOptions,\r\n      relations: ['users_id', 'team_id', 'player_id', 'award_type'],\r\n      where: {\r\n        award_type: {\r\n          id: AwardTypeEnum.ROOKIE,\r\n        },\r\n      },\r\n    });\r\n\r\n    const rookiesWithStats = await this.setPlayerStats(rookies);\r\n\r\n    return rookiesWithStats;\r\n  }\r\n\r\n  async getGoalieAwards(): Promise<Awards_V2[]> {\r\n    const goalies = await this.repo.find({\r\n      select: this.selectPlayerOptions,\r\n      relations: ['users_id', 'team_id', 'player_id', 'award_type'],\r\n      where: {\r\n        award_type: {\r\n          id: AwardTypeEnum.GOALIE,\r\n        },\r\n      },\r\n    });\r\n\r\n    const goaliesWithStats = await this.setGoalieStats(goalies);\r\n\r\n    return goaliesWithStats;\r\n  }\r\n\r\n  async getGmAwards(): Promise<Awards_V2[]> {\r\n    return await this.repo.find({\r\n      select: this.selectUserOptions,\r\n      relations: ['users_id', 'team_id', 'award_type'],\r\n      where: {\r\n        award_type: {\r\n          id: AwardTypeEnum.GM,\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  async getSeasonAwards(): Promise<Awards_V2[]> {\r\n    const seasonAwards = await this.repo.find({\r\n      select: this.selectUserOptions,\r\n      relations: ['users_id', 'team_id', 'award_type'],\r\n      where: {\r\n        award_type: {\r\n          id: AwardTypeEnum.SEASON,\r\n        },\r\n      },\r\n    });\r\n\r\n    const seasonAwardsWithStats = await this.setSeasonStats(seasonAwards);\r\n\r\n    return seasonAwardsWithStats;\r\n  }\r\n\r\n  private async setPlayerStats(array: Awards_V2[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        stats: await this.getPlayerStats(item.player_id.id, item.cha_season),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getPlayerStats(playerId: number, chaSeason: string) {\r\n    return await this.playerStatsRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        playing_year: true,\r\n        games_played: true,\r\n        goals: true,\r\n        assists: true,\r\n        points: true,\r\n      },\r\n      where: {\r\n        player_id: { id: playerId },\r\n        playing_year: chaSeason,\r\n        season_type: 'Regular',\r\n      },\r\n    });\r\n  }\r\n\r\n  private async setGoalieStats(array: Awards_V2[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        stats: await this.getGoalieStats(item.player_id.id, item.cha_season),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getGoalieStats(playerId: number, chaSeason: string) {\r\n    return await this.goalieStatsRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        player_id: {\r\n          id: true,\r\n          nhl_id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          isgoalie: true,\r\n          is_protected: true,\r\n          isactive: true,\r\n          isdefense: true,\r\n          isforward: true,\r\n        },\r\n        playing_year: true,\r\n        games_played: true,\r\n        wins: true,\r\n        goals_against_avg: true,\r\n        save_pct: true,\r\n      },\r\n      where: {\r\n        player_id: {\r\n          id: playerId,\r\n        },\r\n        playing_year: chaSeason,\r\n        season_type: 'Regular',\r\n      },\r\n    });\r\n  }\r\n\r\n  private async setSeasonStats(array: Awards_V2[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        stats: await this.getSeasonStats(item.team_id.id, item.cha_season),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getSeasonStats(teamId: number, chaSeason: string) {\r\n    return await this.teamStatsRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        playing_year: true,\r\n        games_played: true,\r\n        wins: true,\r\n        goals_for: true,\r\n        goals_against: true,\r\n        points: true,\r\n      },\r\n      where: {\r\n        team_id: { id: teamId },\r\n        playing_year: chaSeason,\r\n        season_type: 'Regular',\r\n      },\r\n    });\r\n  }\r\n}\r\n","export * from './api-awards.service';\r\n","export * from './lib/api-core.module';\n","import { Module } from '@nestjs/common';\n\nimport { ApiAwardsModule } from '@api/awards';\nimport { ApiUsersModule } from '@api/users';\nimport { ApiDraftTableModule } from '@api/draft-table';\nimport { ApiEntryDraftModule } from '@api/entry-draft';\nimport { ApiGoalieStatsModule } from '@api/goalie-stats';\nimport { ApiLeagueModule } from '@api/league';\nimport { ApiNhlModule } from '@api/nhl';\nimport { ApiPlayerInfoModule } from '@api/player-info';\nimport { ApiPlayerRatingsModule } from '@api/player-ratings';\nimport { ApiPlayerStatsModule } from '@api/player-stats';\nimport { ApiSalariesModule } from '@api/salaries';\nimport { ApiScheduleModule } from '@api/schedule';\nimport { ApiTeamStatsModule } from '@api/team-stats';\nimport { ApiTeamsModule } from '@api/teams';\nimport { ApiTransactionsModule } from '@api/transactions';\nimport { ApiWaiversModule } from '@api/waivers';\n\n@Module({\n  imports: [\n    ApiUsersModule,\n    ApiAwardsModule,\n    ApiDraftTableModule,\n    ApiEntryDraftModule,\n    ApiGoalieStatsModule,\n    ApiLeagueModule,\n    ApiNhlModule,\n    ApiPlayerInfoModule,\n    ApiPlayerRatingsModule,\n    ApiPlayerStatsModule,\n    ApiSalariesModule,\n    ApiScheduleModule,\n    ApiTeamStatsModule,\n    ApiTeamsModule,\n    ApiTransactionsModule,\n    ApiWaiversModule,\n  ],\n  controllers: [],\n  providers: [],\n  exports: [],\n})\nexport class ApiCoreModule {}\n","export * from './lib/api-draft-table.module';\n","import { Draft_Order_V2, Team_Stats_V2 } from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { DraftTableController } from './controllers';\nimport { DraftTableMiddleware } from './middlewares';\nimport { ApiDraftTableService } from './services';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Draft_Order_V2, Team_Stats_V2])],\n  controllers: [DraftTableController],\n  providers: [ApiDraftTableService],\n})\nexport class ApiDraftTableModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(DraftTableMiddleware).forRoutes('*');\n  }\n}\n","import { Draft_Order_V2 } from '@api/entities';\nimport { Controller, Get, NotFoundException, Param } from '@nestjs/common';\nimport { ApiDraftTableService } from '../services';\n\n@Controller('draft-table')\nexport class DraftTableController {\n  constructor(private draftTableService: ApiDraftTableService) {}\n\n  @Get('/:draft_year/:playing_year')\n  async getDraftTableByYearByStandings(\n    @Param() param: any\n  ): Promise<Draft_Order_V2[]> {\n    const draftTable =\n      await this.draftTableService.getDraftTableByYearByStandings(\n        param.draft_year,\n        param.playing_year\n      );\n\n    if (!draftTable || draftTable.length < 1) {\n      throw new NotFoundException('Draft Table not found');\n    }\n    return draftTable;\n  }\n}\n","export * from './draft-table.controller';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class DraftTableMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Draft Table...');\r\n    next();\r\n  }\r\n}\r\n","export * from './draft-table.middleware';\r\n","import { Draft_Order_V2, Team_Stats_V2 } from '@api/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiDraftTableService {\r\n  constructor(\r\n    @InjectRepository(Draft_Order_V2) private repo: Repository<Draft_Order_V2>,\r\n    @InjectRepository(Team_Stats_V2)\r\n    private teamStatsRepo: Repository<Team_Stats_V2>\r\n  ) {}\r\n\r\n  async getDraftTableByYearByStandings(\r\n    draftYear: string,\r\n    playingYear: string\r\n  ): Promise<Draft_Order_V2[]> {\r\n    const draftTable = await this.repo.find({\r\n      relations: ['team_id'],\r\n      where: {\r\n        draft_year: draftYear,\r\n      },\r\n      select: {\r\n        team_id: {\r\n          id: true,\r\n          shortname: true,\r\n          city: true,\r\n          nickname: true,\r\n          teamlogo: true,\r\n        },\r\n      },\r\n    });\r\n\r\n    const draftTableWithStandings = await this.setTableStandings(\r\n      draftTable,\r\n      playingYear\r\n    );\r\n\r\n    const draftTableByStandings = this.getDraftByStandings(\r\n      draftTableWithStandings\r\n    );\r\n\r\n    return draftTableByStandings;\r\n  }\r\n\r\n  private async setTableStandings(\r\n    array: Draft_Order_V2[],\r\n    playingYear: string\r\n  ) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        stats: await this.getTeamStats(item.team_id.id, playingYear),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getTeamStats(teamId: number, playingYear: string) {\r\n    return await this.teamStatsRepo.findOne({\r\n      relations: ['team_id'],\r\n      select: {\r\n        id: true,\r\n        wins: true,\r\n        goals_for: true,\r\n        goals_against: true,\r\n        points: true,\r\n      },\r\n      where: {\r\n        team_id: { id: teamId },\r\n        playing_year: playingYear,\r\n        season_type: 'Regular',\r\n      },\r\n    });\r\n  }\r\n\r\n  private getDraftByStandings = (data) => {\r\n    return data\r\n      .sort((a: any, b: any) => {\r\n        if (b.stats.points === a.stats.points) {\r\n          if (b.stats.wins === a.stats.wins) {\r\n            if (\r\n              b.stats.goals_for - b.stats.goals_against ===\r\n              a.stats.goals_for - a.stats.goals_against\r\n            ) {\r\n              return b.stats.goals_for - a.stats.goals_for;\r\n            } else {\r\n              return (\r\n                b.stats.goals_for -\r\n                b.stats.goals_against -\r\n                (a.stats.goals_for - a.stats.goals_against)\r\n              );\r\n            }\r\n          } else {\r\n            return b.stats.wins - a.stats.wins;\r\n          }\r\n        } else {\r\n          return b.stats.points - a.stats.points;\r\n        }\r\n      })\r\n      .reverse();\r\n  };\r\n}\r\n","export * from './api-draft-table.service';\r\n","export * from './lib/entities';\n","import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\r\n\r\n@Entity()\r\nexport class Award_Type_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  award_type!: string;\r\n\r\n  @Column()\r\n  display_name!: string;\r\n}\r\n","import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  Column,\r\n  ManyToOne,\r\n  JoinColumn,\r\n  OneToOne,\r\n} from 'typeorm';\r\nimport { Award_Type_V2 } from './award-type.entity';\r\nimport { Players_Stats_V2 } from './player-stats.entity';\r\nimport { Players_V2 } from './player.entity';\r\nimport { Teams_V2 } from './team.entity';\r\nimport { Users_V2 } from './user.entity';\r\n\r\n@Entity({\r\n  orderBy: {\r\n    display_season: 'DESC',\r\n  },\r\n})\r\nexport class Awards_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  display_season!: string;\r\n\r\n  @OneToOne(() => Players_Stats_V2, (playerStats) => playerStats.playing_year)\r\n  @Column()\r\n  cha_season!: string;\r\n\r\n  @OneToOne(() => Award_Type_V2, (award) => award.id)\r\n  @JoinColumn({ name: 'award_type' })\r\n  award_type!: Award_Type_V2;\r\n\r\n  @ManyToOne(() => Users_V2, (user) => user.id)\r\n  @JoinColumn({ name: 'users_id' })\r\n  users_id!: Users_V2;\r\n\r\n  @ManyToOne(() => Teams_V2, (team) => team.id)\r\n  @JoinColumn({ name: 'team_id' })\r\n  team_id!: Teams_V2;\r\n\r\n  @ManyToOne(() => Players_V2, (player) => player.id)\r\n  @JoinColumn({ name: 'player_id' })\r\n  player_id!: Players_V2;\r\n}\r\n","import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\r\n\r\n@Entity()\r\nexport class Conferences_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  conferencename!: string;\r\n\r\n  @Column()\r\n  isactive!: boolean;\r\n}\r\n","import { Entity, PrimaryGeneratedColumn, Column } from \"typeorm\";\r\n\r\n@Entity()\r\nexport class Current_Season_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  current_year!: string;\r\n\r\n  @Column()\r\n  next_year!: string;\r\n\r\n  @Column()\r\n  nhl_year!: string;\r\n\r\n  @Column()\r\n  current_season_type!: string;\r\n\r\n  @Column()\r\n  current_day!: number;\r\n\r\n  @Column()\r\n  current_draft_year!: number;\r\n\r\n  @Column()\r\n  next_draft_year!: number;\r\n\r\n  @Column()\r\n  current_cap!: number;\r\n\r\n  @Column()\r\n  next_cap!: number;\r\n\r\n  @Column()\r\n  min_games!: number;\r\n\r\n  @Column()\r\n  offseason!: boolean;\r\n}\r\n","import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\r\n\r\n@Entity()\r\nexport class Divisions_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  divisionname!: string;\r\n\r\n  @Column()\r\n  conference_id!: number;\r\n\r\n  @Column()\r\n  isactive!: boolean;\r\n}\r\n","import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  Column,\r\n  ManyToOne,\r\n  JoinColumn,\r\n} from 'typeorm';\r\nimport { Teams_V2 } from './team.entity';\r\n\r\n@Entity()\r\nexport class Draft_Order_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @ManyToOne(() => Teams_V2, (team) => team.id)\r\n  @JoinColumn({ name: 'team_id' })\r\n  team_id!: Teams_V2;\r\n\r\n  @Column()\r\n  round_one!: number;\r\n\r\n  @Column()\r\n  round_two!: number;\r\n\r\n  @Column()\r\n  round_three!: number;\r\n\r\n  @Column()\r\n  round_four!: number;\r\n\r\n  @Column()\r\n  round_five!: number;\r\n\r\n  @Column()\r\n  draft_year!: string;\r\n}\r\n","import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  Column,\r\n  ManyToOne,\r\n  JoinColumn,\r\n  Relation,\r\n} from 'typeorm';\r\nimport { Players_V2 } from './player.entity';\r\nimport { Teams_V2 } from './team.entity';\r\n\r\n@Entity()\r\nexport class Drafts_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @ManyToOne(() => Players_V2, (player) => player.id)\r\n  @JoinColumn({ name: 'player_id' })\r\n  player_id!: Relation<Players_V2>;\r\n\r\n  @Column()\r\n  draft_year!: string;\r\n\r\n  @Column()\r\n  draft_round!: number;\r\n\r\n  @Column()\r\n  draft_overall!: number;\r\n\r\n  @ManyToOne(() => Teams_V2, (team) => team.id)\r\n  @JoinColumn({ name: 'team_id' })\r\n  team_id!: Teams_V2;\r\n}\r\n","import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\r\n\r\n@Entity()\r\nexport class Goalie_Ratings_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  player_id!: number;\r\n\r\n  @Column()\r\n  games_played!: number;\r\n\r\n  @Column()\r\n  minutes_played!: number;\r\n\r\n  @Column()\r\n  goals_against_avg!: string;\r\n\r\n  @Column()\r\n  wins!: number;\r\n\r\n  @Column()\r\n  loss!: number;\r\n\r\n  @Column()\r\n  ties!: number;\r\n\r\n  @Column()\r\n  en_goals!: number;\r\n\r\n  @Column()\r\n  shutouts!: number;\r\n\r\n  @Column()\r\n  goals_against!: number;\r\n\r\n  @Column()\r\n  saves!: number;\r\n\r\n  @Column()\r\n  shots_for!: number;\r\n\r\n  @Column()\r\n  save_pct!: string;\r\n\r\n  @Column()\r\n  goals!: number;\r\n\r\n  @Column()\r\n  assists!: number;\r\n\r\n  @Column()\r\n  points!: number;\r\n\r\n  @Column()\r\n  penalty_minutes!: number;\r\n\r\n  @Column()\r\n  skating!: string;\r\n\r\n  @Column()\r\n  speed!: string;\r\n\r\n  @Column()\r\n  passing!: string;\r\n\r\n  @Column()\r\n  playing_year!: string;\r\n}\r\n","import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  Column,\r\n  OneToOne,\r\n  JoinColumn,\r\n  ManyToOne,\r\n} from 'typeorm';\r\nimport { Players_V2 } from './player.entity';\r\nimport { Teams_V2 } from './team.entity';\r\n\r\n@Entity()\r\nexport class Goalies_Stats_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @ManyToOne(() => Players_V2, (player) => player.id, { eager: true })\r\n  @JoinColumn({ name: 'player_id' })\r\n  player_id!: Players_V2;\r\n\r\n  @Column()\r\n  team_name!: string;\r\n\r\n  @Column()\r\n  games_played!: number;\r\n\r\n  @Column()\r\n  minutes_played!: number;\r\n\r\n  @Column()\r\n  goals_against_avg!: string;\r\n\r\n  @Column()\r\n  wins!: number;\r\n\r\n  @Column()\r\n  loss!: number;\r\n\r\n  @Column()\r\n  ties!: number;\r\n\r\n  @Column()\r\n  en_goals!: number;\r\n\r\n  @Column()\r\n  shutouts!: number;\r\n\r\n  @Column()\r\n  goals_against!: number;\r\n\r\n  @Column()\r\n  saves!: number;\r\n\r\n  @Column()\r\n  shots_for!: number;\r\n\r\n  @Column()\r\n  save_pct!: string;\r\n\r\n  @Column()\r\n  goals!: number;\r\n\r\n  @Column()\r\n  assists!: number;\r\n\r\n  @Column()\r\n  points!: number;\r\n\r\n  @Column()\r\n  penalty_minutes!: number;\r\n\r\n  @Column()\r\n  pass_complete!: number;\r\n\r\n  @Column()\r\n  pass_incomplete!: number;\r\n\r\n  @Column()\r\n  pass_attempts!: number;\r\n\r\n  @Column()\r\n  pass_pct!: string;\r\n\r\n  @Column()\r\n  penalty_minor!: number;\r\n\r\n  @Column()\r\n  penalty_minor_coincidental!: number;\r\n\r\n  @Column()\r\n  penalty_major!: number;\r\n\r\n  @Column()\r\n  penalty_fighting_major!: number;\r\n\r\n  @Column()\r\n  penalty_match!: number;\r\n\r\n  @Column()\r\n  penalty_misconduct!: number;\r\n\r\n  @Column()\r\n  penalty_game_misconduct!: number;\r\n\r\n  @Column()\r\n  penalty_gross_misconduct!: number;\r\n\r\n  @Column()\r\n  playing_year!: string;\r\n\r\n  @Column()\r\n  season_type!: 'Regular' | 'Playoffs';\r\n\r\n  @Column()\r\n  player_status!: 'Veteran' | 'Rookie';\r\n\r\n  @OneToOne(() => Teams_V2, (team) => team.shortname)\r\n  team!: Teams_V2;\r\n}\r\n","export * from './award-type.entity';\r\nexport * from './award.entity';\r\nexport * from './conference.entity';\r\nexport * from './current_season.entity';\r\nexport * from './division.entity';\r\nexport * from './draft-order.entity';\r\nexport * from './draft.entity';\r\nexport * from './goalie-rating.entity';\r\nexport * from './goalie-stats.entity';\r\nexport * from './player-rating.entity';\r\nexport * from './player-stats.entity';\r\nexport * from './player.entity';\r\nexport * from './salary.entity';\r\nexport * from './schedule.entity';\r\nexport * from './team-stats.entity';\r\nexport * from './team.entity';\r\nexport * from './transactions.entity';\r\nexport * from './user.entity';\r\nexport * from './waivers.entity';\r\n","import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\r\n\r\n@Entity()\r\nexport class Player_Ratings_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  player_id!: number;\r\n\r\n  @Column()\r\n  games_played!: number;\r\n\r\n  @Column()\r\n  goals!: number;\r\n\r\n  @Column()\r\n  assists!: number;\r\n\r\n  @Column()\r\n  points!: number;\r\n\r\n  @Column()\r\n  plus_minus!: number;\r\n\r\n  @Column()\r\n  penalty_minutes!: number;\r\n\r\n  @Column()\r\n  pp_goals!: number;\r\n\r\n  @Column()\r\n  sh_goals!: number;\r\n\r\n  @Column()\r\n  gw_goals!: number;\r\n\r\n  @Column()\r\n  gt_goals!: number;\r\n\r\n  @Column()\r\n  shots!: number;\r\n\r\n  @Column()\r\n  shooting_pct!: string;\r\n\r\n  @Column()\r\n  game_fatigue!: string;\r\n\r\n  @Column()\r\n  shift_fatigue!: string;\r\n\r\n  @Column()\r\n  c_rate!: string;\r\n\r\n  @Column()\r\n  l_rate!: string;\r\n\r\n  @Column()\r\n  r_rate!: string;\r\n\r\n  @Column()\r\n  ld_rate!: string;\r\n\r\n  @Column()\r\n  rd_rate!: string;\r\n\r\n  @Column()\r\n  shooting!: string;\r\n\r\n  @Column()\r\n  skating!: string;\r\n\r\n  @Column()\r\n  speed!: string;\r\n\r\n  @Column()\r\n  passing!: string;\r\n\r\n  @Column()\r\n  forecheck!: string;\r\n\r\n  @Column()\r\n  physical!: string;\r\n\r\n  @Column()\r\n  intimidation!: string;\r\n\r\n  @Column()\r\n  clear_crease!: string;\r\n\r\n  @Column()\r\n  rock!: string;\r\n\r\n  @Column()\r\n  pk!: string;\r\n\r\n  @Column()\r\n  shot_block!: string;\r\n\r\n  @Column()\r\n  face_off!: string;\r\n\r\n  @Column()\r\n  assist_rating!: string;\r\n\r\n  @Column()\r\n  playing_year!: string;\r\n}\r\n","import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  Column,\r\n  OneToOne,\r\n  ManyToOne,\r\n  JoinColumn,\r\n} from 'typeorm';\r\nimport { Awards_V2 } from './award.entity';\r\nimport { Players_V2 } from './player.entity';\r\n\r\n@Entity()\r\nexport class Players_Stats_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @ManyToOne(() => Players_V2, (player) => player.id, { eager: true })\r\n  @JoinColumn({ name: 'player_id' })\r\n  player_id!: Players_V2;\r\n\r\n  @Column()\r\n  team_name!: string;\r\n\r\n  @Column()\r\n  position!: string;\r\n\r\n  @Column()\r\n  games_played!: number;\r\n\r\n  @Column()\r\n  goals!: number;\r\n\r\n  @Column()\r\n  assists!: number;\r\n\r\n  @Column()\r\n  points!: number;\r\n\r\n  @Column()\r\n  plus_minus!: number;\r\n\r\n  @Column()\r\n  penalty_minutes!: number;\r\n\r\n  @Column()\r\n  pp_goals!: number;\r\n\r\n  @Column()\r\n  sh_goals!: number;\r\n\r\n  @Column()\r\n  gw_goals!: number;\r\n\r\n  @Column()\r\n  gt_goals!: number;\r\n\r\n  @Column()\r\n  shots!: number;\r\n\r\n  @Column()\r\n  shooting_pct!: string;\r\n\r\n  @Column()\r\n  minutes_played!: number;\r\n\r\n  @Column()\r\n  minutes_per_game!: string;\r\n\r\n  @Column()\r\n  fo_won!: number;\r\n\r\n  @Column()\r\n  fo_lost!: number;\r\n\r\n  @Column()\r\n  fo_tied!: number;\r\n\r\n  @Column()\r\n  fo_pct!: string;\r\n\r\n  @Column()\r\n  pass_complete!: number;\r\n\r\n  @Column()\r\n  pass_incomplete!: number;\r\n\r\n  @Column()\r\n  pass_attempts!: number;\r\n\r\n  @Column()\r\n  pass_pct!: string;\r\n\r\n  @Column()\r\n  corner_won!: number;\r\n\r\n  @Column()\r\n  corner_lost!: number;\r\n\r\n  @Column()\r\n  corner_total!: number;\r\n\r\n  @Column()\r\n  corner_pct!: string;\r\n\r\n  @Column()\r\n  fights_won!: number;\r\n\r\n  @Column()\r\n  fights_lost!: number;\r\n\r\n  @Column()\r\n  fights_tied!: number;\r\n\r\n  @Column()\r\n  fights_pct!: string;\r\n\r\n  @Column()\r\n  hits!: number;\r\n\r\n  @Column()\r\n  hit_per_game!: string;\r\n\r\n  @Column()\r\n  blocked_shots!: number;\r\n\r\n  @Column()\r\n  blocked_shot_per_game!: string;\r\n\r\n  @Column()\r\n  current_points_streak!: number;\r\n\r\n  @Column()\r\n  longest_points_streak!: number;\r\n\r\n  @Column()\r\n  penalty_minor!: number;\r\n\r\n  @Column()\r\n  penalty_minor_coincidental!: number;\r\n\r\n  @Column()\r\n  penalty_major!: number;\r\n\r\n  @Column()\r\n  penalty_fighting_major!: number;\r\n\r\n  @Column()\r\n  penalty_match!: number;\r\n\r\n  @Column()\r\n  penalty_misconduct!: number;\r\n\r\n  @Column()\r\n  penalty_game_misconduct!: number;\r\n\r\n  @Column()\r\n  penalty_gross_misconduct!: number;\r\n\r\n  @OneToOne(() => Awards_V2, (award) => award.cha_season)\r\n  @Column()\r\n  playing_year!: string;\r\n\r\n  @Column()\r\n  season_type!: 'Regular' | 'Playoffs';\r\n\r\n  @Column()\r\n  player_status!: 'Veteran' | 'Rookie';\r\n\r\n  // @OneToOne(() => Teams_V2, (team) => team.shortname)\r\n  // team!: Teams_V2;\r\n}\r\n","import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  Column,\r\n  OneToMany,\r\n  AfterInsert,\r\n  AfterUpdate,\r\n  AfterRemove,\r\n  OneToOne,\r\n} from 'typeorm';\r\nimport { Drafts_V2 } from './draft.entity';\r\nimport { Goalie_Ratings_V2 } from './goalie-rating.entity';\r\nimport { Goalies_Stats_V2 } from './goalie-stats.entity';\r\nimport { Player_Ratings_V2 } from './player-rating.entity';\r\nimport { Players_Stats_V2 } from './player-stats.entity';\r\nimport { Salaries_V2 } from './salary.entity';\r\n\r\n@Entity()\r\nexport class Players_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  firstname!: string;\r\n\r\n  @Column()\r\n  lastname!: string;\r\n\r\n  @Column()\r\n  nhl_id!: string;\r\n\r\n  @Column()\r\n  isactive!: boolean;\r\n\r\n  @Column()\r\n  isgoalie!: boolean;\r\n\r\n  @Column()\r\n  isdefense!: boolean;\r\n\r\n  @Column()\r\n  isforward!: boolean;\r\n\r\n  @Column()\r\n  is_protected!: boolean;\r\n\r\n  @OneToMany(() => Players_Stats_V2, (playerStats) => playerStats.player_id)\r\n  playerStats!: Players_Stats_V2;\r\n\r\n  @OneToMany(() => Goalies_Stats_V2, (goalieStats) => goalieStats.player_id)\r\n  goalieStats!: Goalies_Stats_V2;\r\n\r\n  @OneToOne(() => Salaries_V2, (salary) => salary.player_id)\r\n  salary!: Salaries_V2;\r\n\r\n  @OneToMany(() => Drafts_V2, (draft) => draft.player_id)\r\n  draft!: Drafts_V2;\r\n\r\n  @OneToMany(() => Goalie_Ratings_V2, (goalieRating) => goalieRating.player_id)\r\n  goalieRating!: Goalie_Ratings_V2;\r\n\r\n  @OneToMany(() => Player_Ratings_V2, (playerRating) => playerRating.player_id)\r\n  playerRating!: Player_Ratings_V2;\r\n\r\n  @AfterInsert()\r\n  logInsert() {\r\n    console.log('Inserted Player with id', this.id);\r\n  }\r\n\r\n  @AfterUpdate()\r\n  logUpdate() {\r\n    console.log('Updated Player with id', this.id);\r\n  }\r\n\r\n  @AfterRemove()\r\n  logRemove() {\r\n    console.log('Removed Player');\r\n  }\r\n}\r\n","import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\r\n\r\n@Entity()\r\nexport class Salaries_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  player_id!: string;\r\n\r\n  @Column()\r\n  season_2020!: string;\r\n\r\n  @Column()\r\n  season_2021!: string;\r\n\r\n  @Column()\r\n  season_2022!: string;\r\n\r\n  @Column()\r\n  season_2023!: string;\r\n\r\n  @Column()\r\n  season_2024!: string;\r\n\r\n  @Column()\r\n  season_2025!: string;\r\n\r\n  @Column()\r\n  season_2026!: string;\r\n\r\n  @Column()\r\n  season_2027!: string;\r\n\r\n  @Column()\r\n  season_2028!: string;\r\n\r\n  @Column()\r\n  season_2029!: string;\r\n\r\n  @Column()\r\n  season_2030!: string;\r\n\r\n  @Column()\r\n  season_2031!: string;\r\n\r\n  @Column()\r\n  season_2032!: string;\r\n\r\n  @Column()\r\n  season_2033!: string;\r\n\r\n  @Column()\r\n  season_2034!: string;\r\n\r\n  @Column()\r\n  season_2035!: string;\r\n\r\n  @Column()\r\n  season_2036!: string;\r\n\r\n  @Column()\r\n  season_2037!: string;\r\n\r\n  @Column()\r\n  season_2038!: string;\r\n\r\n  @Column()\r\n  season_2039!: string;\r\n\r\n  @Column()\r\n  season_2040!: string;\r\n}\r\n","import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\r\n\r\n@Entity()\r\nexport class Schedule_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  game_day!: number;\r\n\r\n  @Column()\r\n  vis_team_id!: number;\r\n\r\n  @Column()\r\n  vis_team_game_number!: number;\r\n\r\n  @Column()\r\n  vis_team_score!: number;\r\n\r\n  @Column()\r\n  home_team_id!: number;\r\n\r\n  @Column()\r\n  home_team_game_number!: number;\r\n\r\n  @Column()\r\n  home_team_score!: number;\r\n\r\n  @Column()\r\n  playing_year!: string;\r\n}\r\n","import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  Column,\r\n  ManyToOne,\r\n  JoinColumn,\r\n} from 'typeorm';\r\nimport { Teams_V2 } from './team.entity';\r\n\r\n@Entity()\r\nexport class Team_Stats_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @ManyToOne(() => Teams_V2, (team) => team.id)\r\n  @JoinColumn({ name: 'team_id' })\r\n  team_id!: Teams_V2;\r\n\r\n  @Column()\r\n  games_played!: number;\r\n\r\n  @Column()\r\n  wins!: number;\r\n\r\n  @Column()\r\n  loss!: number;\r\n\r\n  @Column()\r\n  ties!: number;\r\n\r\n  @Column()\r\n  points!: number;\r\n\r\n  @Column()\r\n  goals_for!: number;\r\n\r\n  @Column()\r\n  goals_against!: number;\r\n\r\n  @Column()\r\n  pp_attempts!: number;\r\n\r\n  @Column()\r\n  pp_goals!: number;\r\n\r\n  @Column()\r\n  pp_min!: number;\r\n\r\n  @Column()\r\n  pk_attempts!: number;\r\n\r\n  @Column()\r\n  pk_goals!: number;\r\n\r\n  @Column()\r\n  pk_min!: number;\r\n\r\n  @Column()\r\n  penalty_minutes!: number;\r\n\r\n  @Column()\r\n  sh_goals!: number;\r\n\r\n  @Column()\r\n  home_wins!: number;\r\n\r\n  @Column()\r\n  home_loss!: number;\r\n\r\n  @Column()\r\n  home_ties!: number;\r\n\r\n  @Column()\r\n  road_wins!: number;\r\n\r\n  @Column()\r\n  road_loss!: number;\r\n\r\n  @Column()\r\n  road_ties!: number;\r\n\r\n  @Column()\r\n  div_win!: number;\r\n\r\n  @Column()\r\n  div_loss!: number;\r\n\r\n  @Column()\r\n  div_tie!: number;\r\n\r\n  @Column()\r\n  ot_win!: number;\r\n\r\n  @Column()\r\n  ot_loss!: number;\r\n\r\n  @Column()\r\n  lead_after_two_wins!: number;\r\n\r\n  @Column()\r\n  lead_after_two_loss!: number;\r\n\r\n  @Column()\r\n  lead_after_two_ties!: number;\r\n\r\n  @Column()\r\n  trail_after_two_wins!: number;\r\n\r\n  @Column()\r\n  trail_after_two_loss!: number;\r\n\r\n  @Column()\r\n  trail_after_two_ties!: number;\r\n\r\n  @Column()\r\n  even_after_two_wins!: number;\r\n\r\n  @Column()\r\n  even_after_two_loss!: number;\r\n\r\n  @Column()\r\n  even_after_two_ties!: number;\r\n\r\n  @Column()\r\n  long_win_streak!: number;\r\n\r\n  @Column()\r\n  shots_for!: number;\r\n\r\n  @Column()\r\n  shots_against!: number;\r\n\r\n  @Column()\r\n  face_off_won!: number;\r\n\r\n  @Column()\r\n  face_off_lost!: number;\r\n\r\n  @Column()\r\n  corner_won!: number;\r\n\r\n  @Column()\r\n  corner_lost!: number;\r\n\r\n  @Column()\r\n  pass_complete!: number;\r\n\r\n  @Column()\r\n  pass_incomplete!: number;\r\n\r\n  @Column()\r\n  empty_net!: number;\r\n\r\n  @Column()\r\n  shut_outs!: number;\r\n\r\n  @Column()\r\n  playing_year!: string;\r\n\r\n  @Column()\r\n  season_type!: 'Regular' | 'Playoffs';\r\n}\r\n","import {\r\n  Entity,\r\n  Column,\r\n  PrimaryGeneratedColumn,\r\n  AfterInsert,\r\n  AfterRemove,\r\n  AfterUpdate,\r\n  JoinColumn,\r\n  OneToOne,\r\n} from 'typeorm';\r\nimport { Divisions_V2 } from './division.entity';\r\n\r\n@Entity()\r\nexport class Teams_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  shortname!: string;\r\n\r\n  @Column()\r\n  city!: string;\r\n\r\n  @Column()\r\n  nickname!: string;\r\n\r\n  @Column()\r\n  isactive!: boolean;\r\n\r\n  @Column()\r\n  users_id!: number;\r\n\r\n  @Column()\r\n  teamlogo!: string;\r\n\r\n  @Column()\r\n  teamaltlogo!: string;\r\n\r\n  @Column()\r\n  teamcolor!: string;\r\n\r\n  @Column()\r\n  teamtextcolor!: string;\r\n\r\n  @OneToOne(() => Divisions_V2, (division) => division.id, { eager: true })\r\n  @JoinColumn({ name: 'divisions_id' })\r\n  divisions_id!: Divisions_V2;\r\n\r\n  @AfterInsert()\r\n  logInsert() {\r\n    console.log('Inserted Team with id', this.id);\r\n  }\r\n\r\n  @AfterUpdate()\r\n  logUpdate() {\r\n    console.log('Updated Team with id', this.id);\r\n  }\r\n\r\n  @AfterRemove()\r\n  logRemove() {\r\n    console.log('Removed Team');\r\n  }\r\n}\r\n","import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\r\n\r\n@Entity()\r\nexport class Transactions_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  transaction_date!: Date;\r\n\r\n  @Column()\r\n  team_one_id!: number;\r\n\r\n  @Column('text', { array: true })\r\n  team_one_picks!: string[];\r\n\r\n  @Column('int', { array: true })\r\n  team_one_players!: number[];\r\n\r\n  @Column()\r\n  team_two_id!: number;\r\n\r\n  @Column('text', { array: true })\r\n  team_two_picks!: string[];\r\n\r\n  @Column('int', { array: true })\r\n  team_two_players!: number[];\r\n}\r\n","import {\r\n  Entity,\r\n  Column,\r\n  PrimaryGeneratedColumn,\r\n  AfterInsert,\r\n  AfterRemove,\r\n  AfterUpdate,\r\n} from 'typeorm';\r\n\r\n@Entity()\r\nexport class Users_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  firstname!: string;\r\n\r\n  @Column()\r\n  lastname!: string;\r\n\r\n  @Column()\r\n  email!: string;\r\n\r\n  @Column()\r\n  isadmin!: boolean;\r\n\r\n  @Column()\r\n  isactive!: boolean;\r\n\r\n  @AfterInsert()\r\n  logInsert() {\r\n    console.log('Inserted User with id', this.id);\r\n  }\r\n\r\n  @AfterUpdate()\r\n  logUpdate() {\r\n    console.log('Updated User with id', this.id);\r\n  }\r\n\r\n  @AfterRemove()\r\n  logRemove() {\r\n    console.log('Removed User');\r\n  }\r\n}\r\n","import { Entity, PrimaryGeneratedColumn, Column, OneToOne } from 'typeorm';\r\nimport { Teams_V2 } from './team.entity';\r\n\r\n@Entity()\r\nexport class Waivers_V2 {\r\n  @PrimaryGeneratedColumn()\r\n  id!: number;\r\n\r\n  @Column()\r\n  team_id!: number;\r\n\r\n  @Column()\r\n  priority_number!: number;\r\n\r\n  @OneToOne(() => Teams_V2, (team) => team.id)\r\n  team!: Teams_V2;\r\n}\r\n","export * from './lib/api-entry-draft.module';\n","import { Drafts_V2 } from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { EntryDraftController } from './controllers';\nimport { EntryDraftMiddleware } from './middlewares';\nimport { ApiEntryDraftService } from './services';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Drafts_V2])],\n  controllers: [EntryDraftController],\n  providers: [ApiEntryDraftService],\n})\nexport class ApiEntryDraftModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(EntryDraftMiddleware).forRoutes('*');\n  }\n}\n","import { Drafts_V2 } from '@api/entities';\nimport { Controller, Get, NotFoundException } from '@nestjs/common';\nimport { ApiEntryDraftService } from '../services';\n\n@Controller('entry-draft')\nexport class EntryDraftController {\n  constructor(private draftService: ApiEntryDraftService) {}\n\n  @Get('/ordered')\n  async getAll(): Promise<Drafts_V2[]> {\n    const entries = await this.draftService.getAll();\n\n    if (!entries || entries.length < 1) {\n      throw new NotFoundException('Entry Draft Table not found');\n    }\n    return entries;\n  }\n}\n","export * from './entry-draft.controller';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class EntryDraftMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Entry Draft Table...');\r\n    next();\r\n  }\r\n}\r\n","export * from './entry-draft.middleware';\r\n","import { Drafts_V2 } from '@api/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiEntryDraftService {\r\n  constructor(\r\n    @InjectRepository(Drafts_V2) private repo: Repository<Drafts_V2>\r\n  ) {}\r\n\r\n  async getAll(): Promise<Drafts_V2[]> {\r\n    const draftTable = await this.repo.find({\r\n      relations: ['team_id', 'player_id'],\r\n      select: {\r\n        team_id: {\r\n          id: true,\r\n          city: true,\r\n          nickname: true,\r\n          teamlogo: true,\r\n        },\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n        },\r\n      },\r\n      order: {\r\n        draft_year: 'DESC',\r\n        draft_round: 'ASC',\r\n        draft_overall: 'ASC',\r\n      },\r\n    });\r\n\r\n    return draftTable;\r\n  }\r\n}\r\n","export * from './api-entry-draft.service';\r\n","export * from './lib/api-goalie-stats.module';","import { Goalies_Stats_V2, Teams_V2 } from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { GoalieStatsController } from './controllers';\nimport { GoalieStatsMiddleware } from './middlewares';\nimport {\n  ApiGoalieStatsService,\n  ApiGoalieStatsLeadersService,\n} from './services';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Goalies_Stats_V2, Teams_V2])],\n  controllers: [GoalieStatsController],\n  providers: [ApiGoalieStatsService, ApiGoalieStatsLeadersService],\n})\nexport class ApiGoalieStatsModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(GoalieStatsMiddleware).forRoutes('*');\n  }\n}\n","import { StatGoalieLeadersDto } from '@cha/shared/entities';\nimport { Controller, Get, NotFoundException, Param } from '@nestjs/common';\nimport { stat } from 'fs';\nimport {\n  ApiGoalieStatsLeadersService,\n  ApiGoalieStatsService,\n} from '../services';\n\n@Controller('goalie-stats')\nexport class GoalieStatsController {\n  constructor(\n    private goalieStatsLeadersService: ApiGoalieStatsLeadersService,\n    private goalieStatsService: ApiGoalieStatsService\n  ) {}\n\n  @Get('/leaders/:season/:seasonType/:minGames')\n  async getGoalieStatsLeaders(@Param() param): Promise<StatGoalieLeadersDto> {\n    const stats = await this.goalieStatsLeadersService.getGoalieStatsLeaders(\n      param.season,\n      param.seasonType,\n      param.minGames\n    );\n\n    if (!stats) {\n      throw new NotFoundException('Player Stats not found');\n    }\n    return stats;\n  }\n\n  @Get('/all/:season/:seasonType')\n  async getAllGoalieStats(@Param() param): Promise<any[]> {\n    const stats = await this.goalieStatsService.getAllGoalieStats(\n      param.season,\n      param.seasonType\n    );\n\n    if (!stats || stat.length < 1) {\n      throw new NotFoundException('Player Stats not found');\n    }\n    return stats;\n  }\n}\n","export * from './goalie-stats.controller';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class GoalieStatsMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Goalie Stats...');\r\n    next();\r\n  }\r\n}\r\n","export * from './goalie-stats.middleware';\r\n","import { Goalies_Stats_V2, Teams_V2 } from '@api/entities';\r\nimport {\r\n  StatGoalieLeaderDto,\r\n  StatGoalieLeadersDto,\r\n} from '@cha/shared/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository, MoreThan } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiGoalieStatsLeadersService {\r\n  constructor(\r\n    @InjectRepository(Goalies_Stats_V2)\r\n    private repo: Repository<Goalies_Stats_V2>,\r\n    @InjectRepository(Teams_V2)\r\n    private teamInfoRepo: Repository<Teams_V2>\r\n  ) {}\r\n\r\n  async getGoalieStatsLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs',\r\n    minGames: string\r\n  ): Promise<StatGoalieLeadersDto> {\r\n    const shotsFacedLeaders = await this.getShotsFacedLeaders(\r\n      season,\r\n      seasonType,\r\n      minGames\r\n    );\r\n    const gaaLeaders = await this.getGaaLeaders(season, seasonType, minGames);\r\n    const savePctLeaders = await this.getSavePctLeaders(\r\n      season,\r\n      seasonType,\r\n      minGames\r\n    );\r\n    const shutoutsLeaders = await this.getShutoutLeaders(season, seasonType);\r\n    const winsLeaders = await this.getWinsLeaders(season, seasonType);\r\n\r\n    return {\r\n      shotsFaced: shotsFacedLeaders as unknown as StatGoalieLeaderDto[],\r\n      gaa: gaaLeaders as unknown as StatGoalieLeaderDto[],\r\n      savePct: savePctLeaders as unknown as StatGoalieLeaderDto[],\r\n      shutouts: shutoutsLeaders as unknown as StatGoalieLeaderDto[],\r\n      wins: winsLeaders as unknown as StatGoalieLeaderDto[],\r\n    };\r\n  }\r\n\r\n  private async getShotsFacedLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs',\r\n    minGames: string\r\n  ) {\r\n    const shotsFacedLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        shots_for: true,\r\n        team_name: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: {\r\n        player_id: true,\r\n      },\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n        games_played: MoreThan(Number(minGames)),\r\n      },\r\n      order: {\r\n        shots_for: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const shotsFacedLeadersWithTeamInfo = await this.setTeamInfo(\r\n      shotsFacedLeaders\r\n    );\r\n\r\n    return shotsFacedLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getGaaLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs',\r\n    minGames: string\r\n  ) {\r\n    const gaaLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        goals_against_avg: true,\r\n        team_name: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: {\r\n        player_id: true,\r\n      },\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n        games_played: MoreThan(Number(minGames)),\r\n      },\r\n      order: {\r\n        goals_against_avg: 'ASC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const gaaLeadersWithTeamInfo = await this.setTeamInfo(gaaLeaders);\r\n\r\n    return gaaLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getSavePctLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs',\r\n    minGames: string\r\n  ) {\r\n    const savePctLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        save_pct: true,\r\n        team_name: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: {\r\n        player_id: true,\r\n      },\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n        games_played: MoreThan(Number(minGames)),\r\n      },\r\n      order: {\r\n        save_pct: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const savePctLeadersWithTeamInfo = await this.setTeamInfo(savePctLeaders);\r\n\r\n    return savePctLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getShutoutLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const shutoutLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        shutouts: true,\r\n        team_name: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: {\r\n        player_id: true,\r\n      },\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        shutouts: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const shutoutLeadersWithTeamInfo = await this.setTeamInfo(shutoutLeaders);\r\n\r\n    return shutoutLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getWinsLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const winLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        wins: true,\r\n        team_name: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: {\r\n        player_id: true,\r\n      },\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        wins: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const winLeadersWithTeamInfo = await this.setTeamInfo(winLeaders);\r\n\r\n    return winLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async setTeamInfo(array: Goalies_Stats_V2[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        teamInfo: await this.getTeamInfo(item.team_name),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getTeamInfo(teamName: string) {\r\n    return await this.teamInfoRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        city: true,\r\n        teamlogo: true,\r\n        nickname: true,\r\n      },\r\n      where: {\r\n        shortname: teamName,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Goalies_Stats_V2, Teams_V2 } from '@api/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiGoalieStatsService {\r\n  constructor(\r\n    @InjectRepository(Goalies_Stats_V2)\r\n    private repo: Repository<Goalies_Stats_V2>,\r\n    @InjectRepository(Teams_V2)\r\n    private teamInfoRepo: Repository<Teams_V2>\r\n  ) {}\r\n\r\n  async getAllGoalieStats(season: string, seasonType: 'Regular' | 'Playoffs') {\r\n    const allGoalieStats = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        games_played: true,\r\n        minutes_played: true,\r\n        goals_against_avg: true,\r\n        wins: true,\r\n        loss: true,\r\n        ties: true,\r\n        en_goals: true,\r\n        shutouts: true,\r\n        goals_against: true,\r\n        saves: true,\r\n        shots_for: true,\r\n        save_pct: true,\r\n        goals: true,\r\n        assists: true,\r\n        points: true,\r\n        penalty_minutes: true,\r\n        pass_pct: true,\r\n        team_name: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: {\r\n        player_id: true,\r\n      },\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        wins: 'DESC',\r\n      },\r\n    });\r\n\r\n    const goalieStatsWithTeamInfo = await this.setTeamInfo(allGoalieStats);\r\n\r\n    const goalieStatsWithTeamInfoConverted = await this.convertStats(\r\n      goalieStatsWithTeamInfo\r\n    );\r\n\r\n    return goalieStatsWithTeamInfoConverted;\r\n  }\r\n\r\n  private async setTeamInfo(array: Goalies_Stats_V2[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        teamInfo: await this.getTeamInfo(item.team_name),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getTeamInfo(teamName: string) {\r\n    return await this.teamInfoRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        city: true,\r\n        teamlogo: true,\r\n        nickname: true,\r\n      },\r\n      where: {\r\n        shortname: teamName,\r\n      },\r\n    });\r\n  }\r\n\r\n  private async convertStats(array: Goalies_Stats_V2[]) {\r\n    return await Promise.all(\r\n      array.map((stat: Goalies_Stats_V2) => ({\r\n        ...stat,\r\n        games_played: Number(stat.games_played),\r\n        minutes_played: Number(stat.minutes_played),\r\n        goals_against_avg: Number(stat.goals_against_avg),\r\n        wins: Number(stat.wins),\r\n        loss: Number(stat.loss),\r\n        ties: Number(stat.ties),\r\n        en_goals: Number(stat.en_goals),\r\n        shutouts: Number(stat.shutouts),\r\n        goals_against: Number(stat.goals_against),\r\n        saves: Number(stat.saves),\r\n        shots_for: Number(stat.shots_for),\r\n        save_pct: Number(stat.save_pct),\r\n        goals: Number(stat.goals),\r\n        assists: Number(stat.assists),\r\n        points: Number(stat.points),\r\n        penalty_minutes: Number(stat.penalty_minutes),\r\n        pass_pct: Number(stat.pass_pct),\r\n      }))\r\n    );\r\n  }\r\n}\r\n","export * from './api-goalie-stats-leaders.service';\r\nexport * from './api-goalie-stats.service';\r\n","export * from './lib/api-league.module';\n","import { Current_Season_V2 } from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { LeagueController } from './controllers';\nimport { LeagueMiddleware } from './middlewares/league.middleware';\nimport { LeagueService } from './services';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Current_Season_V2])],\n  controllers: [LeagueController],\n  providers: [LeagueService],\n})\nexport class ApiLeagueModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(LeagueMiddleware).forRoutes('*');\n  }\n}\n","export * from './league.controller';\r\n","import { LeagueDataDto } from '@cha/shared/entities';\nimport { Controller, Get, NotFoundException } from '@nestjs/common';\nimport { LeagueService } from '../services';\n\n@Controller('league')\nexport class LeagueController {\n  constructor(private leagueService: LeagueService) {}\n\n  @Get('/current-data')\n  async getCurrentData(): Promise<LeagueDataDto> {\n    const data = await this.leagueService.getCurrentLeagueData();\n\n    if (!data) {\n      throw new NotFoundException('League Data not found');\n    }\n    return data;\n  }\n}\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class LeagueMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request League...');\r\n    next();\r\n  }\r\n}","export * from './league.service';\r\n","import { Current_Season_V2 } from '@api/entities';\r\nimport { LeagueDataDto } from '@cha/shared/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class LeagueService {\r\n  constructor(\r\n    @InjectRepository(Current_Season_V2)\r\n    private repo: Repository<Current_Season_V2>\r\n  ) {}\r\n\r\n  async getCurrentLeagueData(): Promise<LeagueDataDto> {\r\n    return (await this.repo.find()) as unknown as LeagueDataDto;\r\n  }\r\n}\r\n","export * from './lib/api-nhl.module';\n","import { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { HttpModule } from '@nestjs/axios';\nimport { NhlController } from './controllers';\nimport { NhlMiddleware } from './middlewares';\nimport { ApiNhlService } from './services';\n\n@Module({\n  imports: [HttpModule],\n  controllers: [NhlController],\n  providers: [ApiNhlService],\n})\nexport class ApiNhlModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(NhlMiddleware).forRoutes('*');\n  }\n}\n","export * from './nhl.controller';\r\n","import { Controller, Get, NotFoundException, Param } from '@nestjs/common';\nimport { ApiNhlService } from '../services';\n\n@Controller('nhl')\nexport class NhlController {\n  constructor(private nhlService: ApiNhlService) {}\n\n  @Get('/nhl-leaders/:season/:playerType/:statType')\n  async getNhlLeaders(@Param() param) {\n    const nhlLeaders = await this.nhlService.getNhlLeaders(\n      param.playerType,\n      param.statType,\n      param.season\n    );\n\n    if (!nhlLeaders) {\n      throw new NotFoundException('Nhl Leaders not found');\n    }\n    return nhlLeaders;\n  }\n\n  @Get('/nhl-leaders/:season/:playerType/:statType/:minGames')\n  async getNhlGoalieLeaders(@Param() param) {\n    const nhlLeaders = await this.nhlService.getNhlGoalieLeaders(\n      param.playerType,\n      param.statType,\n      param.season,\n      param.minGames\n    );\n\n    if (!nhlLeaders) {\n      throw new NotFoundException('Nhl Leaders not found');\n    }\n    return nhlLeaders;\n  }\n\n  @Get('/nhl-rookie-leaders/:season/:playerType/:statType')\n  async getNhlRookieLeaders(@Param() param) {\n    const nhlLeaders = await this.nhlService.getNhlRookieLeaders(\n      param.playerType,\n      param.statType,\n      param.season\n    );\n\n    if (!nhlLeaders) {\n      throw new NotFoundException('Nhl Leaders not found');\n    }\n    return nhlLeaders;\n  }\n\n  @Get('/nhl-defense-leaders/:season/:playerType/:statType')\n  async getNhlDefenseLeaders(@Param() param) {\n    const nhlLeaders = await this.nhlService.getNhlDefenseLeaders(\n      param.playerType,\n      param.statType,\n      param.season\n    );\n\n    if (!nhlLeaders) {\n      throw new NotFoundException('Nhl Leaders not found');\n    }\n    return nhlLeaders;\n  }\n\n  @Get('/nhl-summary/sportsnet/:season/:seasonType')\n  async getNhlSummaryFromSportsnet(@Param() param) {\n    const nhlLeaders = await this.nhlService.getNhlSummaryFromSportsnet(\n      param.season,\n      param.seasonType\n    );\n\n    if (!nhlLeaders) {\n      throw new NotFoundException('Nhl Summary not found');\n    }\n    return nhlLeaders;\n  }\n\n  @Get('/nhl-summary/rookies/:season/:player/:statsType/:sort/:start/:pageSize')\n  async getNhlRookieSummary(@Param() param) {\n    const nhlLeaders = await this.nhlService.getNhlRookieSummary(\n      param.season,\n      param.player,\n      param.statsType,\n      param.sort,\n      param.start,\n      param.pageSize\n    );\n\n    if (!nhlLeaders) {\n      throw new NotFoundException('Nhl Rookie Summary not found');\n    }\n    return nhlLeaders;\n  }\n}\n","export * from './nhl.middleware';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class NhlMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Nhl...');\r\n    next();\r\n  }\r\n}\r\n","import { HttpService } from '@nestjs/axios';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { AxiosResponse } from 'axios';\r\nimport { map, Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ApiNhlService {\r\n  constructor(private httpService: HttpService) {}\r\n\r\n  nhlCOM = 'https://api.nhle.com/stats/rest/en/leaders';\r\n  nhlComSummary = 'https://api.nhle.com/stats/rest/en';\r\n  sportsNet = 'https://mobile-statsv2.sportsnet.ca/web_player_table';\r\n\r\n  getNhlLeaders(\r\n    playerType: string,\r\n    statType: string,\r\n    season: string\r\n  ): Observable<AxiosResponse<any[]>> {\r\n    const leaders = this.httpService\r\n      .get(\r\n        `${this.nhlCOM}/${playerType}s/${statType}?cayenneExp=season=${season}%20and%20gameType=2`\r\n      )\r\n      .pipe(map((response) => response.data));\r\n\r\n    return leaders;\r\n  }\r\n\r\n  getNhlGoalieLeaders(\r\n    playerType: string,\r\n    statType: string,\r\n    season: string,\r\n    minGames: string\r\n  ): Observable<AxiosResponse<any[]>> {\r\n    const leaders = this.httpService\r\n      .get(\r\n        `${this.nhlCOM}/${playerType}s/${statType}?cayenneExp=season=${season}%20and%20gameType=2%20and%20gamesPlayed%20%3E=%20${minGames}`\r\n      )\r\n      .pipe(map((response) => response.data));\r\n\r\n    return leaders;\r\n  }\r\n\r\n  getNhlRookieLeaders(\r\n    playerType: string,\r\n    statType: string,\r\n    season: string\r\n  ): Observable<AxiosResponse<any[]>> {\r\n    const leaders = this.httpService\r\n      .get(\r\n        `${this.nhlCOM}/${playerType}s/${statType}?cayenneExp=season=${season}%20and%20gameType=2%20and%20isRookie%20=%20%27Y%27`\r\n      )\r\n      .pipe(map((response) => response.data));\r\n\r\n    return leaders;\r\n  }\r\n\r\n  getNhlDefenseLeaders(\r\n    playerType: string,\r\n    statType: string,\r\n    season: string\r\n  ): Observable<AxiosResponse<any[]>> {\r\n    const leaders = this.httpService\r\n      .get(\r\n        `${this.nhlCOM}/${playerType}s/${statType}?cayenneExp=season=${season}%20and%20gameType=2%20and%20player.positionCode%20=%20%27D%27`\r\n      )\r\n      .pipe(map((response) => response.data));\r\n\r\n    return leaders;\r\n  }\r\n\r\n  getNhlSummaryFromSportsnet(\r\n    season: string,\r\n    seasonType: string\r\n  ): Observable<AxiosResponse<any[]>> {\r\n    const leaders = this.httpService\r\n      .get(\r\n        `${this.sportsNet}?league=nhl&season=${season}&season_type=${seasonType}`\r\n      )\r\n      .pipe(map((response) => response.data));\r\n\r\n    return leaders;\r\n  }\r\n\r\n  getNhlRookieSummary(\r\n    season: string,\r\n    player: string,\r\n    statsType: string,\r\n    sort: string,\r\n    start: string,\r\n    pageSize: string\r\n  ): Observable<AxiosResponse<any[]>> {\r\n    const leaders = this.httpService\r\n      .get(\r\n        `${this.nhlComSummary}/${player}/summary?isAggregate=false&isGame=false&sort=%5B%7B%22property%22:%22${statsType}%22,%22direction%22:%22${sort}%22%7D%5D&start=${start}&limit=${pageSize}&cayenneExp=gameTypeId=2%20and%20isRookie=%221%22%20and%20seasonId%3C=${season}%20and%20seasonId%3E=${season}`\r\n      )\r\n      .pipe(map((response) => response.data));\r\n\r\n    return leaders;\r\n  }\r\n}\r\n","export * from './api-nhl.service';\r\n","export * from './lib/api-player-info.module';","import { Module } from '@nestjs/common';\nimport { PlayerInfoController } from './controllers';\n\n@Module({\n  controllers: [PlayerInfoController],\n  providers: [],\n  exports: [],\n})\nexport class ApiPlayerInfoModule {}\n","export * from './player-info.controller';\r\n","import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\n\n@Controller('player-info')\nexport class PlayerInfoController {\n  @Get()\n  getAllPlayers() {}\n\n  @Get('/players/:id')\n  getPlayerInfoById(@Param('id') id: string) {}\n\n  @Get('/goalies/:id')\n  getGoalieInfoById(@Param('id') id: string) {}\n\n  @Get('/players/nhl/logo/:id')\n  getPlayerLogoByNhlId(@Param('id') id: string) {}\n\n  @Get('/goalies/nhl/logo/:id')\n  getGoalieLogoByNhlId(@Param('id') id: string) {}\n\n  @Get('/players/active')\n  getActivePlayers() {}\n\n  @Get('/player/:id')\n  getPlayerForEditById(@Param('id') id: string) {}\n\n  @Put('/player/:id')\n  updatePlayerById(@Body() body: any, @Param('id') id: string) {}\n\n  @Post('/players/add')\n  addPlayer(@Body() body: any) {}\n\n  @Delete('/delete/:id')\n  deletePlayer(@Body() body: any, @Param('id') id: string) {}\n}\n","export * from './lib/api-player-ratings.module';\n","import { Module } from '@nestjs/common';\nimport { PlayerRatingsController } from './controllers';\n\n@Module({\n  controllers: [PlayerRatingsController],\n  providers: [],\n  exports: [],\n})\nexport class ApiPlayerRatingsModule {}\n","export * from './player-ratings.controller';\r\n","import { Controller } from '@nestjs/common';\n\n@Controller('player-ratings')\nexport class PlayerRatingsController {}\n","export * from './lib/api-player-stats.module';\n","import { Players_Stats_V2, Teams_V2 } from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { PlayerStatsController } from './controllers';\nimport { PlayerStatsMiddleware } from './middlewares';\nimport {\n  ApiPlayerLeadersStatsService,\n  ApiPlayerStatsService,\n} from './services';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Players_Stats_V2, Teams_V2])],\n  controllers: [PlayerStatsController],\n  providers: [ApiPlayerStatsService, ApiPlayerLeadersStatsService],\n})\nexport class ApiPlayerStatsModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(PlayerStatsMiddleware).forRoutes('*');\n  }\n}\n","export * from './player-stats.controller';\r\n","import { StatPlayerLeadersDto } from '@cha/shared/entities';\nimport { Controller, Get, NotFoundException, Param } from '@nestjs/common';\nimport {\n  ApiPlayerLeadersStatsService,\n  ApiPlayerStatsService,\n} from '../services';\n\n@Controller('player-stats')\nexport class PlayerStatsController {\n  constructor(\n    private playerLeaderStatsService: ApiPlayerLeadersStatsService,\n    private playerStatsService: ApiPlayerStatsService\n  ) {}\n\n  @Get('/leaders/:season/:seasonType')\n  async getPlayerStatsLeaders(@Param() param): Promise<StatPlayerLeadersDto> {\n    const stats = await this.playerLeaderStatsService.getPlayerStatsLeaders(\n      param.season,\n      param.seasonType\n    );\n\n    if (!stats) {\n      throw new NotFoundException('Player Leader Stats not found');\n    }\n    return stats;\n  }\n\n  @Get('/all/:season/:seasonType')\n  async getPlayerStatsAll(@Param() param): Promise<any[]> {\n    const stats = await this.playerStatsService.getAllStats(\n      param.season,\n      param.seasonType\n    );\n\n    if (!stats || stats.length < 1) {\n      throw new NotFoundException('Player Stats not found');\n    }\n    return stats;\n  }\n}\n","export * from './player-stats.middleware';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class PlayerStatsMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Player Stats...');\r\n    next();\r\n  }\r\n}\r\n","import { Players_Stats_V2, Teams_V2 } from '@api/entities';\r\nimport {\r\n  StatPlayerLeaderDto,\r\n  StatPlayerLeadersDto,\r\n} from '@cha/shared/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiPlayerLeadersStatsService {\r\n  constructor(\r\n    @InjectRepository(Players_Stats_V2)\r\n    private repo: Repository<Players_Stats_V2>,\r\n    @InjectRepository(Teams_V2)\r\n    private teamInfoRepo: Repository<Teams_V2>\r\n  ) {}\r\n\r\n  async getPlayerStatsLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ): Promise<StatPlayerLeadersDto> {\r\n    const hitsLeaders = await this.getHitsLeaders(season, seasonType);\r\n    const pointsLeaders = await this.getPointsLeaders(season, seasonType);\r\n    const assistLeaders = await this.getAssistLeaders(season, seasonType);\r\n    const bestPlusMinusLeaders = await this.getBestPlusMinusLeaders(\r\n      season,\r\n      seasonType\r\n    );\r\n    const blockedShotLeaders = await this.getblockedShotLeaders(\r\n      season,\r\n      seasonType\r\n    );\r\n    const currSteakLeaders = await this.getCurrSteakLeaders(season, seasonType);\r\n    const defenseLeaders = await this.getDefenseLeaders(season, seasonType);\r\n    const goalLeaders = await this.getGoalLeaders(season, seasonType);\r\n    const longStreakLeaders = await this.getLongStreakLeaders(\r\n      season,\r\n      seasonType\r\n    );\r\n    const minutesLeaders = await this.getMinutesLeaders(season, seasonType);\r\n    const penaltyLeaders = await this.getPenaltyLeaders(season, seasonType);\r\n    const ppGoalsLeaders = await this.getPpgoalsLeaders(season, seasonType);\r\n    const rookieLeaders = await this.getRookieLeaders(season, seasonType);\r\n    const shGoalsLeaders = await this.getShGoalsLeaders(season, seasonType);\r\n    const shotsLeaders = await this.getShotsLeaders(season, seasonType);\r\n\r\n    return {\r\n      hits: hitsLeaders as unknown as StatPlayerLeaderDto[],\r\n      points: pointsLeaders as unknown as StatPlayerLeaderDto[],\r\n      assists: assistLeaders as unknown as StatPlayerLeaderDto[],\r\n      bestPlusMinus: bestPlusMinusLeaders as unknown as StatPlayerLeaderDto[],\r\n      blockedShots: blockedShotLeaders as unknown as StatPlayerLeaderDto[],\r\n      currStreak: currSteakLeaders as unknown as StatPlayerLeaderDto[],\r\n      defense: defenseLeaders as unknown as StatPlayerLeaderDto[],\r\n      goals: goalLeaders as unknown as StatPlayerLeaderDto[],\r\n      longStreak: longStreakLeaders as unknown as StatPlayerLeaderDto[],\r\n      minutes: minutesLeaders as unknown as StatPlayerLeaderDto[],\r\n      penalties: penaltyLeaders as unknown as StatPlayerLeaderDto[],\r\n      ppGoals: ppGoalsLeaders as unknown as StatPlayerLeaderDto[],\r\n      rookies: rookieLeaders as unknown as StatPlayerLeaderDto[],\r\n      shGoals: shGoalsLeaders as unknown as StatPlayerLeaderDto[],\r\n      shots: shotsLeaders as unknown as StatPlayerLeaderDto[],\r\n    };\r\n  }\r\n\r\n  private async getHitsLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const hitsLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        hits: true,\r\n        team_name: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: {\r\n        player_id: true,\r\n      },\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        hits: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const hitsLeadersWithTeamInfo = await this.setTeamInfo(hitsLeaders);\r\n\r\n    return hitsLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getPointsLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const pointsLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        points: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        points: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const pointsLeadersWithTeamInfo = await this.setTeamInfo(pointsLeaders);\r\n\r\n    return pointsLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getAssistLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const assistLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        assists: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        assists: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const assistLeadersWithTeamInfo = await this.setTeamInfo(assistLeaders);\r\n\r\n    return assistLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getBestPlusMinusLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const bestPlusMinusLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        plus_minus: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        plus_minus: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const bestPlusMinusLeadersWithTeamInfo = await this.setTeamInfo(\r\n      bestPlusMinusLeaders\r\n    );\r\n\r\n    return bestPlusMinusLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getblockedShotLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const blockedShotLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        blocked_shots: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        blocked_shots: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const blockedShotLeadersWithTeamInfo = await this.setTeamInfo(\r\n      blockedShotLeaders\r\n    );\r\n\r\n    return blockedShotLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getCurrSteakLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const currStreakLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        current_points_streak: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        current_points_streak: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const currStreakLeadersWithTeamInfo = await this.setTeamInfo(\r\n      currStreakLeaders\r\n    );\r\n\r\n    return currStreakLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getDefenseLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const defenseLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        points: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n          isdefense: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n        player_id: {\r\n          isdefense: true,\r\n        },\r\n      },\r\n      order: {\r\n        points: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const defenseLeadersWithTeamInfo = await this.setTeamInfo(defenseLeaders);\r\n\r\n    return defenseLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getGoalLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const goalLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        goals: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        goals: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const goalLeadersWithTeamInfo = await this.setTeamInfo(goalLeaders);\r\n\r\n    return goalLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getLongStreakLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const longStreakLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        longest_points_streak: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        longest_points_streak: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const longStreakLeadersWithTeamInfo = await this.setTeamInfo(\r\n      longStreakLeaders\r\n    );\r\n\r\n    return longStreakLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getMinutesLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const minutesLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        minutes_played: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        minutes_played: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const minutesLeadersWithTeamInfo = await this.setTeamInfo(minutesLeaders);\r\n\r\n    return minutesLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getPenaltyLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const penaltyLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        penalty_minutes: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        penalty_minutes: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const penaltyLeadersWithTeamInfo = await this.setTeamInfo(penaltyLeaders);\r\n\r\n    return penaltyLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getPpgoalsLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const ppGoalsLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        pp_goals: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        pp_goals: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const ppGoalsLeadersWithTeamInfo = await this.setTeamInfo(ppGoalsLeaders);\r\n\r\n    return ppGoalsLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getRookieLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const rookieLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        points: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n        player_status: 'Rookie',\r\n      },\r\n      order: {\r\n        points: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const rookieLeadersWithTeamInfo = await this.setTeamInfo(rookieLeaders);\r\n\r\n    return rookieLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getShGoalsLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const shGoalsLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        sh_goals: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        sh_goals: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const shGoalsLeadersWithTeamInfo = await this.setTeamInfo(shGoalsLeaders);\r\n\r\n    return shGoalsLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async getShotsLeaders(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ) {\r\n    const shotsLeaders = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        shots: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isgoalie: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        shots: 'DESC',\r\n      },\r\n      take: 10,\r\n    });\r\n\r\n    const shotsLeadersWithTeamInfo = await this.setTeamInfo(shotsLeaders);\r\n\r\n    return shotsLeadersWithTeamInfo;\r\n  }\r\n\r\n  private async setTeamInfo(array: Players_Stats_V2[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        teamInfo: await this.getTeamInfo(item.team_name),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getTeamInfo(teamName: string) {\r\n    return await this.teamInfoRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        city: true,\r\n        teamlogo: true,\r\n        nickname: true,\r\n      },\r\n      where: {\r\n        shortname: teamName,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Players_Stats_V2, Teams_V2 } from '@api/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiPlayerStatsService {\r\n  constructor(\r\n    @InjectRepository(Players_Stats_V2)\r\n    private repo: Repository<Players_Stats_V2>,\r\n    @InjectRepository(Teams_V2)\r\n    private teamInfoRepo: Repository<Teams_V2>\r\n  ) {}\r\n\r\n  async getAllStats(season: string, seasonType: 'Regular' | 'Playoffs') {\r\n    const allStats = await this.repo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        position: true,\r\n        games_played: true,\r\n        goals: true,\r\n        assists: true,\r\n        points: true,\r\n        plus_minus: true,\r\n        penalty_minutes: true,\r\n        pp_goals: true,\r\n        sh_goals: true,\r\n        gw_goals: true,\r\n        gt_goals: true,\r\n        shots: true,\r\n        shooting_pct: true,\r\n        minutes_played: true,\r\n        minutes_per_game: true,\r\n        fo_pct: true,\r\n        pass_pct: true,\r\n        corner_pct: true,\r\n        hits: true,\r\n        blocked_shots: true,\r\n        player_id: {\r\n          id: true,\r\n          firstname: true,\r\n          lastname: true,\r\n          nhl_id: true,\r\n          isdefense: true,\r\n          isforward: true,\r\n        },\r\n      },\r\n      relations: ['player_id'],\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        points: 'DESC',\r\n      },\r\n    });\r\n\r\n    const allStatsWithTeamInfo = await this.setTeamInfo(allStats);\r\n\r\n    const allStatsWithTeamInfoConverted = await this.convertStats(\r\n      allStatsWithTeamInfo\r\n    );\r\n\r\n    return allStatsWithTeamInfoConverted;\r\n  }\r\n\r\n  private async setTeamInfo(array: Players_Stats_V2[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        teamInfo: await this.getTeamInfo(item.team_name),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getTeamInfo(teamName: string) {\r\n    return await this.teamInfoRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        city: true,\r\n        teamlogo: true,\r\n        nickname: true,\r\n      },\r\n      where: {\r\n        shortname: teamName,\r\n      },\r\n    });\r\n  }\r\n\r\n  private async convertStats(array: Players_Stats_V2[]) {\r\n    return await Promise.all(\r\n      array.map((stat: Players_Stats_V2) => ({\r\n        ...stat,\r\n        games_played: Number(stat.games_played),\r\n        goals: Number(stat.goals),\r\n        assists: Number(stat.assists),\r\n        points: Number(stat.points),\r\n        plus_minus: Number(stat.plus_minus),\r\n        penalty_minutes: Number(stat.penalty_minutes),\r\n        pp_goals: Number(stat.pp_goals),\r\n        sh_goals: Number(stat.sh_goals),\r\n        gw_goals: Number(stat.gw_goals),\r\n        gt_goals: Number(stat.gt_goals),\r\n        shots: Number(stat.shots),\r\n        shooting_pct: Number(stat.shooting_pct),\r\n        minutes_played: Number(stat.minutes_played),\r\n        minutes_per_game: Number(stat.minutes_per_game),\r\n        fo_pct: Number(stat.fo_pct),\r\n        pass_pct: Number(stat.pass_pct),\r\n        corner_pct: Number(stat.corner_pct),\r\n        hits: Number(stat.hits),\r\n        blocked_shots: Number(stat.blocked_shots),\r\n      }))\r\n    );\r\n  }\r\n}\r\n","export * from './api-player-leaders-stats.service';\r\nexport * from './api-player-stats.service';\r\n","export * from './lib/api-salaries.module';","import {\n  Goalies_Stats_V2,\n  Goalie_Ratings_V2,\n  Players_Stats_V2,\n  Players_V2,\n  Player_Ratings_V2,\n  Salaries_V2,\n  Teams_V2,\n} from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { SalariesController } from './controllers';\nimport { SalariesMiddleware } from './middlewares';\nimport { ApiSalariesService } from './services';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      Players_Stats_V2,\n      Teams_V2,\n      Salaries_V2,\n      Player_Ratings_V2,\n      Goalie_Ratings_V2,\n      Goalies_Stats_V2,\n      Players_V2,\n    ]),\n  ],\n  controllers: [SalariesController],\n  providers: [ApiSalariesService],\n})\nexport class ApiSalariesModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(SalariesMiddleware).forRoutes('*');\n  }\n}\n","export * from './salaries.controller';\r\n","import { Controller, Get, NotFoundException, Param } from '@nestjs/common';\nimport { ApiSalariesService } from '../services';\n\n@Controller('salaries')\nexport class SalariesController {\n  constructor(private salariesService: ApiSalariesService) {}\n\n  @Get('/all/players/:season')\n  async getAllPlayerSalaries(@Param() param): Promise<any[]> {\n    const salaries = await this.salariesService.getAllPlayerSalaries(param.season);\n\n    if (!salaries) {\n      throw new NotFoundException('Player Salaries not found');\n    }\n    return salaries;\n  }\n\n  @Get('/all/goalies/:season')\n  async getAllGoaliesSalaries(@Param() param): Promise<any[]> {\n    const salaries = await this.salariesService.getAllGoaliesSalaries(param.season);\n\n    if (!salaries) {\n      throw new NotFoundException('Goalie Salaries not found');\n    }\n    return salaries;\n  }\n}\n","export * from './salaries.middleware';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class SalariesMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Salaries...');\r\n    next();\r\n  }\r\n}\r\n","import {\r\n  Goalies_Stats_V2,\r\n  Goalie_Ratings_V2,\r\n  Players_Stats_V2,\r\n  Players_V2,\r\n  Player_Ratings_V2,\r\n  Salaries_V2,\r\n  Teams_V2,\r\n} from '@api/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiSalariesService {\r\n  constructor(\r\n    @InjectRepository(Salaries_V2)\r\n    private repo: Repository<Salaries_V2>,\r\n    @InjectRepository(Teams_V2)\r\n    private teamsRepo: Repository<Teams_V2>,\r\n    @InjectRepository(Players_V2)\r\n    private playersRepo: Repository<Players_V2>,\r\n    @InjectRepository(Players_Stats_V2)\r\n    private playersStatsRepo: Repository<Players_Stats_V2>,\r\n    @InjectRepository(Player_Ratings_V2)\r\n    private playerRatingsRepo: Repository<Player_Ratings_V2>,\r\n    @InjectRepository(Goalies_Stats_V2)\r\n    private goaliesStatsRepo: Repository<Goalies_Stats_V2>,\r\n    @InjectRepository(Goalie_Ratings_V2)\r\n    private goalieRatingsRepo: Repository<Goalie_Ratings_V2>\r\n  ) {}\r\n\r\n  async getAllPlayerSalaries(season: string) {\r\n    const allPlayersInSeason = await this.playersStatsRepo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        player_id: {\r\n          id: true,\r\n        },\r\n      },\r\n      where: {\r\n        player_id: {\r\n          isgoalie: false,\r\n        },\r\n        season_type: 'Regular',\r\n        playing_year: season,\r\n      },\r\n    });\r\n\r\n    const allSalariesForPlayersInSeason = await this.setPlayersSalaries(\r\n      allPlayersInSeason\r\n    );\r\n\r\n    const allSalariesAndRatingsForPlayersInSeason = await this.setPlayerRating(\r\n      allSalariesForPlayersInSeason,\r\n      season\r\n    );\r\n\r\n    const allSalariesAndRatingsForPlayersInSeasonWithTeamInfo =\r\n      await this.setTeamInfo(allSalariesAndRatingsForPlayersInSeason);\r\n\r\n    return allSalariesAndRatingsForPlayersInSeasonWithTeamInfo;\r\n  }\r\n\r\n  async getAllGoaliesSalaries(season: string) {\r\n    const allGoaliesInSeason = await this.goaliesStatsRepo.find({\r\n      select: {\r\n        id: true,\r\n        team_name: true,\r\n        player_id: {\r\n          id: true,\r\n        },\r\n      },\r\n      where: {\r\n        player_id: {\r\n          isgoalie: true,\r\n        },\r\n        season_type: 'Regular',\r\n        playing_year: season,\r\n      },\r\n    });\r\n\r\n    const allSalariesForGoaliesInSeason = await this.setPlayersSalaries(\r\n      allGoaliesInSeason\r\n    );\r\n\r\n    const allSalariesAndRatingsForGoaliesInSeason = await this.setGoalieRating(\r\n      allSalariesForGoaliesInSeason,\r\n      season\r\n    );\r\n\r\n    const allSalariesAndRatingsForGoaliesInSeasonWithTeamInfo =\r\n      await this.setTeamInfo(allSalariesAndRatingsForGoaliesInSeason);\r\n\r\n    return allSalariesAndRatingsForGoaliesInSeasonWithTeamInfo;\r\n  }\r\n\r\n  private async setPlayersSalaries(array: any[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        salaries: await this.getSalary(item.player_id.id),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getSalary(playerId: number) {\r\n    return await this.repo.findOne({\r\n      select: {\r\n        id: true,\r\n        player_id: true,\r\n        season_2022: true,\r\n        season_2023: true,\r\n        season_2024: true,\r\n        season_2025: true,\r\n      },\r\n      where: {\r\n        player_id: playerId.toString(),\r\n      },\r\n    });\r\n  }\r\n\r\n  private async setPlayerRating(array: any[], season: string) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        ratings: await this.getPlayerRating(item.player_id.id, season),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async setGoalieRating(array: any[], season: string) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        ratings: await this.getGoalieRating(item.player_id.id, season),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getGoalieRating(playerId: number, season: string) {\r\n    return await this.goalieRatingsRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        passing: true,\r\n        speed: true,\r\n        skating: true,\r\n      },\r\n      where: {\r\n        player_id: playerId,\r\n        playing_year: season,\r\n      },\r\n    });\r\n  }\r\n\r\n  private async getPlayerRating(playerId: number, season: string) {\r\n    return await this.playerRatingsRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        c_rate: true,\r\n        l_rate: true,\r\n        r_rate: true,\r\n        ld_rate: true,\r\n        rd_rate: true,\r\n        skating: true,\r\n        speed: true,\r\n        passing: true,\r\n        shooting: true,\r\n        face_off: true,\r\n        forecheck: true,\r\n        assist_rating: true,\r\n        clear_crease: true,\r\n        shot_block: true,\r\n        pk: true,\r\n        physical: true,\r\n        rock: true,\r\n        intimidation: true,\r\n        game_fatigue: true,\r\n        shift_fatigue: true,\r\n      },\r\n      where: {\r\n        player_id: playerId,\r\n        playing_year: season,\r\n      },\r\n    });\r\n  }\r\n\r\n  private async setTeamInfo(array: any[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        teamInfo: await this.getTeamInfo(item.team_name),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getTeamInfo(teamName: string) {\r\n    if (teamName) {\r\n      return await this.teamsRepo.findOne({\r\n        select: {\r\n          id: true,\r\n          city: true,\r\n          teamlogo: true,\r\n          nickname: true,\r\n        },\r\n        where: {\r\n          shortname: teamName,\r\n        },\r\n      });\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n","export * from './api-salaries.service';\r\n","export * from './lib/api-schedule.module';\n","import { Schedule_V2, Teams_V2, Team_Stats_V2 } from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ScheduleController } from './controllers';\nimport { ScheduleMiddleware } from './middlewares';\nimport { ApiScheduleService } from './services';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Schedule_V2, Teams_V2, Team_Stats_V2])],\n  controllers: [ScheduleController],\n  providers: [ApiScheduleService],\n})\nexport class ApiScheduleModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(ScheduleMiddleware).forRoutes('*');\n  }\n}\n","export * from './schedule.controller';\r\n","import { ScheduleAllDto } from '@cha/shared/entities';\nimport { Controller, Get, NotFoundException, Param } from '@nestjs/common';\nimport { ApiScheduleService } from '../services';\n\n@Controller('schedule')\nexport class ScheduleController {\n  constructor(private scheduleService: ApiScheduleService) {}\n\n  @Get('/:season')\n  async getCompleteScheduleBySeason(@Param() param): Promise<ScheduleAllDto[]> {\n    const stats = await this.scheduleService.getCompleteScheduleBySeason(\n      param.season\n    );\n\n    if (!stats || stats.length < 1) {\n      throw new NotFoundException('Player Leader Stats not found');\n    }\n    return stats;\n  }\n\n  @Get('/next/:season/:currentDay')\n  async getNextDays(@Param() param): Promise<any[]> {\n    const stats = await this.scheduleService.getNextDays(\n      param.season,\n      Number(param.currentDay)\n    );\n\n    if (!stats || stats.length < 1) {\n      throw new NotFoundException('Player Leader Stats not found');\n    }\n    return stats;\n  }\n}\n","export * from './schedule.middleware';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class ScheduleMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Schedule...');\r\n    next();\r\n  }\r\n}\r\n","import { Schedule_V2, Teams_V2, Team_Stats_V2 } from '@api/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Between, Brackets, Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiScheduleService {\r\n  constructor(\r\n    @InjectRepository(Schedule_V2)\r\n    private repo: Repository<Schedule_V2>,\r\n    @InjectRepository(Teams_V2)\r\n    private teamInfoRepo: Repository<Teams_V2>,\r\n    @InjectRepository(Team_Stats_V2)\r\n    private teamStatsRepo: Repository<Team_Stats_V2>\r\n  ) {}\r\n\r\n  async getCompleteScheduleBySeason(season: string) {\r\n    const schedule = await this.repo.find({\r\n      where: {\r\n        playing_year: season,\r\n      },\r\n      order: {\r\n        game_day: 'ASC',\r\n      },\r\n    });\r\n\r\n    const scheduleTeamInfo = await this.setTeamInfo(schedule);\r\n\r\n    return scheduleTeamInfo;\r\n  }\r\n\r\n  async getNextDays(season: string, currentDay: number) {\r\n    const schedule = await this.repo.find({\r\n      where: {\r\n        playing_year: season,\r\n        game_day: Between(currentDay, currentDay + 4),\r\n      },\r\n      order: {\r\n        game_day: 'ASC',\r\n      },\r\n    });\r\n\r\n    const scheduleTeamInfo = await this.setTeamNextInfo(schedule);\r\n\r\n    return scheduleTeamInfo;\r\n  }\r\n\r\n  private async getTeamLastFive(teamId: number, season: string) {\r\n    const lastFive = await this.repo\r\n      .createQueryBuilder('schedule')\r\n      .where('schedule.playing_year = :year', { year: season })\r\n      .andWhere(\r\n        new Brackets((qb) => {\r\n          qb.where('schedule.home_team_id = :teamId', { teamId }).orWhere(\r\n            'schedule.vis_team_id = :teamId',\r\n            { teamId }\r\n          );\r\n        })\r\n      )\r\n      .orderBy('schedule.game_day', 'DESC')\r\n      .limit(5)\r\n      .getMany();\r\n\r\n    return await this.getLastFiveRecord(lastFive, teamId);\r\n  }\r\n\r\n  private async getLastFiveRecord(lastFive: Schedule_V2[], teamId: number) {\r\n    const lastFiveRecord = [];\r\n\r\n    await lastFive.forEach((record: Schedule_V2) => {\r\n      if (record.home_team_id === teamId) {\r\n        if (record.home_team_score > record.vis_team_score) {\r\n          lastFiveRecord.push('W');\r\n        } else if (record.home_team_score < record.vis_team_score) {\r\n          lastFiveRecord.push('L');\r\n        } else {\r\n          lastFiveRecord.push('T');\r\n        }\r\n      } else {\r\n        if (record.vis_team_score > record.home_team_score) {\r\n          lastFiveRecord.push('W');\r\n        } else if (record.vis_team_score < record.home_team_score) {\r\n          lastFiveRecord.push('L');\r\n        } else {\r\n          lastFiveRecord.push('T');\r\n        }\r\n      }\r\n    });\r\n\r\n    return lastFiveRecord;\r\n  }\r\n\r\n  private async getVersusRecord(data: Schedule_V2[], teamId: number) {\r\n    let wins = 0;\r\n    let loss = 0;\r\n    let ties = 0;\r\n\r\n    await data.forEach((game: Schedule_V2) => {\r\n      if (game.vis_team_id === teamId) {\r\n        game.vis_team_score > game.home_team_score\r\n          ? wins++\r\n          : game.vis_team_score === game.home_team_score\r\n          ? ties++\r\n          : loss++;\r\n      } else if (game.home_team_id === teamId) {\r\n        game.home_team_score > game.vis_team_score\r\n          ? wins++\r\n          : game.home_team_score === game.vis_team_score\r\n          ? ties++\r\n          : loss++;\r\n      }\r\n    });\r\n\r\n    return {\r\n      wins,\r\n      loss,\r\n      ties,\r\n    };\r\n  }\r\n\r\n  private async setTeamNextInfo(array: Schedule_V2[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        id: item.id,\r\n        gameDay: item.game_day,\r\n        visTeamScore: item.vis_team_score,\r\n        visTeamInfo: await this.getTeamInfo(item.vis_team_id),\r\n        visTeamLastFive: await this.getTeamLastFive(\r\n          item.vis_team_id,\r\n          item.playing_year\r\n        ),\r\n        visTeamRecord: await this.getTeamSeasonRecord(\r\n          item.vis_team_id,\r\n          item.playing_year\r\n        ),\r\n        visTeamVersus: await this.getTeamRecordVersus(\r\n          item.vis_team_id,\r\n          item.home_team_id,\r\n          item.playing_year\r\n        ),\r\n        homeTeamScore: item.home_team_score,\r\n        homeTeamInfo: await this.getTeamInfo(item.home_team_id),\r\n        homeTeamLastFive: await this.getTeamLastFive(\r\n          item.home_team_id,\r\n          item.playing_year\r\n        ),\r\n        homeTeamRecord: await this.getTeamSeasonRecord(\r\n          item.home_team_id,\r\n          item.playing_year\r\n        ),\r\n        homeTeamVersus: await this.getTeamRecordVersus(\r\n          item.home_team_id,\r\n          item.vis_team_id,\r\n          item.playing_year\r\n        ),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async setTeamInfo(array: Schedule_V2[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        visTeamInfo: await this.getTeamInfo(item.vis_team_id),\r\n        homeTeamInfo: await this.getTeamInfo(item.home_team_id),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getTeamRecordVersus(\r\n    teamOneId: number,\r\n    teamTwoId: number,\r\n    season: string\r\n  ) {\r\n    const versus = await this.repo\r\n      .createQueryBuilder('schedule')\r\n      .where('schedule.playing_year = :year', { year: season })\r\n      .where(\r\n        new Brackets((qb) => {\r\n          qb.where('schedule.vis_team_id = :teamOneId', { teamOneId })\r\n            .andWhere('schedule.home_team_id = :teamTwoId', { teamTwoId })\r\n            .andWhere('schedule.playing_year = :year', { year: season })\r\n            .andWhere('schedule.vis_team_score >= :empty', { empty: 0 });\r\n        })\r\n      )\r\n      .orWhere(\r\n        new Brackets((qb) => {\r\n          qb.where('schedule.vis_team_id = :teamTwoId', { teamTwoId })\r\n            .andWhere('schedule.home_team_id = :teamOneId', { teamOneId })\r\n            .andWhere('schedule.playing_year = :year', { year: season })\r\n            .andWhere('schedule.vis_team_score >= :empty', { empty: 0 });\r\n        })\r\n      )\r\n      .getMany();\r\n\r\n    return await this.getVersusRecord(versus, teamOneId);\r\n  }\r\n\r\n  private async getTeamSeasonRecord(teamId: number, season: string) {\r\n    return await this.teamStatsRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        wins: true,\r\n        loss: true,\r\n        ties: true,\r\n      },\r\n      where: {\r\n        team_id: {\r\n          id: teamId,\r\n        },\r\n        playing_year: season,\r\n        season_type: 'Regular',\r\n      },\r\n    });\r\n  }\r\n\r\n  private async getTeamInfo(teamId: number) {\r\n    return await this.teamInfoRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        city: true,\r\n        teamlogo: true,\r\n        nickname: true,\r\n        teamcolor: true,\r\n      },\r\n      where: {\r\n        id: teamId,\r\n      },\r\n    });\r\n  }\r\n}\r\n","export * from './api-schedule.service';","export * from './lib/api-team-stats.module';","import { Team_Stats_V2, Teams_V2, Conferences_V2 } from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { TeamStatsController } from './controllers';\nimport { TeamStatsMiddleware } from './middlewares';\nimport { ApiAllTimeTeamStatsService, ApiTeamStatsService } from './services';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Team_Stats_V2, Teams_V2, Conferences_V2]),\n  ],\n  controllers: [TeamStatsController],\n  providers: [ApiTeamStatsService, ApiAllTimeTeamStatsService],\n})\nexport class ApiTeamStatsModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(TeamStatsMiddleware).forRoutes('*');\n  }\n}\n","export * from './team-stats.controller';\r\n","import { Team_Stats_V2 } from '@api/entities';\nimport { Controller, Get, NotFoundException, Param } from '@nestjs/common';\nimport { ApiAllTimeTeamStatsService, ApiTeamStatsService } from '../services';\n\n@Controller('team-stats')\nexport class TeamStatsController {\n  constructor(\n    private teamsStatsService: ApiTeamStatsService,\n    private allTimeTeamsStatsService: ApiAllTimeTeamStatsService\n  ) {}\n\n  @Get('/:season/:seasonType')\n  async getTeamStatsBySeasonByType(@Param() param): Promise<Team_Stats_V2[]> {\n    const stats = await this.teamsStatsService.getTeamStatsBySeasonByType(\n      param.season,\n      param.seasonType\n    );\n\n    if (!stats || stats.length < 1) {\n      throw new NotFoundException('Team Stats not found');\n    }\n    return stats;\n  }\n\n  @Get('/all/:season/:seasonType')\n  async getAllTeamStatsBySeasonByType(\n    @Param() param\n  ): Promise<Team_Stats_V2[]> {\n    const stats = await this.teamsStatsService.getAllTeamStatsBySeasonByType(\n      param.season,\n      param.seasonType\n    );\n\n    if (!stats || stats.length < 1) {\n      throw new NotFoundException('Team Stats not found');\n    }\n    return stats;\n  }\n\n  @Get('/playoffs/:season/:seasonType')\n  async getTeamStandingsForPlayoffs(@Param() param): Promise<Team_Stats_V2[]> {\n    const stats = await this.teamsStatsService.getTeamStandingsForPlayoffs(\n      param.season,\n      param.seasonType\n    );\n\n    if (!stats || stats.length < 1) {\n      throw new NotFoundException('Team Stats not found');\n    }\n    return stats;\n  }\n\n  @Get('/all/history/:seasonType')\n  async getAllTimeTeamStatsBySeasonByType(\n    @Param() param\n  ): Promise<Team_Stats_V2[]> {\n    const stats =\n      await this.allTimeTeamsStatsService.getAllTimeTeamStatsBySeasonByType(\n        param.seasonType\n      );\n\n    if (!stats || stats.length < 1) {\n      throw new NotFoundException('Team Stats not found');\n    }\n    return stats;\n  }\n}\n","export * from './team-stats.middleware';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class TeamStatsMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Team Stats...');\r\n    next();\r\n  }\r\n}\r\n","import { Team_Stats_V2 } from '@api/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiAllTimeTeamStatsService {\r\n  constructor(\r\n    @InjectRepository(Team_Stats_V2)\r\n    private repo: Repository<Team_Stats_V2>\r\n  ) {}\r\n\r\n  async getAllTimeTeamStatsBySeasonByType(\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ): Promise<Team_Stats_V2[]> {\r\n    return await this.repo.find({\r\n      relations: ['team_id'],\r\n      select: {\r\n        team_id: {\r\n          id: true,\r\n          city: true,\r\n          teamlogo: true,\r\n          shortname: true,\r\n          nickname: true,\r\n        },\r\n        games_played: true,\r\n        points: true,\r\n        wins: true,\r\n        loss: true,\r\n        ties: true,\r\n        long_win_streak: true,\r\n        penalty_minutes: true,\r\n        goals_for: true,\r\n        goals_against: true,\r\n        pk_goals: true,\r\n        pk_attempts: true,\r\n        pp_goals: true,\r\n        pp_attempts: true,\r\n        trail_after_two_loss: true,\r\n        trail_after_two_ties: true,\r\n        trail_after_two_wins: true,\r\n        home_loss: true,\r\n        home_ties: true,\r\n        home_wins: true,\r\n        road_loss: true,\r\n        road_ties: true,\r\n        road_wins: true,\r\n        div_loss: true,\r\n        div_tie: true,\r\n        div_win: true,\r\n        shots_for: true,\r\n        shots_against: true,\r\n        sh_goals: true,\r\n        playing_year: true,\r\n        season_type: true,\r\n        shut_outs: true,\r\n      },\r\n      where: {\r\n        season_type: seasonType,\r\n      },\r\n      order: {\r\n        points: 'DESC',\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Conferences_V2, Team_Stats_V2 } from '@api/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiTeamStatsService {\r\n  constructor(\r\n    @InjectRepository(Team_Stats_V2)\r\n    private repo: Repository<Team_Stats_V2>,\r\n    @InjectRepository(Conferences_V2)\r\n    private conferencesRepo: Repository<Conferences_V2>\r\n  ) {}\r\n\r\n  async getTeamStatsBySeasonByType(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ): Promise<Team_Stats_V2[]> {\r\n    return await this.repo.find({\r\n      relations: ['team_id'],\r\n      select: {\r\n        team_id: {\r\n          id: true,\r\n          city: true,\r\n          teamlogo: true,\r\n          shortname: true,\r\n          nickname: true,\r\n        },\r\n        games_played: true,\r\n        points: true,\r\n        wins: true,\r\n        loss: true,\r\n        ties: true,\r\n        long_win_streak: true,\r\n        penalty_minutes: true,\r\n        goals_for: true,\r\n        goals_against: true,\r\n        pk_goals: true,\r\n        pk_attempts: true,\r\n        pp_goals: true,\r\n        pp_attempts: true,\r\n      },\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n    });\r\n  }\r\n\r\n  async getAllTeamStatsBySeasonByType(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ): Promise<Team_Stats_V2[]> {\r\n    const teamStats = await this.repo.find({\r\n      relations: ['team_id'],\r\n      select: {\r\n        team_id: {\r\n          id: true,\r\n          city: true,\r\n          teamlogo: true,\r\n          shortname: true,\r\n          nickname: true,\r\n          divisions_id: {\r\n            id: true,\r\n            divisionname: true,\r\n            conference_id: true,\r\n          },\r\n        },\r\n        div_loss: true,\r\n        div_tie: true,\r\n        div_win: true,\r\n        games_played: true,\r\n        goals_against: true,\r\n        goals_for: true,\r\n        home_loss: true,\r\n        home_ties: true,\r\n        home_wins: true,\r\n        loss: true,\r\n        penalty_minutes: true,\r\n        pk_attempts: true,\r\n        pk_goals: true,\r\n        pk_min: true,\r\n        playing_year: true,\r\n        points: true,\r\n        pp_attempts: true,\r\n        pp_goals: true,\r\n        road_loss: true,\r\n        road_ties: true,\r\n        road_wins: true,\r\n        season_type: true,\r\n        ties: true,\r\n        trail_after_two_loss: true,\r\n        trail_after_two_ties: true,\r\n        trail_after_two_wins: true,\r\n        wins: true,\r\n      },\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n    });\r\n\r\n    const teamStatsWithConference = await this.setConferenceInfo(teamStats);\r\n\r\n    return teamStatsWithConference;\r\n  }\r\n\r\n  async getTeamStandingsForPlayoffs(\r\n    season: string,\r\n    seasonType: 'Regular' | 'Playoffs'\r\n  ): Promise<Team_Stats_V2[]> {\r\n    const teamStats = await this.repo.find({\r\n      relations: ['team_id'],\r\n      select: {\r\n        team_id: {\r\n          id: true,\r\n          city: true,\r\n          teamlogo: true,\r\n          teamcolor: true,\r\n          shortname: true,\r\n          nickname: true,\r\n          divisions_id: {\r\n            id: true,\r\n            divisionname: true,\r\n            conference_id: true,\r\n          },\r\n        },\r\n        goals_against: true,\r\n        goals_for: true,\r\n        playing_year: true,\r\n        points: true,\r\n        season_type: true,\r\n        wins: true,\r\n      },\r\n      where: {\r\n        playing_year: season,\r\n        season_type: seasonType,\r\n      },\r\n    });\r\n\r\n    const teamStatsWithConference = await this.setConferenceInfo(teamStats);\r\n\r\n    const teamStatsWithConferenceSorted = await this.sortTeamStatsByStandings(\r\n      teamStatsWithConference\r\n    );\r\n\r\n    return teamStatsWithConferenceSorted;\r\n  }\r\n\r\n  private async setConferenceInfo(array: Team_Stats_V2[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        conference: await this.getConferenceInfo(\r\n          item.team_id.divisions_id.conference_id\r\n        ),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getConferenceInfo(conferenceId: number) {\r\n    return await this.conferencesRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        conferencename: true,\r\n      },\r\n      where: {\r\n        id: conferenceId,\r\n      },\r\n    });\r\n  }\r\n\r\n  private sortTeamStatsByStandings = (data) => {\r\n    return data\r\n      .sort((a: any, b: any) => {\r\n        if (b.points === a.points) {\r\n          if (b.wins === a.wins) {\r\n            if (\r\n              b.goals_for - b.goals_against ===\r\n              a.goals_for - a.goals_against\r\n            ) {\r\n              return b.goals_for - a.goals_for;\r\n            } else {\r\n              return (\r\n                b.goals_for - b.goals_against - (a.goals_for - a.goals_against)\r\n              );\r\n            }\r\n          } else {\r\n            return b.wins - a.wins;\r\n          }\r\n        } else {\r\n          return b.points - a.points;\r\n        }\r\n      });\r\n  };\r\n}\r\n","export * from './api-team-stats.service';\r\nexport * from './api-all-time-team-stats.service';\r\n","export * from './lib/api-teams.module';\n","import { Teams_V2 } from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { TeamsController } from './controllers';\nimport { TeamsMiddleware } from './middlewares/teams.middleware';\nimport { TeamsService } from './services';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Teams_V2])],\n  controllers: [TeamsController],\n  providers: [TeamsService],\n})\nexport class ApiTeamsModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(TeamsMiddleware).forRoutes('*');\n  }\n}\n","export * from './teams.controller';\r\n","import { TeamDto } from '@cha/shared/entities';\nimport { Controller, Get, NotFoundException, Param } from '@nestjs/common';\nimport { TeamsService } from '../services';\n\n@Controller('teams')\nexport class TeamsController {\n  constructor(private teamsService: TeamsService) {}\n\n  @Get('/user/:id')\n  async getUserTeams(@Param() param): Promise<TeamDto[]> {\n    const teams = await this.teamsService.getUserTeams(parseInt(param.id));\n\n    if (!teams || teams.length < 1) {\n      throw new NotFoundException('User Teams not found');\n    }\n    return teams;\n  }\n\n  @Get('/current')\n  async getCurrentTeams(): Promise<TeamDto[]> {\n    const teams = await this.teamsService.getCurrentTeams();\n\n    if (!teams || teams.length < 1) {\n      throw new NotFoundException('No Current Teams found');\n    }\n    return teams;\n  }\n}\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class TeamsMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Teams...');\r\n    next();\r\n  }\r\n}","export * from './teams.service';\r\n","import { Teams_V2 } from '@api/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class TeamsService {\r\n  constructor(@InjectRepository(Teams_V2) private repo: Repository<Teams_V2>) {}\r\n\r\n  async getUserTeams(id: number): Promise<Teams_V2[]> {\r\n    return await this.repo.findBy({ users_id: id });\r\n  }\r\n\r\n  async getCurrentTeams(): Promise<Teams_V2[]> {\r\n    return await this.repo.findBy({ isactive: true });\r\n  }\r\n}\r\n","export * from './lib/api-transactions.module';\n","import { Players_V2, Teams_V2, Transactions_V2 } from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { TransactionsController } from './controllers';\nimport { TransactionsMiddleware } from './middlewares';\nimport { ApiTransactionsService } from './services';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Transactions_V2, Teams_V2, Players_V2])],\n  controllers: [TransactionsController],\n  providers: [ApiTransactionsService],\n})\nexport class ApiTransactionsModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(TransactionsMiddleware).forRoutes('*');\n  }\n}\n","export * from './transactions.controller';\r\n","import { Controller, Get, NotFoundException, Param } from '@nestjs/common';\nimport { ApiTransactionsService } from '../services';\n\n@Controller('transactions')\nexport class TransactionsController {\n  constructor(private transactionsService: ApiTransactionsService) {}\n\n  @Get('/:season')\n  async getTransactionsBySeason(@Param() param): Promise<any[]> {\n    const stats = await this.transactionsService.getTransactionsBySeason(\n      param.season\n    );\n\n    if (!stats || stats.length < 1) {\n      throw new NotFoundException('Transactions not found');\n    }\n    return stats;\n  }\n}\n","export * from './transactions.middleware';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class TransactionsMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Transactions...');\r\n    next();\r\n  }\r\n}\r\n","import { Players_V2, Teams_V2, Transactions_V2 } from '@api/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Between, Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiTransactionsService {\r\n  constructor(\r\n    @InjectRepository(Transactions_V2)\r\n    private repo: Repository<Transactions_V2>,\r\n    @InjectRepository(Teams_V2)\r\n    private teamInfoRepo: Repository<Teams_V2>,\r\n    @InjectRepository(Players_V2)\r\n    private playersRepo: Repository<Players_V2>\r\n  ) {}\r\n\r\n  async getTransactionsBySeason(year: string) {\r\n    const season = this.findSeasonDates(year);\r\n\r\n    const transactions = await this.repo.find({\r\n      where: {\r\n        transaction_date: Between(new Date(season.start), new Date(season.end)),\r\n      },\r\n      order: {\r\n        transaction_date: 'DESC',\r\n      },\r\n    });\r\n\r\n    const transactionsTeamInfo = await this.setTransactionInfo(transactions);\r\n\r\n    return transactionsTeamInfo;\r\n  }\r\n\r\n  private async setTransactionInfo(transactions: Transactions_V2[]) {\r\n    return await Promise.all(\r\n      transactions.map(async (transaction: Transactions_V2) => ({\r\n        id: transaction.id,\r\n        transactionDate: transaction.transaction_date,\r\n        teamOneInfo: await this.getTeamInfo(transaction.team_one_id),\r\n        teamOnePlayers: await this.setPlayersInfo(transaction.team_one_players),\r\n        teamOnePicks: transaction.team_one_picks,\r\n        teamTwoInfo: await this.getTeamInfo(transaction.team_two_id),\r\n        teamTwoPlayers: await this.setPlayersInfo(transaction.team_two_players),\r\n        teamTwoPicks: transaction.team_two_picks,\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async setPlayersInfo(array: number[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        player: await this.getPlayerInfo(item),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getTeamInfo(teamId: number) {\r\n    return await this.teamInfoRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        city: true,\r\n        teamlogo: true,\r\n        nickname: true,\r\n        teamcolor: true,\r\n        teamtextcolor: true,\r\n      },\r\n      where: {\r\n        id: teamId,\r\n      },\r\n    });\r\n  }\r\n\r\n  private async getPlayerInfo(playerId: number) {\r\n    return await this.playersRepo.findOne({\r\n      select: {\r\n        id: true,\r\n        firstname: true,\r\n        lastname: true,\r\n        nhl_id: true,\r\n      },\r\n      where: {\r\n        id: playerId,\r\n      },\r\n    });\r\n  }\r\n\r\n  private findSeasonDates(year: string) {\r\n    const seasons = [\r\n      { year: '23', start: '2022-06-02', end: '2023-06-01' },\r\n      { year: '22', start: '2021-07-15', end: '2022-06-01' },\r\n      { year: '21', start: '2020-04-27', end: '2021-07-15' },\r\n    ];\r\n\r\n    return seasons.find((season) => season.year === year);\r\n  }\r\n}\r\n","export * from './api-transactions.service';","export * from './lib/api-users.module';\n","import { Users_V2 } from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersController } from './controllers';\nimport { UserMiddleware } from './middlewares';\nimport { UsersService } from './services';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Users_V2])],\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class ApiUsersModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(UserMiddleware).forRoutes('*');\n  }\n}\n","export * from './users.controller';\r\n","import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  NotFoundException,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\nimport { UsersService } from '../services';\nimport { UserCreateDto, UserDto } from '@cha/shared/entities';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private usersService: UsersService) {}\n\n  @Get()\n  async getUsers(): Promise<UserDto[]> {\n    const users = await this.usersService.getAll();\n\n    if (!users || users.length < 1) {\n      throw new NotFoundException('users not found');\n    }\n    return users;\n  }\n\n  @Get('/:email')\n  async getUserByEmail(@Param() param): Promise<UserDto> {\n    const user = await this.usersService.findUserByEmail(param.email);\n    if (!user) {\n      throw new NotFoundException('user not found');\n    }\n    return user;\n  }\n\n  @Get('/userId/:id')\n  async getUserById(@Param() param): Promise<UserDto> {\n    const user = await this.usersService.findUserById(parseInt(param.id));\n    if (!user) {\n      throw new NotFoundException('user not found');\n    }\n    return user;\n  }\n\n  @Put('/userId/:id')\n  updateUserById(@Param() param, @Body() body): Promise<UserDto> {\n    return this.usersService.updateUserById(parseInt(param.id), body);\n  }\n\n  @Post('/add')\n  addUser(@Body() body: UserCreateDto) {\n    return this.usersService.addUser(body);\n  }\n\n  @Delete('/delete/:id')\n  deleteUserById(@Param() param) {\n    return this.usersService.deleteUser(parseInt(param.id));\n  }\n}\n","export * from './user.middleware';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class UserMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request User...');\r\n    next();\r\n  }\r\n}\r\n","export * from './users.service';\r\n","import { Users_V2 } from '@api/entities';\nimport { UserCreateDto } from '@cha/shared/entities';\nimport { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class UsersService {\n  constructor(@InjectRepository(Users_V2) private repo: Repository<Users_V2>) {}\n\n  async findUserByEmail(email: string): Promise<Users_V2> {\n    return await this.repo.findOneByOrFail({ email });\n  }\n\n  async getAll(): Promise<Users_V2[]> {\n    return await this.repo.find();\n  }\n\n  async findUserById(id: number): Promise<Users_V2> {\n    return await this.repo.findOneByOrFail({ id });\n  }\n\n  async updateUserById(id: number, attrs: Partial<Users_V2>) {\n    const user = await this.repo.findOneByOrFail({ id });\n\n    if (!user) {\n      throw new NotFoundException('user not found');\n    }\n\n    Object.assign(user, attrs);\n\n    return this.repo.save(user);\n  }\n\n  async addUser(body: UserCreateDto) {\n    const user = await this.repo.create(body);\n\n    return this.repo.save(user);\n  }\n\n  async deleteUser(id: number): Promise<Users_V2> {\n    const user = await this.repo.findOneByOrFail({ id });\n\n    if (!user) {\n      throw new NotFoundException('user not found');\n    }\n    return this.repo.remove(user);\n  }\n}\n","export * from './lib/api-waivers.module';\n","import { Teams_V2, Waivers_V2 } from '@api/entities';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { WaiversController } from './controllers';\nimport { WaiversMiddleware } from './middlewares';\nimport { ApiWaiversService } from './services';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Waivers_V2, Teams_V2])],\n  controllers: [WaiversController],\n  providers: [ApiWaiversService],\n})\nexport class ApiWaiversModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(WaiversMiddleware).forRoutes('*');\n  }\n}\n","export * from './waivers.controller';\r\n","import { Waivers_V2 } from '@api/entities';\nimport { Controller, Get, NotFoundException } from '@nestjs/common';\nimport { ApiWaiversService } from '../services';\n\n@Controller('waivers')\nexport class WaiversController {\n  constructor(private waiversService: ApiWaiversService) {}\n\n  @Get('/all')\n  async getAllPlayerSalaries(): Promise<Waivers_V2[]> {\n    const salaries = await this.waiversService.getWaiverPriority();\n\n    if (!salaries) {\n      throw new NotFoundException('Waivers not found');\n    }\n    return salaries;\n  }\n}\n","export * from './waivers.middleware';\r\n","import { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n@Injectable()\r\nexport class WaiversMiddleware implements NestMiddleware {\r\n  use(req: Request, res: Response, next: NextFunction) {\r\n    console.log('Request Waivers...');\r\n    next();\r\n  }\r\n}\r\n","import { Teams_V2, Waivers_V2 } from '@api/entities';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class ApiWaiversService {\r\n  constructor(\r\n    @InjectRepository(Waivers_V2)\r\n    private repo: Repository<Waivers_V2>,\r\n    @InjectRepository(Teams_V2)\r\n    private teamsRepo: Repository<Teams_V2>\r\n  ) {}\r\n\r\n  async getWaiverPriority() {\r\n    const allWaivers = await this.repo.find();\r\n\r\n    const allWaiverWithTeamInfo = await this.setTeamInfo(allWaivers);\r\n\r\n    return allWaiverWithTeamInfo;\r\n  }\r\n\r\n  private async setTeamInfo(array: any[]) {\r\n    return await Promise.all(\r\n      array.map(async (item) => ({\r\n        ...item,\r\n        teamInfo: await this.getTeamInfo(item.team_id),\r\n      }))\r\n    );\r\n  }\r\n\r\n  private async getTeamInfo(teamId: number) {\r\n    if (teamId) {\r\n      return await this.teamsRepo.findOne({\r\n        select: {\r\n          id: true,\r\n          city: true,\r\n          teamlogo: true,\r\n          nickname: true,\r\n        },\r\n        where: {\r\n          id: teamId,\r\n        },\r\n      });\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n","export * from './api-waivers.service';\r\n","export * from './lib/dtos';\n\nexport * from './lib/enums';\n\nexport * from './lib/models';\n","export * from './award.dto';\r\nexport * from './award-stats.dto';\r\nexport * from './award-award-type.dto';\r\n","export * from './draft-table-stat.dto';\r\nexport * from './draft-table.dto';\r\nexport * from './draft-pick.dto';\r\n","export * from './user';\r\nexport * from './teams';\r\nexport * from './league';\r\nexport * from './awards';\r\nexport * from './player';\r\nexport * from './drafts';\r\nexport * from './nhl';\r\nexport * from './stats';\r\nexport * from './schedule';\r\nexport * from './transactions';\r\nexport * from './salaries';\r\nexport * from './waivers';\r\n","export * from './leagueData.dto';\r\n","export * from './nhl-leaders.dto';\r\nexport * from './nhl-player.dto';\r\nexport * from './nhl-goalie-stat.dto';\r\nexport * from './nhl-player-stat.dto';\r\n","export * from './player.dto';\r\n","export * from './goalie-rating.dto';\r\nexport * from './player-rating.dto';\r\nexport * from './salaries-and-ratings.dto';\r\n","export * from './schedule-all.dto';\r\nexport * from './games.dto';\r\n","export * from './stat-team.dto';\r\nexport * from './stat-player-leader.dto';\r\nexport * from './stat-player-leaders.dto';\r\nexport * from './stat-goalie-leader.dto';\r\nexport * from './stat-goalie-leaders.dto';\r\nexport * from './stat-team-all.dto';\r\nexport * from './stat-player-all.dto';\r\nexport * from './stat-goalie-all.dto';\r\nexport * from './stat-team-playoffs.dto';\r\n","export * from './team.dto';\r\n","export * from './get-transaction.dto';\r\n","export * from './user.dto';\r\nexport * from './user.create.dto';\r\n","export class UserCreateDto {\r\n  firstname!: string;\r\n  lastname!: string;\r\n  email!: string;\r\n  isadmin!: boolean;\r\n  isactive!: boolean;\r\n}\r\n","export class UserDto {\r\n  id!: number;\r\n  email!: string;\r\n  firstname!: string;\r\n  lastname!: string;\r\n  isactive!: boolean;\r\n  isadmin!: boolean;\r\n  authdata?: string;\r\n}\r\n","export * from './waivers.dto';","export enum AwardTypeEnum {\r\n  GM = 2,\r\n  CHAMPION = 3,\r\n  SEASON = 4,\r\n  ROOKIE = 5,\r\n  SCORER = 6,\r\n  GOALIE = 7,\r\n  DEFENSE = 8,\r\n}\r\n","export * from './awardType.enum';\r\n","export * from './primeButtonClass.enum';\r\n","export enum PrimeButtonClass {\r\n  PRIMARY = '',\r\n  SECONDARY = 'p-button-secondary',\r\n  SUCCESS = 'p-button-success',\r\n  INFO = 'p-button-info',\r\n  WARNING = 'p-button-warning',\r\n  HELP = 'p-button-help',\r\n  DANGER = 'p-button-danger',\r\n}\r\n","export * from './button';\r\nexport * from './logo';\r\nexport * from './teams';\r\nexport * from './award';\r\nexport * from './league';\r\n","export enum ConferencesEnum {\r\n  EASTERN = 2,\r\n  WESTERN = 3,\r\n}\r\n","export enum DivisionsEnum {\r\n  NORTH_WEST = 2,\r\n  NORTH_EAST = 3,\r\n  SOUTH_WEST = 4,\r\n  SOUTH_EAST = 5,\r\n}\r\n","export * from './conferences.enum';\r\nexport * from './divisions.enum';","export enum ChaLogoEnum {\r\n  ASSASSINS = 'Assassins.png',\r\n  BRAHMAS = 'Brahams.png',\r\n  FIGHTING_COCKS = 'Cocks.png',\r\n  CYCLONES = 'Cyclones.png',\r\n  CHY_DESPERADO = 'Desperado.png',\r\n  DRAGONS = 'Dragons.png',\r\n  FLASHERS = 'Flashers.png',\r\n  FREE_AGENT = 'free_agent.png',\r\n  GLORY = 'Glory.png',\r\n  GOATS = 'Goats.png',\r\n  GREEN_JACKETS = 'GreenJackets.png',\r\n  HOUND_DOGS = 'HoundDogs.png',\r\n  STELLAR_JAYS = 'jays-large.png',\r\n  KILLER_BEES = 'KillerBees.png',\r\n  MOUNTAINEERS = 'Mountaineers.png',\r\n  NORTH_STARS = 'NorthStars.png',\r\n  OIL_BARONS = 'OilBarons.png',\r\n  PROWLERS = 'Prowlers.png',\r\n  SAC_STORM = 'sac_storm.png',\r\n  VIKINGS = 'vikings.png',\r\n  WOLFPACK = 'Wolfpack.png',\r\n\r\n  ACES = 'aces.png',\r\n  BADGERS = 'badgers.png',\r\n  BANDITS = 'bandits.png',\r\n  BARONS = 'barons.png',\r\n  BEAVERS = 'beavers.png',\r\n  CHA_STORM = 'chastorm.png',\r\n  CHUPACABRAS = 'chupacabras.png',\r\n  COMETS = 'comets.png',\r\n  CONQUERERS = 'conquerers.png',\r\n  CRIMSONTIDE = 'crimsontide.png',\r\n  CRUSH = 'crush.png',\r\n  GRAVEDIGGERS = 'gravediggers.png',\r\n  HELLCATS = 'hellcats.png',\r\n  MIS_INDIANS = 'indians.png',\r\n  SAL_INDIANS = 'indians.png',\r\n  JOKERS = 'jokers.png',\r\n  LAS_DESPERADO = 'lasdesperado.png',\r\n  LIONHEARTS = 'lionheats.png',\r\n  LOGGERHEADS = 'loggerheads.png',\r\n  MUDBUGS = 'mudbugs.png',\r\n  OCEANUS = 'oceanus.png',\r\n  OUTLAWS = 'outlaws.png',\r\n  PREDATORS = 'predators.png',\r\n  RAYS = 'rays.png',\r\n  REDNECKS = 'rednecks.png',\r\n  ROYALS = 'royals.png',\r\n  SCHOONERS = 'schooners.png',\r\n  SEA_STORM = 'Storm.png',\r\n  SURGE = 'surge.png',\r\n  THUNDERCATS = 'thundercats.png',\r\n  VIPERS = 'Vipers.png',\r\n  VOODOO = 'voodoo.png',\r\n  WHISKEYJACKS = 'whiskeyjacks.png',\r\n  RUSTLERS = 'rustlers.png',\r\n\r\n  LEAGUE = 'cha_logo.jpg',\r\n}\r\n","export * from './cha-logo.enum';\r\n","export * from './team.enum';\r\n","export enum TeamsEnum {\r\n  FLASHERS = 2,\r\n  GREEN_JACKETS = 3,\r\n  CHY_DESPERADO = 4,\r\n  CYCLONES = 5,\r\n  GLORY = 6,\r\n  GOATS = 7,\r\n  MOUNTAINEERS = 8,\r\n  BRAHMAS = 9,\r\n  HOUND_DOGS = 10,\r\n  ICE_DRAGONS = 11,\r\n  NORTH_STARS = 12,\r\n  ASSASSINS = 13,\r\n  OIL_BARONS = 14,\r\n  PROWLERS = 15,\r\n  FIGHTING_COCKS = 16,\r\n  SEA_STORM = 17,\r\n  STINGRAYS = 18,\r\n  KILLER_BEES = 19,\r\n  VIPERS = 20,\r\n  WOLFPACK = 21,\r\n  MUDBUGS = 22,\r\n  CHA_STORM = 23,\r\n  SURGE = 24,\r\n  LAS_DESPERADO = 25,\r\n  OUTLAWS = 26,\r\n  OCEANUS = 27,\r\n  ACES = 28,\r\n  HONEY_BADGERS = 29,\r\n  BANDITS = 30,\r\n  BARONS = 31,\r\n  CHUPACABRAS = 32,\r\n  CONQUERERS = 33,\r\n  CRUSH = 34,\r\n  HELLCATS = 35,\r\n  MISS_INDIANS = 36,\r\n  SAL_INDIANS = 37,\r\n  JOKERS = 38,\r\n  LIONHEARTS = 39,\r\n  LOGGERHEADS = 40,\r\n  PREDATORS = 41,\r\n  REDNECKS = 42,\r\n  ROYALS = 43,\r\n  RUSTLERS = 44,\r\n  SCHOONERS = 45,\r\n  THUNDERCATS = 46,\r\n  VOODOO = 47,\r\n  WHISKEYJACKS = 48,\r\n  CRIMSONTIDE = 49,\r\n  BEAVERS = 50,\r\n  COMETS = 51,\r\n  GRAVE_DIGGERS = 52,\r\n  STELLAR_JAYS = 53,\r\n  FREE_AGENT = 54,\r\n  VIKINGS = 60,\r\n  SAC_STORM = 61,\r\n}\r\n","export * from './playoffs';\r\n","export * from './playoff-standings.model';\r\n","module.exports = require(\"@nestjs/axios\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"rxjs\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { NestExpressApplication } from '@nestjs/platform-express';\n\nimport { join } from 'path';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create<NestExpressApplication>(AppModule);\n  const globalPrefix = 'api';\n  const port = process.env.PORT || 3333;\n\n  console.log(process.env.DATABASE_URL);\n\n  app.setGlobalPrefix(globalPrefix);\n  app.useStaticAssets(join(__dirname, '..', 'public'));\n  app.setBaseViewsDir(join(__dirname, 'assets/views'));\n  app.setViewEngine('hbs');\n  app.enableCors();\n\n  app.use((req, res, next) => {\n    next();\n  });\n\n  await app.listen(port);\n  Logger.log(\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":["AppController","root","message","Get","Render","Controller","AppModule","Module","imports","ConfigModule","forRoot","isGlobal","envFilePath","TypeOrmModule","type","url","process","env","DATABASE_URL","synchronize","entities","Users_V2","Teams_V2","Award_Type_V2","Awards_V2","Draft_Order_V2","Drafts_V2","Conferences_V2","Current_Season_V2","Divisions_V2","Players_V2","Goalie_Ratings_V2","Player_Ratings_V2","Salaries_V2","Schedule_V2","Goalies_Stats_V2","Players_Stats_V2","Team_Stats_V2","Transactions_V2","Waivers_V2","ssl","rejectUnauthorized","ApiCoreModule","controllers","providers","AppService","getData","getViewName","Injectable","ApiAwardsModule","configure","consumer","apply","AwardsMiddleware","forRoutes","forFeature","AwardsController","ApiAwardsService","constructor","awardsService","getAllAwardWinners","console","log","async","champions","this","getChampions","length","NotFoundException","scorers","getScorerAwards","defense","getDefenseAwards","rookies","getRookieAwards","goalies","getGoalieAwards","gms","getGmAwards","season","getSeasonAwards","Promise","use","req","res","next","repo","playerStatsRepo","goalieStatsRepo","teamStatsRepo","selectUserOptions","id","display_season","cha_season","award_type","display_name","team_id","city","nickname","teamlogo","teamcolor","users_id","firstname","lastname","selectPlayerOptions","player_id","nhl_id","find","select","relations","where","AwardTypeEnum","CHAMPION","SCORER","setPlayerStats","DEFENSE","ROOKIE","GOALIE","setGoalieStats","GM","seasonAwards","SEASON","setSeasonStats","array","all","map","item","stats","getPlayerStats","playerId","chaSeason","findOne","playing_year","games_played","goals","assists","points","season_type","getGoalieStats","isgoalie","is_protected","isactive","isdefense","isforward","wins","goals_against_avg","save_pct","getSeasonStats","teamId","goals_for","goals_against","InjectRepository","Repository","ApiUsersModule","ApiDraftTableModule","ApiEntryDraftModule","ApiGoalieStatsModule","ApiLeagueModule","ApiNhlModule","ApiPlayerInfoModule","ApiPlayerRatingsModule","ApiPlayerStatsModule","ApiSalariesModule","ApiScheduleModule","ApiTeamStatsModule","ApiTeamsModule","ApiTransactionsModule","ApiWaiversModule","exports","DraftTableMiddleware","DraftTableController","ApiDraftTableService","draftTableService","param","draftTable","getDraftTableByYearByStandings","draft_year","Param","getDraftByStandings","data","sort","a","b","reverse","draftYear","playingYear","shortname","draftTableWithStandings","setTableStandings","getTeamStats","PrimaryGeneratedColumn","Column","Entity","OneToOne","playerStats","award","JoinColumn","name","ManyToOne","user","team","player","orderBy","Relation","eager","logInsert","logUpdate","logRemove","OneToMany","goalieStats","salary","draft","goalieRating","playerRating","AfterInsert","AfterUpdate","AfterRemove","division","Date","EntryDraftMiddleware","EntryDraftController","ApiEntryDraftService","draftService","entries","getAll","order","draft_round","draft_overall","GoalieStatsMiddleware","GoalieStatsController","ApiGoalieStatsService","ApiGoalieStatsLeadersService","goalieStatsLeadersService","goalieStatsService","getGoalieStatsLeaders","seasonType","minGames","getAllGoalieStats","stat","teamInfoRepo","shotsFaced","getShotsFacedLeaders","gaa","getGaaLeaders","savePct","getSavePctLeaders","shutouts","getShutoutLeaders","getWinsLeaders","shotsFacedLeaders","shots_for","team_name","MoreThan","Number","take","setTeamInfo","gaaLeaders","savePctLeaders","shutoutLeaders","winLeaders","teamInfo","getTeamInfo","teamName","allGoalieStats","minutes_played","loss","ties","en_goals","saves","penalty_minutes","pass_pct","goalieStatsWithTeamInfo","convertStats","LeagueMiddleware","LeagueController","LeagueService","leagueService","getCurrentLeagueData","NhlMiddleware","HttpModule","NhlController","ApiNhlService","nhlService","nhlLeaders","getNhlLeaders","playerType","statType","getNhlGoalieLeaders","getNhlRookieLeaders","getNhlDefenseLeaders","getNhlSummaryFromSportsnet","getNhlRookieSummary","statsType","start","pageSize","httpService","nhlCOM","nhlComSummary","sportsNet","get","pipe","response","HttpService","PlayerInfoController","getAllPlayers","getPlayerInfoById","getGoalieInfoById","getPlayerLogoByNhlId","getGoalieLogoByNhlId","getActivePlayers","getPlayerForEditById","updatePlayerById","body","addPlayer","deletePlayer","Put","Body","Post","Delete","PlayerRatingsController","PlayerStatsMiddleware","PlayerStatsController","ApiPlayerStatsService","ApiPlayerLeadersStatsService","playerLeaderStatsService","playerStatsService","getPlayerStatsLeaders","getAllStats","hits","getHitsLeaders","getPointsLeaders","getAssistLeaders","bestPlusMinus","getBestPlusMinusLeaders","blockedShots","getblockedShotLeaders","currStreak","getCurrSteakLeaders","getDefenseLeaders","getGoalLeaders","longStreak","getLongStreakLeaders","minutes","getMinutesLeaders","penalties","getPenaltyLeaders","ppGoals","getPpgoalsLeaders","getRookieLeaders","shGoals","getShGoalsLeaders","shots","getShotsLeaders","hitsLeaders","pointsLeaders","assistLeaders","bestPlusMinusLeaders","plus_minus","blockedShotLeaders","blocked_shots","currStreakLeaders","current_points_streak","defenseLeaders","goalLeaders","longStreakLeaders","longest_points_streak","minutesLeaders","penaltyLeaders","ppGoalsLeaders","pp_goals","rookieLeaders","player_status","shGoalsLeaders","sh_goals","shotsLeaders","allStats","position","gw_goals","gt_goals","shooting_pct","minutes_per_game","fo_pct","corner_pct","allStatsWithTeamInfo","SalariesMiddleware","SalariesController","ApiSalariesService","salariesService","salaries","getAllPlayerSalaries","getAllGoaliesSalaries","teamsRepo","playersRepo","playersStatsRepo","playerRatingsRepo","goaliesStatsRepo","goalieRatingsRepo","allPlayersInSeason","allSalariesForPlayersInSeason","setPlayersSalaries","allSalariesAndRatingsForPlayersInSeason","setPlayerRating","allGoaliesInSeason","allSalariesForGoaliesInSeason","allSalariesAndRatingsForGoaliesInSeason","setGoalieRating","getSalary","season_2022","season_2023","season_2024","season_2025","toString","ratings","getPlayerRating","getGoalieRating","passing","speed","skating","c_rate","l_rate","r_rate","ld_rate","rd_rate","shooting","face_off","forecheck","assist_rating","clear_crease","shot_block","pk","physical","rock","intimidation","game_fatigue","shift_fatigue","ScheduleMiddleware","ScheduleController","ApiScheduleService","scheduleService","getCompleteScheduleBySeason","getNextDays","currentDay","schedule","game_day","Between","setTeamNextInfo","lastFive","createQueryBuilder","year","andWhere","Brackets","qb","orWhere","limit","getMany","getLastFiveRecord","lastFiveRecord","forEach","record","home_team_id","home_team_score","vis_team_score","push","game","vis_team_id","gameDay","visTeamScore","visTeamInfo","visTeamLastFive","getTeamLastFive","visTeamRecord","getTeamSeasonRecord","visTeamVersus","getTeamRecordVersus","homeTeamScore","homeTeamInfo","homeTeamLastFive","homeTeamRecord","homeTeamVersus","teamOneId","teamTwoId","versus","empty","getVersusRecord","TeamStatsMiddleware","TeamStatsController","ApiTeamStatsService","ApiAllTimeTeamStatsService","teamsStatsService","allTimeTeamsStatsService","getTeamStatsBySeasonByType","getAllTeamStatsBySeasonByType","getTeamStandingsForPlayoffs","getAllTimeTeamStatsBySeasonByType","long_win_streak","pk_goals","pk_attempts","pp_attempts","trail_after_two_loss","trail_after_two_ties","trail_after_two_wins","home_loss","home_ties","home_wins","road_loss","road_ties","road_wins","div_loss","div_tie","div_win","shots_against","shut_outs","conferencesRepo","sortTeamStatsByStandings","teamStats","divisions_id","divisionname","conference_id","pk_min","setConferenceInfo","teamStatsWithConference","conference","getConferenceInfo","conferenceId","conferencename","TeamsMiddleware","TeamsController","TeamsService","teamsService","teams","getUserTeams","parseInt","getCurrentTeams","findBy","TransactionsMiddleware","TransactionsController","ApiTransactionsService","transactionsService","getTransactionsBySeason","findSeasonDates","transactions","transaction_date","end","setTransactionInfo","transaction","transactionDate","teamOneInfo","team_one_id","teamOnePlayers","setPlayersInfo","team_one_players","teamOnePicks","team_one_picks","teamTwoInfo","team_two_id","teamTwoPlayers","team_two_players","teamTwoPicks","team_two_picks","getPlayerInfo","teamtextcolor","UserMiddleware","UsersController","UsersService","usersService","users","findUserByEmail","email","findUserById","updateUserById","addUser","deleteUserById","deleteUser","UserCreateDto","findOneByOrFail","attrs","Object","assign","save","create","remove","WaiversMiddleware","WaiversController","ApiWaiversService","waiversService","getWaiverPriority","allWaivers","UserDto","PrimeButtonClass","ConferencesEnum","DivisionsEnum","ChaLogoEnum","TeamsEnum","module","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","app","NestFactory","port","PORT","setGlobalPrefix","useStaticAssets","join","__dirname","setBaseViewsDir","setViewEngine","enableCors","listen","Logger","bootstrap"],"sourceRoot":""}